{"ast":null,"code":"/*!\n * @license\n * TradingView Lightweight Chartsâ„¢ v4.0.1\n * Copyright (c) 2023 TradingView, Inc.\n * Licensed under Apache License 2.0 https://www.apache.org/licenses/LICENSE-2.0\n */\nimport { size as size$1, bindCanvasElementBitmapSizeTo, equalSizes, tryCreateCanvasRenderingTarget2D } from 'fancy-canvas';\n\n/**\n * Represents the possible line types.\n */\nvar LineType;\n(function (LineType) {\n  /**\n   * A line.\n   */\n  LineType[LineType[\"Simple\"] = 0] = \"Simple\";\n  /**\n   * A stepped line.\n   */\n  LineType[LineType[\"WithSteps\"] = 1] = \"WithSteps\";\n  /**\n   * A curved line.\n   */\n  LineType[LineType[\"Curved\"] = 2] = \"Curved\";\n})(LineType || (LineType = {}));\n/**\n * Represents the possible line styles.\n */\nvar LineStyle;\n(function (LineStyle) {\n  /**\n   * A solid line.\n   */\n  LineStyle[LineStyle[\"Solid\"] = 0] = \"Solid\";\n  /**\n   * A dotted line.\n   */\n  LineStyle[LineStyle[\"Dotted\"] = 1] = \"Dotted\";\n  /**\n   * A dashed line.\n   */\n  LineStyle[LineStyle[\"Dashed\"] = 2] = \"Dashed\";\n  /**\n   * A dashed line with bigger dashes.\n   */\n  LineStyle[LineStyle[\"LargeDashed\"] = 3] = \"LargeDashed\";\n  /**\n   * A dottled line with more space between dots.\n   */\n  LineStyle[LineStyle[\"SparseDotted\"] = 4] = \"SparseDotted\";\n})(LineStyle || (LineStyle = {}));\nfunction setLineStyle(ctx, style) {\n  const dashPatterns = {\n    [0 /* LineStyle.Solid */]: [],\n    [1 /* LineStyle.Dotted */]: [ctx.lineWidth, ctx.lineWidth],\n    [2 /* LineStyle.Dashed */]: [2 * ctx.lineWidth, 2 * ctx.lineWidth],\n    [3 /* LineStyle.LargeDashed */]: [6 * ctx.lineWidth, 6 * ctx.lineWidth],\n    [4 /* LineStyle.SparseDotted */]: [ctx.lineWidth, 4 * ctx.lineWidth]\n  };\n  const dashPattern = dashPatterns[style];\n  ctx.setLineDash(dashPattern);\n}\nfunction drawHorizontalLine(ctx, y, left, right) {\n  ctx.beginPath();\n  const correction = ctx.lineWidth % 2 ? 0.5 : 0;\n  ctx.moveTo(left, y + correction);\n  ctx.lineTo(right, y + correction);\n  ctx.stroke();\n}\nfunction drawVerticalLine(ctx, x, top, bottom) {\n  ctx.beginPath();\n  const correction = ctx.lineWidth % 2 ? 0.5 : 0;\n  ctx.moveTo(x + correction, top);\n  ctx.lineTo(x + correction, bottom);\n  ctx.stroke();\n}\nfunction strokeInPixel(ctx, drawFunction) {\n  ctx.save();\n  if (ctx.lineWidth % 2) {\n    ctx.translate(0.5, 0.5);\n  }\n  drawFunction();\n  ctx.restore();\n}\n\n/**\n * Checks an assertion. Throws if the assertion is failed.\n *\n * @param condition - Result of the assertion evaluation\n * @param message - Text to include in the exception message\n */\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error('Assertion failed' + (message ? ': ' + message : ''));\n  }\n}\nfunction ensureDefined(value) {\n  if (value === undefined) {\n    throw new Error('Value is undefined');\n  }\n  return value;\n}\nfunction ensureNotNull(value) {\n  if (value === null) {\n    throw new Error('Value is null');\n  }\n  return value;\n}\nfunction ensure(value) {\n  return ensureNotNull(ensureDefined(value));\n}\n/**\n * Compile time check for never\n */\nfunction ensureNever(value) {}\n\n/**\n * Note this object should be explicitly marked as public so that dts-bundle-generator does not mangle the property names.\n *\n * @public\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n */\nconst namedColorRgbHexStrings = {\n  // The order of properties in this Record is not important for the internal logic.\n  // It's just GZIPped better when props follows this order.\n  // Please add new colors to the end of the record.\n  khaki: '#f0e68c',\n  azure: '#f0ffff',\n  aliceblue: '#f0f8ff',\n  ghostwhite: '#f8f8ff',\n  gold: '#ffd700',\n  goldenrod: '#daa520',\n  gainsboro: '#dcdcdc',\n  gray: '#808080',\n  green: '#008000',\n  honeydew: '#f0fff0',\n  floralwhite: '#fffaf0',\n  lightblue: '#add8e6',\n  lightcoral: '#f08080',\n  lemonchiffon: '#fffacd',\n  hotpink: '#ff69b4',\n  lightyellow: '#ffffe0',\n  greenyellow: '#adff2f',\n  lightgoldenrodyellow: '#fafad2',\n  limegreen: '#32cd32',\n  linen: '#faf0e6',\n  lightcyan: '#e0ffff',\n  magenta: '#f0f',\n  maroon: '#800000',\n  olive: '#808000',\n  orange: '#ffa500',\n  oldlace: '#fdf5e6',\n  mediumblue: '#0000cd',\n  transparent: '#0000',\n  lime: '#0f0',\n  lightpink: '#ffb6c1',\n  mistyrose: '#ffe4e1',\n  moccasin: '#ffe4b5',\n  midnightblue: '#191970',\n  orchid: '#da70d6',\n  mediumorchid: '#ba55d3',\n  mediumturquoise: '#48d1cc',\n  orangered: '#ff4500',\n  royalblue: '#4169e1',\n  powderblue: '#b0e0e6',\n  red: '#f00',\n  coral: '#ff7f50',\n  turquoise: '#40e0d0',\n  white: '#fff',\n  whitesmoke: '#f5f5f5',\n  wheat: '#f5deb3',\n  teal: '#008080',\n  steelblue: '#4682b4',\n  bisque: '#ffe4c4',\n  aquamarine: '#7fffd4',\n  aqua: '#0ff',\n  sienna: '#a0522d',\n  silver: '#c0c0c0',\n  springgreen: '#00ff7f',\n  antiquewhite: '#faebd7',\n  burlywood: '#deb887',\n  brown: '#a52a2a',\n  beige: '#f5f5dc',\n  chocolate: '#d2691e',\n  chartreuse: '#7fff00',\n  cornflowerblue: '#6495ed',\n  cornsilk: '#fff8dc',\n  crimson: '#dc143c',\n  cadetblue: '#5f9ea0',\n  tomato: '#ff6347',\n  fuchsia: '#f0f',\n  blue: '#00f',\n  salmon: '#fa8072',\n  blanchedalmond: '#ffebcd',\n  slateblue: '#6a5acd',\n  slategray: '#708090',\n  thistle: '#d8bfd8',\n  tan: '#d2b48c',\n  cyan: '#0ff',\n  darkblue: '#00008b',\n  darkcyan: '#008b8b',\n  darkgoldenrod: '#b8860b',\n  darkgray: '#a9a9a9',\n  blueviolet: '#8a2be2',\n  black: '#000',\n  darkmagenta: '#8b008b',\n  darkslateblue: '#483d8b',\n  darkkhaki: '#bdb76b',\n  darkorchid: '#9932cc',\n  darkorange: '#ff8c00',\n  darkgreen: '#006400',\n  darkred: '#8b0000',\n  dodgerblue: '#1e90ff',\n  darkslategray: '#2f4f4f',\n  dimgray: '#696969',\n  deepskyblue: '#00bfff',\n  firebrick: '#b22222',\n  forestgreen: '#228b22',\n  indigo: '#4b0082',\n  ivory: '#fffff0',\n  lavenderblush: '#fff0f5',\n  feldspar: '#d19275',\n  indianred: '#cd5c5c',\n  lightgreen: '#90ee90',\n  lightgrey: '#d3d3d3',\n  lightskyblue: '#87cefa',\n  lightslategray: '#789',\n  lightslateblue: '#8470ff',\n  snow: '#fffafa',\n  lightseagreen: '#20b2aa',\n  lightsalmon: '#ffa07a',\n  darksalmon: '#e9967a',\n  darkviolet: '#9400d3',\n  mediumpurple: '#9370d8',\n  mediumaquamarine: '#66cdaa',\n  skyblue: '#87ceeb',\n  lavender: '#e6e6fa',\n  lightsteelblue: '#b0c4de',\n  mediumvioletred: '#c71585',\n  mintcream: '#f5fffa',\n  navajowhite: '#ffdead',\n  navy: '#000080',\n  olivedrab: '#6b8e23',\n  palevioletred: '#d87093',\n  violetred: '#d02090',\n  yellow: '#ff0',\n  yellowgreen: '#9acd32',\n  lawngreen: '#7cfc00',\n  pink: '#ffc0cb',\n  paleturquoise: '#afeeee',\n  palegoldenrod: '#eee8aa',\n  darkolivegreen: '#556b2f',\n  darkseagreen: '#8fbc8f',\n  darkturquoise: '#00ced1',\n  peachpuff: '#ffdab9',\n  deeppink: '#ff1493',\n  violet: '#ee82ee',\n  palegreen: '#98fb98',\n  mediumseagreen: '#3cb371',\n  peru: '#cd853f',\n  saddlebrown: '#8b4513',\n  sandybrown: '#f4a460',\n  rosybrown: '#bc8f8f',\n  purple: '#800080',\n  seagreen: '#2e8b57',\n  seashell: '#fff5ee',\n  papayawhip: '#ffefd5',\n  mediumslateblue: '#7b68ee',\n  plum: '#dda0dd',\n  mediumspringgreen: '#00fa9a'\n};\nfunction normalizeRgbComponent(component) {\n  if (component < 0) {\n    return 0;\n  }\n  if (component > 255) {\n    return 255;\n  }\n  // NaN values are treated as 0\n  return Math.round(component) || 0;\n}\nfunction normalizeAlphaComponent(component) {\n  return !(component <= 0) && !(component > 0) ? 0 : component < 0 ? 0 : component > 1 ? 1 :\n  // limit the precision of all numbers to at most 4 digits in fractional part\n  Math.round(component * 10000) / 10000;\n}\n/**\n * @example\n * #fb0\n * @example\n * #f0f\n * @example\n * #f0fa\n */\nconst shortHexRe = /^#([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])?$/i;\n/**\n * @example\n * #00ff00\n * @example\n * #336699\n * @example\n * #336699FA\n */\nconst hexRe = /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})?$/i;\n/**\n * @example\n * rgb(123, 234, 45)\n * @example\n * rgb(255,234,245)\n */\nconst rgbRe = /^rgb\\(\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*\\)$/;\n/**\n * @example\n * rgba(123, 234, 45, 1)\n * @example\n * rgba(255,234,245,0.1)\n */\nconst rgbaRe = /^rgba\\(\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?[\\d]{0,10}(?:\\.\\d+)?)\\s*\\)$/;\nfunction colorStringToRgba(colorString) {\n  colorString = colorString.toLowerCase();\n  // eslint-disable-next-line no-restricted-syntax\n  if (colorString in namedColorRgbHexStrings) {\n    colorString = namedColorRgbHexStrings[colorString];\n  }\n  {\n    const matches = rgbaRe.exec(colorString) || rgbRe.exec(colorString);\n    if (matches) {\n      return [normalizeRgbComponent(parseInt(matches[1], 10)), normalizeRgbComponent(parseInt(matches[2], 10)), normalizeRgbComponent(parseInt(matches[3], 10)), normalizeAlphaComponent(matches.length < 5 ? 1 : parseFloat(matches[4]))];\n    }\n  }\n  {\n    const matches = hexRe.exec(colorString);\n    if (matches) {\n      return [normalizeRgbComponent(parseInt(matches[1], 16)), normalizeRgbComponent(parseInt(matches[2], 16)), normalizeRgbComponent(parseInt(matches[3], 16)), 1];\n    }\n  }\n  {\n    const matches = shortHexRe.exec(colorString);\n    if (matches) {\n      return [normalizeRgbComponent(parseInt(matches[1], 16) * 0x11), normalizeRgbComponent(parseInt(matches[2], 16) * 0x11), normalizeRgbComponent(parseInt(matches[3], 16) * 0x11), 1];\n    }\n  }\n  throw new Error(`Cannot parse color: ${colorString}`);\n}\nfunction rgbaToGrayscale(rgbValue) {\n  // Originally, the NTSC RGB to YUV formula\n  // perfected by @eugene-korobko's black magic\n  const redComponentGrayscaleWeight = 0.199;\n  const greenComponentGrayscaleWeight = 0.687;\n  const blueComponentGrayscaleWeight = 0.114;\n  return redComponentGrayscaleWeight * rgbValue[0] + greenComponentGrayscaleWeight * rgbValue[1] + blueComponentGrayscaleWeight * rgbValue[2];\n}\nfunction applyAlpha(color, alpha) {\n  // special case optimization\n  if (color === 'transparent') {\n    return color;\n  }\n  const originRgba = colorStringToRgba(color);\n  const originAlpha = originRgba[3];\n  return `rgba(${originRgba[0]}, ${originRgba[1]}, ${originRgba[2]}, ${alpha * originAlpha})`;\n}\nfunction generateContrastColors(backgroundColor) {\n  const rgb = colorStringToRgba(backgroundColor);\n  return {\n    _internal_background: `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`,\n    _internal_foreground: rgbaToGrayscale(rgb) > 160 ? 'black' : 'white'\n  };\n}\nfunction gradientColorAtPercent(topColor, bottomColor, percent) {\n  const [topR, topG, topB, topA] = colorStringToRgba(topColor);\n  const [bottomR, bottomG, bottomB, bottomA] = colorStringToRgba(bottomColor);\n  const resultRgba = [normalizeRgbComponent(topR + percent * (bottomR - topR)), normalizeRgbComponent(topG + percent * (bottomG - topG)), normalizeRgbComponent(topB + percent * (bottomB - topB)), normalizeAlphaComponent(topA + percent * (bottomA - topA))];\n  return `rgba(${resultRgba[0]}, ${resultRgba[1]}, ${resultRgba[2]}, ${resultRgba[3]})`;\n}\nclass Delegate {\n  constructor() {\n    this._private__listeners = [];\n  }\n  _internal_subscribe(callback, linkedObject, singleshot) {\n    const listener = {\n      _internal_callback: callback,\n      _internal_linkedObject: linkedObject,\n      _internal_singleshot: singleshot === true\n    };\n    this._private__listeners.push(listener);\n  }\n  _internal_unsubscribe(callback) {\n    const index = this._private__listeners.findIndex(listener => callback === listener._internal_callback);\n    if (index > -1) {\n      this._private__listeners.splice(index, 1);\n    }\n  }\n  _internal_unsubscribeAll(linkedObject) {\n    this._private__listeners = this._private__listeners.filter(listener => listener._internal_linkedObject !== linkedObject);\n  }\n  _internal_fire(param1, param2, param3) {\n    const listenersSnapshot = [...this._private__listeners];\n    this._private__listeners = this._private__listeners.filter(listener => !listener._internal_singleshot);\n    listenersSnapshot.forEach(listener => listener._internal_callback(param1, param2, param3));\n  }\n  _internal_hasListeners() {\n    return this._private__listeners.length > 0;\n  }\n  _internal_destroy() {\n    this._private__listeners = [];\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction merge(dst, ...sources) {\n  for (const src of sources) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const i in src) {\n      if (src[i] === undefined) {\n        continue;\n      }\n      if ('object' !== typeof src[i] || dst[i] === undefined) {\n        dst[i] = src[i];\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        merge(dst[i], src[i]);\n      }\n    }\n  }\n  return dst;\n}\nfunction isNumber(value) {\n  return typeof value === 'number' && isFinite(value);\n}\nfunction isInteger(value) {\n  return typeof value === 'number' && value % 1 === 0;\n}\nfunction isString(value) {\n  return typeof value === 'string';\n}\nfunction isBoolean(value) {\n  return typeof value === 'boolean';\n}\nfunction clone(object) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = object;\n  if (!o || 'object' !== typeof o) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return o;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let c;\n  if (Array.isArray(o)) {\n    c = [];\n  } else {\n    c = {};\n  }\n  let p;\n  let v;\n  // eslint-disable-next-line no-restricted-syntax\n  for (p in o) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,no-prototype-builtins\n    if (o.hasOwnProperty(p)) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      v = o[p];\n      if (v && 'object' === typeof v) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        c[p] = clone(v);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        c[p] = v;\n      }\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return c;\n}\nfunction notNull(t) {\n  return t !== null;\n}\nfunction undefinedIfNull(t) {\n  return t === null ? undefined : t;\n}\n\n/**\n * Default font family.\n * Must be used to generate font string when font is not specified.\n */\nconst defaultFontFamily = `-apple-system, BlinkMacSystemFont, 'Trebuchet MS', Roboto, Ubuntu, sans-serif`;\n/**\n * Generates a font string, which can be used to set in canvas' font property.\n * If no family provided, {@link defaultFontFamily} will be used.\n *\n * @param size - Font size in pixels.\n * @param family - Optional font family.\n * @param style - Optional font style.\n * @returns The font string.\n */\nfunction makeFont(size, family, style) {\n  if (style !== undefined) {\n    style = `${style} `;\n  } else {\n    style = '';\n  }\n  if (family === undefined) {\n    family = defaultFontFamily;\n  }\n  return `${style}${size}px ${family}`;\n}\nclass PriceAxisRendererOptionsProvider {\n  constructor(chartModel) {\n    this._private__rendererOptions = {\n      _internal_borderSize: 1 /* RendererConstants.BorderSize */,\n      _internal_tickLength: 5 /* RendererConstants.TickLength */,\n      _internal_fontSize: NaN,\n      _internal_font: '',\n      _internal_fontFamily: '',\n      _internal_color: '',\n      _internal_paneBackgroundColor: '',\n      _internal_paddingBottom: 0,\n      _internal_paddingInner: 0,\n      _internal_paddingOuter: 0,\n      _internal_paddingTop: 0,\n      _internal_baselineOffset: 0\n    };\n    this._private__chartModel = chartModel;\n  }\n  _internal_options() {\n    const rendererOptions = this._private__rendererOptions;\n    const currentFontSize = this._private__fontSize();\n    const currentFontFamily = this._private__fontFamily();\n    if (rendererOptions._internal_fontSize !== currentFontSize || rendererOptions._internal_fontFamily !== currentFontFamily) {\n      rendererOptions._internal_fontSize = currentFontSize;\n      rendererOptions._internal_fontFamily = currentFontFamily;\n      rendererOptions._internal_font = makeFont(currentFontSize, currentFontFamily);\n      rendererOptions._internal_paddingTop = 2.5 / 12 * currentFontSize; // 2.5 px for 12px font\n      rendererOptions._internal_paddingBottom = rendererOptions._internal_paddingTop;\n      rendererOptions._internal_paddingInner = currentFontSize / 12 * rendererOptions._internal_tickLength;\n      rendererOptions._internal_paddingOuter = currentFontSize / 12 * rendererOptions._internal_tickLength;\n      rendererOptions._internal_baselineOffset = 0;\n    }\n    rendererOptions._internal_color = this._private__textColor();\n    rendererOptions._internal_paneBackgroundColor = this._private__paneBackgroundColor();\n    return this._private__rendererOptions;\n  }\n  _private__textColor() {\n    return this._private__chartModel._internal_options().layout.textColor;\n  }\n  _private__paneBackgroundColor() {\n    return this._private__chartModel._internal_backgroundTopColor();\n  }\n  _private__fontSize() {\n    return this._private__chartModel._internal_options().layout.fontSize;\n  }\n  _private__fontFamily() {\n    return this._private__chartModel._internal_options().layout.fontFamily;\n  }\n}\nclass CompositeRenderer {\n  constructor() {\n    this._private__renderers = [];\n  }\n  _internal_setRenderers(renderers) {\n    this._private__renderers = renderers;\n  }\n  _internal_draw(target, isHovered, hitTestData) {\n    this._private__renderers.forEach(r => {\n      r._internal_draw(target, isHovered, hitTestData);\n    });\n  }\n}\nclass MediaCoordinatesPaneRenderer {\n  _internal_draw(target, isHovered, hitTestData) {\n    target.useMediaCoordinateSpace(scope => this._internal__drawImpl(scope, isHovered, hitTestData));\n  }\n  _internal_drawBackground(target, isHovered, hitTestData) {\n    target.useMediaCoordinateSpace(scope => this._internal__drawBackgroundImpl(scope, isHovered, hitTestData));\n  }\n  _internal__drawBackgroundImpl(renderingScope, isHovered, hitTestData) {}\n}\nclass PaneRendererMarks extends MediaCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._internal__data = null;\n  }\n  _internal_setData(data) {\n    this._internal__data = data;\n  }\n  _internal__drawImpl({\n    context: ctx\n  }) {\n    if (this._internal__data === null || this._internal__data._internal_visibleRange === null) {\n      return;\n    }\n    const visibleRange = this._internal__data._internal_visibleRange;\n    const data = this._internal__data;\n    const draw = radius => {\n      ctx.beginPath();\n      for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n        const point = data._internal_items[i];\n        ctx.moveTo(point._internal_x, point._internal_y);\n        ctx.arc(point._internal_x, point._internal_y, radius, 0, Math.PI * 2);\n      }\n      ctx.fill();\n    };\n    if (data._internal_lineWidth > 0) {\n      ctx.fillStyle = data._internal_backColor;\n      draw(data._internal_radius + data._internal_lineWidth);\n    }\n    ctx.fillStyle = data._internal_lineColor;\n    draw(data._internal_radius);\n  }\n}\nfunction createEmptyMarkerData() {\n  return {\n    _internal_items: [{\n      _internal_x: 0,\n      _internal_y: 0,\n      _internal_time: 0,\n      _internal_price: 0\n    }],\n    _internal_lineColor: '',\n    _internal_backColor: '',\n    _internal_radius: 0,\n    _internal_lineWidth: 0,\n    _internal_visibleRange: null\n  };\n}\nconst rangeForSinglePoint = {\n  from: 0,\n  to: 1\n};\nclass CrosshairMarksPaneView {\n  constructor(chartModel, crosshair) {\n    this._private__compositeRenderer = new CompositeRenderer();\n    this._private__markersRenderers = [];\n    this._private__markersData = [];\n    this._private__invalidated = true;\n    this._private__chartModel = chartModel;\n    this._private__crosshair = crosshair;\n    this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n  }\n  _internal_update(updateType) {\n    const serieses = this._private__chartModel._internal_serieses();\n    if (serieses.length !== this._private__markersRenderers.length) {\n      this._private__markersData = serieses.map(createEmptyMarkerData);\n      this._private__markersRenderers = this._private__markersData.map(data => {\n        const res = new PaneRendererMarks();\n        res._internal_setData(data);\n        return res;\n      });\n      this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n    }\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n    }\n    return this._private__compositeRenderer;\n  }\n  _private__updateImpl() {\n    const serieses = this._private__chartModel._internal_serieses();\n    const timePointIndex = this._private__crosshair._internal_appliedIndex();\n    const timeScale = this._private__chartModel._internal_timeScale();\n    serieses.forEach((s, index) => {\n      var _a;\n      const data = this._private__markersData[index];\n      const seriesData = s._internal_markerDataAtIndex(timePointIndex);\n      if (seriesData === null || !s._internal_visible()) {\n        data._internal_visibleRange = null;\n        return;\n      }\n      const firstValue = ensureNotNull(s._internal_firstValue());\n      data._internal_lineColor = seriesData._internal_backgroundColor;\n      data._internal_radius = seriesData._internal_radius;\n      data._internal_lineWidth = seriesData._internal_borderWidth;\n      data._internal_items[0]._internal_price = seriesData._internal_price;\n      data._internal_items[0]._internal_y = s._internal_priceScale()._internal_priceToCoordinate(seriesData._internal_price, firstValue._internal_value);\n      data._internal_backColor = (_a = seriesData._internal_borderColor) !== null && _a !== void 0 ? _a : this._private__chartModel._internal_backgroundColorAtYPercentFromTop(data._internal_items[0]._internal_y / s._internal_priceScale()._internal_height());\n      data._internal_items[0]._internal_time = timePointIndex;\n      data._internal_items[0]._internal_x = timeScale._internal_indexToCoordinate(timePointIndex);\n      data._internal_visibleRange = rangeForSinglePoint;\n    });\n  }\n}\nclass BitmapCoordinatesPaneRenderer {\n  _internal_draw(target, isHovered, hitTestData) {\n    target.useBitmapCoordinateSpace(scope => this._internal__drawImpl(scope, isHovered, hitTestData));\n  }\n}\nclass CrosshairRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor(data) {\n    super();\n    this._private__data = data;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null) {\n      return;\n    }\n    const vertLinesVisible = this._private__data._internal_vertLine._internal_visible;\n    const horzLinesVisible = this._private__data._internal_horzLine._internal_visible;\n    if (!vertLinesVisible && !horzLinesVisible) {\n      return;\n    }\n    const x = Math.round(this._private__data._internal_x * horizontalPixelRatio);\n    const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n    ctx.lineCap = 'butt';\n    if (vertLinesVisible && x >= 0) {\n      ctx.lineWidth = Math.floor(this._private__data._internal_vertLine._internal_lineWidth * horizontalPixelRatio);\n      ctx.strokeStyle = this._private__data._internal_vertLine._internal_color;\n      ctx.fillStyle = this._private__data._internal_vertLine._internal_color;\n      setLineStyle(ctx, this._private__data._internal_vertLine._internal_lineStyle);\n      drawVerticalLine(ctx, x, 0, bitmapSize.height);\n    }\n    if (horzLinesVisible && y >= 0) {\n      ctx.lineWidth = Math.floor(this._private__data._internal_horzLine._internal_lineWidth * verticalPixelRatio);\n      ctx.strokeStyle = this._private__data._internal_horzLine._internal_color;\n      ctx.fillStyle = this._private__data._internal_horzLine._internal_color;\n      setLineStyle(ctx, this._private__data._internal_horzLine._internal_lineStyle);\n      drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n    }\n  }\n}\nclass CrosshairPaneView {\n  constructor(source) {\n    this._private__invalidated = true;\n    this._private__rendererData = {\n      _internal_vertLine: {\n        _internal_lineWidth: 1,\n        _internal_lineStyle: 0,\n        _internal_color: '',\n        _internal_visible: false\n      },\n      _internal_horzLine: {\n        _internal_lineWidth: 1,\n        _internal_lineStyle: 0,\n        _internal_color: '',\n        _internal_visible: false\n      },\n      _internal_x: 0,\n      _internal_y: 0\n    };\n    this._private__renderer = new CrosshairRenderer(this._private__rendererData);\n    this._private__source = source;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n    }\n    return this._private__renderer;\n  }\n  _private__updateImpl() {\n    const visible = this._private__source._internal_visible();\n    const pane = ensureNotNull(this._private__source._internal_pane());\n    const crosshairOptions = pane._internal_model()._internal_options().crosshair;\n    const data = this._private__rendererData;\n    data._internal_horzLine._internal_visible = visible && this._private__source._internal_horzLineVisible(pane);\n    data._internal_vertLine._internal_visible = visible && this._private__source._internal_vertLineVisible();\n    data._internal_horzLine._internal_lineWidth = crosshairOptions.horzLine.width;\n    data._internal_horzLine._internal_lineStyle = crosshairOptions.horzLine.style;\n    data._internal_horzLine._internal_color = crosshairOptions.horzLine.color;\n    data._internal_vertLine._internal_lineWidth = crosshairOptions.vertLine.width;\n    data._internal_vertLine._internal_lineStyle = crosshairOptions.vertLine.style;\n    data._internal_vertLine._internal_color = crosshairOptions.vertLine.color;\n    data._internal_x = this._private__source._internal_appliedX();\n    data._internal_y = this._private__source._internal_appliedY();\n  }\n}\n\n/**\n * Fills rectangle's inner border (so, all the filled area is limited by the [x, x + width]*[y, y + height] region)\n * ```\n * (x, y)\n * O***********************|*****\n * |        border         |  ^\n * |   *****************   |  |\n * |   |               |   |  |\n * | b |               | b |  h\n * | o |               | o |  e\n * | r |               | r |  i\n * | d |               | d |  g\n * | e |               | e |  h\n * | r |               | r |  t\n * |   |               |   |  |\n * |   *****************   |  |\n * |        border         |  v\n * |***********************|*****\n * |                       |\n * |<------- width ------->|\n * ```\n *\n * @param ctx - Context to draw on\n * @param x - Left side of the target rectangle\n * @param y - Top side of the target rectangle\n * @param width - Width of the target rectangle\n * @param height - Height of the target rectangle\n * @param borderWidth - Width of border to fill, must be less than width and height of the target rectangle\n */\nfunction fillRectInnerBorder(ctx, x, y, width, height, borderWidth) {\n  // horizontal (top and bottom) edges\n  ctx.fillRect(x + borderWidth, y, width - borderWidth * 2, borderWidth);\n  ctx.fillRect(x + borderWidth, y + height - borderWidth, width - borderWidth * 2, borderWidth);\n  // vertical (left and right) edges\n  ctx.fillRect(x, y, borderWidth, height);\n  ctx.fillRect(x + width - borderWidth, y, borderWidth, height);\n}\nfunction clearRect(ctx, x, y, w, h, clearColor) {\n  ctx.save();\n  ctx.globalCompositeOperation = 'copy';\n  ctx.fillStyle = clearColor;\n  ctx.fillRect(x, y, w, h);\n  ctx.restore();\n}\nfunction changeBorderRadius(borderRadius, offset) {\n  if (Array.isArray(borderRadius)) {\n    return borderRadius.map(x => x === 0 ? x : x + offset);\n  }\n  return borderRadius + offset;\n}\nfunction drawRoundRect(\n// eslint:disable-next-line:max-params\nctx, x, y, w, h, radii) {\n  let radiusLeftTop;\n  let radiusRightTop;\n  let radiusRightBottom;\n  let radiusLeftBottom;\n  if (!Array.isArray(radii)) {\n    const oneRadius = Math.max(0, radii);\n    radiusLeftTop = oneRadius;\n    radiusRightTop = oneRadius;\n    radiusRightBottom = oneRadius;\n    radiusLeftBottom = oneRadius;\n  } else if (radii.length === 2) {\n    const cornerRadius1 = Math.max(0, radii[0]);\n    const cornerRadius2 = Math.max(0, radii[1]);\n    radiusLeftTop = cornerRadius1;\n    radiusRightTop = cornerRadius1;\n    radiusRightBottom = cornerRadius2;\n    radiusLeftBottom = cornerRadius2;\n  } else if (radii.length === 4) {\n    radiusLeftTop = Math.max(0, radii[0]);\n    radiusRightTop = Math.max(0, radii[1]);\n    radiusRightBottom = Math.max(0, radii[2]);\n    radiusLeftBottom = Math.max(0, radii[3]);\n  } else {\n    throw new Error(`Wrong border radius - it should be like css border radius`);\n  }\n  ctx.beginPath();\n  ctx.moveTo(x + radiusLeftTop, y);\n  ctx.lineTo(x + w - radiusRightTop, y);\n  if (radiusRightTop !== 0) {\n    ctx.arcTo(x + w, y, x + w, y + radiusRightTop, radiusRightTop);\n  }\n  ctx.lineTo(x + w, y + h - radiusRightBottom);\n  if (radiusRightBottom !== 0) {\n    ctx.arcTo(x + w, y + h, x + w - radiusRightBottom, y + h, radiusRightBottom);\n  }\n  ctx.lineTo(x + radiusLeftBottom, y + h);\n  if (radiusLeftBottom !== 0) {\n    ctx.arcTo(x, y + h, x, y + h - radiusLeftBottom, radiusLeftBottom);\n  }\n  ctx.lineTo(x, y + radiusLeftTop);\n  if (radiusLeftTop !== 0) {\n    ctx.arcTo(x, y, x + radiusLeftTop, y, radiusLeftTop);\n  }\n}\n// eslint-disable-next-line max-params\nfunction drawRoundRectWithInnerBorder(ctx, left, top, width, height, backgroundColor, borderWidth = 0, borderRadius = 0, borderColor = '') {\n  ctx.save();\n  if (!borderWidth || !borderColor || borderColor === backgroundColor) {\n    drawRoundRect(ctx, left, top, width, height, borderRadius);\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n    return;\n  }\n  const halfBorderWidth = borderWidth / 2;\n  // Draw body\n  if (backgroundColor !== 'transparent') {\n    const innerRadii = changeBorderRadius(borderRadius, -borderWidth);\n    drawRoundRect(ctx, left + borderWidth, top + borderWidth, width - borderWidth * 2, height - borderWidth * 2, innerRadii);\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n  }\n  // Draw border\n  if (borderColor !== 'transparent') {\n    const outerRadii = changeBorderRadius(borderRadius, -halfBorderWidth);\n    drawRoundRect(ctx, left + halfBorderWidth, top + halfBorderWidth, width - borderWidth, height - borderWidth, outerRadii);\n    ctx.lineWidth = borderWidth;\n    ctx.strokeStyle = borderColor;\n    ctx.closePath();\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n// eslint-disable-next-line max-params\nfunction clearRectWithGradient(ctx, x, y, w, h, topColor, bottomColor) {\n  ctx.save();\n  ctx.globalCompositeOperation = 'copy';\n  const gradient = ctx.createLinearGradient(0, 0, 0, h);\n  gradient.addColorStop(0, topColor);\n  gradient.addColorStop(1, bottomColor);\n  ctx.fillStyle = gradient;\n  ctx.fillRect(x, y, w, h);\n  ctx.restore();\n}\nclass PriceAxisViewRenderer {\n  constructor(data, commonData) {\n    this._internal_setData(data, commonData);\n  }\n  _internal_setData(data, commonData) {\n    this._private__data = data;\n    this._private__commonData = commonData;\n  }\n  _internal_height(rendererOptions, useSecondLine) {\n    if (!this._private__data._internal_visible) {\n      return 0;\n    }\n    return rendererOptions._internal_fontSize + rendererOptions._internal_paddingTop + rendererOptions._internal_paddingBottom;\n  }\n  _internal_draw(target, rendererOptions, textWidthCache, align) {\n    if (!this._private__data._internal_visible || this._private__data._internal_text.length === 0) {\n      return;\n    }\n    const textColor = this._private__data._internal_color;\n    const backgroundColor = this._private__commonData._internal_background;\n    const geometry = target.useBitmapCoordinateSpace(scope => {\n      const ctx = scope.context;\n      ctx.font = rendererOptions._internal_font;\n      const geom = this._private__calculateGeometry(scope, rendererOptions, textWidthCache, align);\n      const gb = geom._internal_bitmap;\n      const drawLabelBody = (labelBackgroundColor, labelBorderColor) => {\n        if (geom._internal_alignRight) {\n          drawRoundRectWithInnerBorder(ctx, gb._internal_xOutside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, labelBackgroundColor, gb._internal_horzBorder, [gb._internal_radius, 0, 0, gb._internal_radius], labelBorderColor);\n        } else {\n          drawRoundRectWithInnerBorder(ctx, gb._internal_xInside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, labelBackgroundColor, gb._internal_horzBorder, [0, gb._internal_radius, gb._internal_radius, 0], labelBorderColor);\n        }\n      };\n      // draw border\n      // draw label background\n      drawLabelBody(backgroundColor, 'transparent');\n      // draw tick\n      if (this._private__data._internal_tickVisible) {\n        ctx.fillStyle = textColor;\n        ctx.fillRect(gb._internal_xInside, gb._internal_yMid, gb._internal_xTick - gb._internal_xInside, gb._internal_tickHeight);\n      }\n      // draw label border above the tick\n      drawLabelBody('transparent', backgroundColor);\n      // draw separator\n      if (this._private__data._internal_borderVisible) {\n        ctx.fillStyle = rendererOptions._internal_paneBackgroundColor;\n        ctx.fillRect(geom._internal_alignRight ? gb._internal_right - gb._internal_horzBorder : 0, gb._internal_yTop, gb._internal_horzBorder, gb._internal_yBottom - gb._internal_yTop);\n      }\n      return geom;\n    });\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      const gm = geometry._internal_media;\n      ctx.font = rendererOptions._internal_font;\n      ctx.textAlign = geometry._internal_alignRight ? 'right' : 'left';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = textColor;\n      ctx.fillText(this._private__data._internal_text, gm._internal_xText, (gm._internal_yTop + gm._internal_yBottom) / 2 + gm._internal_textMidCorrection);\n    });\n  }\n  _private__calculateGeometry(scope, rendererOptions, textWidthCache, align) {\n    var _a;\n    const {\n      context: ctx,\n      bitmapSize,\n      mediaSize,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = scope;\n    const tickSize = this._private__data._internal_tickVisible || !this._private__data._internal_moveTextToInvisibleTick ? rendererOptions._internal_tickLength : 0;\n    const horzBorder = this._private__data._internal_separatorVisible ? rendererOptions._internal_borderSize : 0;\n    const paddingTop = rendererOptions._internal_paddingTop + this._private__commonData._internal_additionalPaddingTop;\n    const paddingBottom = rendererOptions._internal_paddingBottom + this._private__commonData._internal_additionalPaddingBottom;\n    const paddingInner = rendererOptions._internal_paddingInner;\n    const paddingOuter = rendererOptions._internal_paddingOuter;\n    const text = this._private__data._internal_text;\n    const actualTextHeight = rendererOptions._internal_fontSize;\n    const textMidCorrection = textWidthCache._internal_yMidCorrection(ctx, text);\n    const textWidth = Math.ceil(textWidthCache._internal_measureText(ctx, text));\n    const totalHeight = actualTextHeight + paddingTop + paddingBottom;\n    const totalWidth = rendererOptions._internal_borderSize + paddingInner + paddingOuter + textWidth + tickSize;\n    const tickHeightBitmap = Math.max(1, Math.floor(verticalPixelRatio));\n    let totalHeightBitmap = Math.round(totalHeight * verticalPixelRatio);\n    if (totalHeightBitmap % 2 !== tickHeightBitmap % 2) {\n      totalHeightBitmap += 1;\n    }\n    const horzBorderBitmap = horzBorder > 0 ? Math.max(1, Math.floor(horzBorder * horizontalPixelRatio)) : 0;\n    const totalWidthBitmap = Math.round(totalWidth * horizontalPixelRatio);\n    // tick overlaps scale border\n    const tickSizeBitmap = Math.round(tickSize * horizontalPixelRatio);\n    const yMid = (_a = this._private__commonData._internal_fixedCoordinate) !== null && _a !== void 0 ? _a : this._private__commonData._internal_coordinate;\n    const yMidBitmap = Math.round(yMid * verticalPixelRatio) - Math.floor(verticalPixelRatio * 0.5);\n    const yTopBitmap = Math.floor(yMidBitmap + tickHeightBitmap / 2 - totalHeightBitmap / 2);\n    const yBottomBitmap = yTopBitmap + totalHeightBitmap;\n    const alignRight = align === 'right';\n    const xInside = alignRight ? mediaSize.width - horzBorder : horzBorder;\n    const xInsideBitmap = alignRight ? bitmapSize.width - horzBorderBitmap : horzBorderBitmap;\n    let xOutsideBitmap;\n    let xTickBitmap;\n    let xText;\n    if (alignRight) {\n      // 2               1\n      //\n      //              6  5\n      //\n      // 3               4\n      xOutsideBitmap = xInsideBitmap - totalWidthBitmap;\n      xTickBitmap = xInsideBitmap - tickSizeBitmap;\n      xText = xInside - tickSize - paddingInner - horzBorder;\n    } else {\n      // 1               2\n      //\n      // 6  5\n      //\n      // 4               3\n      xOutsideBitmap = xInsideBitmap + totalWidthBitmap;\n      xTickBitmap = xInsideBitmap + tickSizeBitmap;\n      xText = xInside + tickSize + paddingInner;\n    }\n    return {\n      _internal_alignRight: alignRight,\n      _internal_bitmap: {\n        _internal_yTop: yTopBitmap,\n        _internal_yMid: yMidBitmap,\n        _internal_yBottom: yBottomBitmap,\n        _internal_totalWidth: totalWidthBitmap,\n        _internal_totalHeight: totalHeightBitmap,\n        // TODO: it is better to have different horizontal and vertical radii\n        _internal_radius: 2 * horizontalPixelRatio,\n        _internal_horzBorder: horzBorderBitmap,\n        _internal_xOutside: xOutsideBitmap,\n        _internal_xInside: xInsideBitmap,\n        _internal_xTick: xTickBitmap,\n        _internal_tickHeight: tickHeightBitmap,\n        _internal_right: bitmapSize.width\n      },\n      _internal_media: {\n        _internal_yTop: yTopBitmap / verticalPixelRatio,\n        _internal_yBottom: yBottomBitmap / verticalPixelRatio,\n        _internal_xText: xText,\n        _internal_textMidCorrection: textMidCorrection\n      }\n    };\n  }\n}\nclass PriceAxisView {\n  constructor(ctor) {\n    this._private__commonRendererData = {\n      _internal_coordinate: 0,\n      _internal_background: '#000',\n      _internal_additionalPaddingBottom: 0,\n      _internal_additionalPaddingTop: 0\n    };\n    this._private__axisRendererData = {\n      _internal_text: '',\n      _internal_visible: false,\n      _internal_tickVisible: true,\n      _internal_moveTextToInvisibleTick: false,\n      _internal_borderColor: '',\n      _internal_color: '#FFF',\n      _internal_borderVisible: false,\n      _internal_separatorVisible: false\n    };\n    this._private__paneRendererData = {\n      _internal_text: '',\n      _internal_visible: false,\n      _internal_tickVisible: false,\n      _internal_moveTextToInvisibleTick: true,\n      _internal_borderColor: '',\n      _internal_color: '#FFF',\n      _internal_borderVisible: true,\n      _internal_separatorVisible: true\n    };\n    this._private__invalidated = true;\n    this._private__axisRenderer = new (ctor || PriceAxisViewRenderer)(this._private__axisRendererData, this._private__commonRendererData);\n    this._private__paneRenderer = new (ctor || PriceAxisViewRenderer)(this._private__paneRendererData, this._private__commonRendererData);\n  }\n  _internal_text() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__axisRendererData._internal_text;\n  }\n  _internal_coordinate() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__commonRendererData._internal_coordinate;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_height(rendererOptions, useSecondLine = false) {\n    return Math.max(this._private__axisRenderer._internal_height(rendererOptions, useSecondLine), this._private__paneRenderer._internal_height(rendererOptions, useSecondLine));\n  }\n  _internal_getFixedCoordinate() {\n    return this._private__commonRendererData._internal_fixedCoordinate || 0;\n  }\n  _internal_setFixedCoordinate(value) {\n    this._private__commonRendererData._internal_fixedCoordinate = value;\n  }\n  _internal_isVisible() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__axisRendererData._internal_visible || this._private__paneRendererData._internal_visible;\n  }\n  _internal_isAxisLabelVisible() {\n    this._private__updateRendererDataIfNeeded();\n    return this._private__axisRendererData._internal_visible;\n  }\n  _internal_renderer(priceScale) {\n    this._private__updateRendererDataIfNeeded();\n    // force update tickVisible state from price scale options\n    // because we don't have and we can't have price axis in other methods\n    // (like paneRenderer or any other who call _updateRendererDataIfNeeded)\n    this._private__axisRendererData._internal_tickVisible = this._private__axisRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n    this._private__paneRendererData._internal_tickVisible = this._private__paneRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n    this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n    this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n    return this._private__axisRenderer;\n  }\n  _internal_paneRenderer() {\n    this._private__updateRendererDataIfNeeded();\n    this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n    this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n    return this._private__paneRenderer;\n  }\n  _private__updateRendererDataIfNeeded() {\n    if (this._private__invalidated) {\n      this._private__axisRendererData._internal_tickVisible = true;\n      this._private__paneRendererData._internal_tickVisible = false;\n      this._internal__updateRendererData(this._private__axisRendererData, this._private__paneRendererData, this._private__commonRendererData);\n    }\n  }\n}\nclass CrosshairPriceAxisView extends PriceAxisView {\n  constructor(source, priceScale, valueProvider) {\n    super();\n    this._private__source = source;\n    this._private__priceScale = priceScale;\n    this._private__valueProvider = valueProvider;\n  }\n  _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n    axisRendererData._internal_visible = false;\n    const options = this._private__source._internal_options().horzLine;\n    if (!options.labelVisible) {\n      return;\n    }\n    const firstValue = this._private__priceScale._internal_firstValue();\n    if (!this._private__source._internal_visible() || this._private__priceScale._internal_isEmpty() || firstValue === null) {\n      return;\n    }\n    const colors = generateContrastColors(options.labelBackgroundColor);\n    commonRendererData._internal_background = colors._internal_background;\n    axisRendererData._internal_color = colors._internal_foreground;\n    const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n    commonRendererData._internal_additionalPaddingTop = additionalPadding;\n    commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n    const value = this._private__valueProvider(this._private__priceScale);\n    commonRendererData._internal_coordinate = value._internal_coordinate;\n    axisRendererData._internal_text = this._private__priceScale._internal_formatPrice(value._internal_price, firstValue);\n    axisRendererData._internal_visible = true;\n  }\n}\nconst optimizationReplacementRe = /[1-9]/g;\nconst radius$1 = 2;\nclass TimeAxisViewRenderer {\n  constructor() {\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_draw(target, rendererOptions) {\n    if (this._private__data === null || this._private__data._internal_visible === false || this._private__data._internal_text.length === 0) {\n      return;\n    }\n    const textWidth = target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      ctx.font = rendererOptions._internal_font;\n      return Math.round(rendererOptions._internal_widthCache._internal_measureText(ctx, ensureNotNull(this._private__data)._internal_text, optimizationReplacementRe));\n    });\n    if (textWidth <= 0) {\n      return;\n    }\n    const horzMargin = rendererOptions._internal_paddingHorizontal;\n    const labelWidth = textWidth + 2 * horzMargin;\n    const labelWidthHalf = labelWidth / 2;\n    const timeScaleWidth = this._private__data._internal_width;\n    let coordinate = this._private__data._internal_coordinate;\n    let x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    if (x1 < 0) {\n      coordinate = coordinate + Math.abs(0 - x1);\n      x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    } else if (x1 + labelWidth > timeScaleWidth) {\n      coordinate = coordinate - Math.abs(timeScaleWidth - (x1 + labelWidth));\n      x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    }\n    const x2 = x1 + labelWidth;\n    const y1 = 0;\n    const y2 = Math.ceil(y1 + rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingTop + rendererOptions._internal_fontSize + rendererOptions._internal_paddingBottom);\n    target.useBitmapCoordinateSpace(({\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    }) => {\n      const data = ensureNotNull(this._private__data);\n      ctx.fillStyle = data._internal_background;\n      const x1scaled = Math.round(x1 * horizontalPixelRatio);\n      const y1scaled = Math.round(y1 * verticalPixelRatio);\n      const x2scaled = Math.round(x2 * horizontalPixelRatio);\n      const y2scaled = Math.round(y2 * verticalPixelRatio);\n      const radiusScaled = Math.round(radius$1 * horizontalPixelRatio);\n      ctx.beginPath();\n      ctx.moveTo(x1scaled, y1scaled);\n      ctx.lineTo(x1scaled, y2scaled - radiusScaled);\n      ctx.arcTo(x1scaled, y2scaled, x1scaled + radiusScaled, y2scaled, radiusScaled);\n      ctx.lineTo(x2scaled - radiusScaled, y2scaled);\n      ctx.arcTo(x2scaled, y2scaled, x2scaled, y2scaled - radiusScaled, radiusScaled);\n      ctx.lineTo(x2scaled, y1scaled);\n      ctx.fill();\n      if (data._internal_tickVisible) {\n        const tickX = Math.round(data._internal_coordinate * horizontalPixelRatio);\n        const tickTop = y1scaled;\n        const tickBottom = Math.round((tickTop + rendererOptions._internal_tickLength) * verticalPixelRatio);\n        ctx.fillStyle = data._internal_color;\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n        ctx.fillRect(tickX - tickOffset, tickTop, tickWidth, tickBottom - tickTop);\n      }\n    });\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      const data = ensureNotNull(this._private__data);\n      const yText = y1 + rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingTop + rendererOptions._internal_fontSize / 2;\n      ctx.font = rendererOptions._internal_font;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = data._internal_color;\n      const textYCorrection = rendererOptions._internal_widthCache._internal_yMidCorrection(ctx, 'Apr0');\n      ctx.translate(x1 + horzMargin, yText + textYCorrection);\n      ctx.fillText(data._internal_text, 0, 0);\n    });\n  }\n}\nclass CrosshairTimeAxisView {\n  constructor(crosshair, model, valueProvider) {\n    this._private__invalidated = true;\n    this._private__renderer = new TimeAxisViewRenderer();\n    this._private__rendererData = {\n      _internal_visible: false,\n      _internal_background: '#4c525e',\n      _internal_color: 'white',\n      _internal_text: '',\n      _internal_width: 0,\n      _internal_coordinate: NaN,\n      _internal_tickVisible: true\n    };\n    this._private__crosshair = crosshair;\n    this._private__model = model;\n    this._private__valueProvider = valueProvider;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n    }\n    this._private__renderer._internal_setData(this._private__rendererData);\n    return this._private__renderer;\n  }\n  _private__updateImpl() {\n    const data = this._private__rendererData;\n    data._internal_visible = false;\n    const options = this._private__crosshair._internal_options().vertLine;\n    if (!options.labelVisible) {\n      return;\n    }\n    const timeScale = this._private__model._internal_timeScale();\n    if (timeScale._internal_isEmpty()) {\n      return;\n    }\n    data._internal_width = timeScale._internal_width();\n    const value = this._private__valueProvider();\n    if (value === null) {\n      return;\n    }\n    data._internal_coordinate = value._internal_coordinate;\n    const currentTime = timeScale._internal_indexToTimeScalePoint(this._private__crosshair._internal_appliedIndex());\n    data._internal_text = timeScale._internal_formatDateTime(ensureNotNull(currentTime));\n    data._internal_visible = true;\n    const colors = generateContrastColors(options.labelBackgroundColor);\n    data._internal_background = colors._internal_background;\n    data._internal_color = colors._internal_foreground;\n    data._internal_tickVisible = timeScale._internal_options().ticksVisible;\n  }\n}\nclass DataSource {\n  constructor() {\n    this._internal__priceScale = null;\n    this._private__zorder = 0;\n  }\n  _internal_zorder() {\n    return this._private__zorder;\n  }\n  _internal_setZorder(zorder) {\n    this._private__zorder = zorder;\n  }\n  _internal_priceScale() {\n    return this._internal__priceScale;\n  }\n  _internal_setPriceScale(priceScale) {\n    this._internal__priceScale = priceScale;\n  }\n  _internal_labelPaneViews(pane) {\n    return [];\n  }\n  _internal_timeAxisViews() {\n    return [];\n  }\n  _internal_visible() {\n    return true;\n  }\n}\n\n/**\n * Represents the crosshair mode.\n */\nvar CrosshairMode;\n(function (CrosshairMode) {\n  /**\n   * This mode allows crosshair to move freely on the chart.\n   */\n  CrosshairMode[CrosshairMode[\"Normal\"] = 0] = \"Normal\";\n  /**\n   * This mode sticks crosshair's horizontal line to the price value of a single-value series or to the close price of OHLC-based series.\n   */\n  CrosshairMode[CrosshairMode[\"Magnet\"] = 1] = \"Magnet\";\n})(CrosshairMode || (CrosshairMode = {}));\nclass Crosshair extends DataSource {\n  constructor(model, options) {\n    super();\n    this._private__pane = null;\n    this._private__price = NaN;\n    this._private__index = 0;\n    this._private__visible = true;\n    this._private__priceAxisViews = new Map();\n    this._private__subscribed = false;\n    this._private__x = NaN;\n    this._private__y = NaN;\n    this._private__originX = NaN;\n    this._private__originY = NaN;\n    this._private__model = model;\n    this._private__options = options;\n    this._private__markersPaneView = new CrosshairMarksPaneView(model, this);\n    const valuePriceProvider = (rawPriceProvider, rawCoordinateProvider) => {\n      return priceScale => {\n        const coordinate = rawCoordinateProvider();\n        const rawPrice = rawPriceProvider();\n        if (priceScale === ensureNotNull(this._private__pane)._internal_defaultPriceScale()) {\n          // price must be defined\n          return {\n            _internal_price: rawPrice,\n            _internal_coordinate: coordinate\n          };\n        } else {\n          // always convert from coordinate\n          const firstValue = ensureNotNull(priceScale._internal_firstValue());\n          const price = priceScale._internal_coordinateToPrice(coordinate, firstValue);\n          return {\n            _internal_price: price,\n            _internal_coordinate: coordinate\n          };\n        }\n      };\n    };\n    const valueTimeProvider = (rawIndexProvider, rawCoordinateProvider) => {\n      return () => {\n        const time = this._private__model._internal_timeScale()._internal_indexToTime(rawIndexProvider());\n        const coordinate = rawCoordinateProvider();\n        if (!time || !Number.isFinite(coordinate)) {\n          return null;\n        }\n        return {\n          _internal_time: time,\n          _internal_coordinate: coordinate\n        };\n      };\n    };\n    // for current position always return both price and coordinate\n    this._private__currentPosPriceProvider = valuePriceProvider(() => this._private__price, () => this._private__y);\n    const currentPosTimeProvider = valueTimeProvider(() => this._private__index, () => this._internal_appliedX());\n    this._private__timeAxisView = new CrosshairTimeAxisView(this, model, currentPosTimeProvider);\n    this._private__paneView = new CrosshairPaneView(this);\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_saveOriginCoord(x, y) {\n    this._private__originX = x;\n    this._private__originY = y;\n  }\n  _internal_clearOriginCoord() {\n    this._private__originX = NaN;\n    this._private__originY = NaN;\n  }\n  _internal_originCoordX() {\n    return this._private__originX;\n  }\n  _internal_originCoordY() {\n    return this._private__originY;\n  }\n  _internal_setPosition(index, price, pane) {\n    if (!this._private__subscribed) {\n      this._private__subscribed = true;\n    }\n    this._private__visible = true;\n    this._private__tryToUpdateViews(index, price, pane);\n  }\n  _internal_appliedIndex() {\n    return this._private__index;\n  }\n  _internal_appliedX() {\n    return this._private__x;\n  }\n  _internal_appliedY() {\n    return this._private__y;\n  }\n  _internal_visible() {\n    return this._private__visible;\n  }\n  _internal_clearPosition() {\n    this._private__visible = false;\n    this._private__setIndexToLastSeriesBarIndex();\n    this._private__price = NaN;\n    this._private__x = NaN;\n    this._private__y = NaN;\n    this._private__pane = null;\n    this._internal_clearOriginCoord();\n  }\n  _internal_paneViews(pane) {\n    return this._private__pane !== null ? [this._private__paneView, this._private__markersPaneView] : [];\n  }\n  _internal_horzLineVisible(pane) {\n    return pane === this._private__pane && this._private__options.horzLine.visible;\n  }\n  _internal_vertLineVisible() {\n    return this._private__options.vertLine.visible;\n  }\n  _internal_priceAxisViews(pane, priceScale) {\n    if (!this._private__visible || this._private__pane !== pane) {\n      this._private__priceAxisViews.clear();\n    }\n    const views = [];\n    if (this._private__pane === pane) {\n      views.push(this._private__createPriceAxisViewOnDemand(this._private__priceAxisViews, priceScale, this._private__currentPosPriceProvider));\n    }\n    return views;\n  }\n  _internal_timeAxisViews() {\n    return this._private__visible ? [this._private__timeAxisView] : [];\n  }\n  _internal_pane() {\n    return this._private__pane;\n  }\n  _internal_updateAllViews() {\n    this._private__paneView._internal_update();\n    this._private__priceAxisViews.forEach(value => value._internal_update());\n    this._private__timeAxisView._internal_update();\n    this._private__markersPaneView._internal_update();\n  }\n  _private__priceScaleByPane(pane) {\n    if (pane && !pane._internal_defaultPriceScale()._internal_isEmpty()) {\n      return pane._internal_defaultPriceScale();\n    }\n    return null;\n  }\n  _private__tryToUpdateViews(index, price, pane) {\n    if (this._private__tryToUpdateData(index, price, pane)) {\n      this._internal_updateAllViews();\n    }\n  }\n  _private__tryToUpdateData(newIndex, newPrice, newPane) {\n    const oldX = this._private__x;\n    const oldY = this._private__y;\n    const oldPrice = this._private__price;\n    const oldIndex = this._private__index;\n    const oldPane = this._private__pane;\n    const priceScale = this._private__priceScaleByPane(newPane);\n    this._private__index = newIndex;\n    this._private__x = isNaN(newIndex) ? NaN : this._private__model._internal_timeScale()._internal_indexToCoordinate(newIndex);\n    this._private__pane = newPane;\n    const firstValue = priceScale !== null ? priceScale._internal_firstValue() : null;\n    if (priceScale !== null && firstValue !== null) {\n      this._private__price = newPrice;\n      this._private__y = priceScale._internal_priceToCoordinate(newPrice, firstValue);\n    } else {\n      this._private__price = NaN;\n      this._private__y = NaN;\n    }\n    return oldX !== this._private__x || oldY !== this._private__y || oldIndex !== this._private__index || oldPrice !== this._private__price || oldPane !== this._private__pane;\n  }\n  _private__setIndexToLastSeriesBarIndex() {\n    const lastIndexes = this._private__model._internal_serieses().map(s => s._internal_bars()._internal_lastIndex()).filter(notNull);\n    const lastBarIndex = lastIndexes.length === 0 ? null : Math.max(...lastIndexes);\n    this._private__index = lastBarIndex !== null ? lastBarIndex : NaN;\n  }\n  _private__createPriceAxisViewOnDemand(map, priceScale, valueProvider) {\n    let view = map.get(priceScale);\n    if (view === undefined) {\n      view = new CrosshairPriceAxisView(this, priceScale, valueProvider);\n      map.set(priceScale, view);\n    }\n    return view;\n  }\n}\nfunction isDefaultPriceScale(priceScaleId) {\n  return priceScaleId === \"left\" /* DefaultPriceScaleId.Left */ || priceScaleId === \"right\" /* DefaultPriceScaleId.Right */;\n}\n\nfunction mergePaneInvalidation(beforeValue, newValue) {\n  if (beforeValue === undefined) {\n    return newValue;\n  }\n  const level = Math.max(beforeValue._internal_level, newValue._internal_level);\n  const autoScale = beforeValue._internal_autoScale || newValue._internal_autoScale;\n  return {\n    _internal_level: level,\n    _internal_autoScale: autoScale\n  };\n}\nclass InvalidateMask {\n  constructor(globalLevel) {\n    this._private__invalidatedPanes = new Map();\n    this._private__timeScaleInvalidations = [];\n    this._private__globalLevel = globalLevel;\n  }\n  _internal_invalidatePane(paneIndex, invalidation) {\n    const prevValue = this._private__invalidatedPanes.get(paneIndex);\n    const newValue = mergePaneInvalidation(prevValue, invalidation);\n    this._private__invalidatedPanes.set(paneIndex, newValue);\n  }\n  _internal_fullInvalidation() {\n    return this._private__globalLevel;\n  }\n  _internal_invalidateForPane(paneIndex) {\n    const paneInvalidation = this._private__invalidatedPanes.get(paneIndex);\n    if (paneInvalidation === undefined) {\n      return {\n        _internal_level: this._private__globalLevel\n      };\n    }\n    return {\n      _internal_level: Math.max(this._private__globalLevel, paneInvalidation._internal_level),\n      _internal_autoScale: paneInvalidation._internal_autoScale\n    };\n  }\n  _internal_setFitContent() {\n    this._internal_stopTimeScaleAnimation();\n    // modifies both bar spacing and right offset\n    this._private__timeScaleInvalidations = [{\n      _internal_type: 0 /* TimeScaleInvalidationType.FitContent */\n    }];\n  }\n\n  _internal_applyRange(range) {\n    this._internal_stopTimeScaleAnimation();\n    // modifies both bar spacing and right offset\n    this._private__timeScaleInvalidations = [{\n      _internal_type: 1 /* TimeScaleInvalidationType.ApplyRange */,\n      _internal_value: range\n    }];\n  }\n  _internal_setTimeScaleAnimation(animation) {\n    this._private__removeTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 5 /* TimeScaleInvalidationType.Animation */,\n      _internal_value: animation\n    });\n  }\n  _internal_stopTimeScaleAnimation() {\n    this._private__removeTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 6 /* TimeScaleInvalidationType.StopAnimation */\n    });\n  }\n\n  _internal_resetTimeScale() {\n    this._internal_stopTimeScaleAnimation();\n    // modifies both bar spacing and right offset\n    this._private__timeScaleInvalidations = [{\n      _internal_type: 4 /* TimeScaleInvalidationType.Reset */\n    }];\n  }\n\n  _internal_setBarSpacing(barSpacing) {\n    this._internal_stopTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 2 /* TimeScaleInvalidationType.ApplyBarSpacing */,\n      _internal_value: barSpacing\n    });\n  }\n  _internal_setRightOffset(offset) {\n    this._internal_stopTimeScaleAnimation();\n    this._private__timeScaleInvalidations.push({\n      _internal_type: 3 /* TimeScaleInvalidationType.ApplyRightOffset */,\n      _internal_value: offset\n    });\n  }\n  _internal_timeScaleInvalidations() {\n    return this._private__timeScaleInvalidations;\n  }\n  _internal_merge(other) {\n    for (const tsInvalidation of other._private__timeScaleInvalidations) {\n      this._private__applyTimeScaleInvalidation(tsInvalidation);\n    }\n    this._private__globalLevel = Math.max(this._private__globalLevel, other._private__globalLevel);\n    other._private__invalidatedPanes.forEach((invalidation, index) => {\n      this._internal_invalidatePane(index, invalidation);\n    });\n  }\n  static _internal_light() {\n    return new InvalidateMask(2 /* InvalidationLevel.Light */);\n  }\n\n  static _internal_full() {\n    return new InvalidateMask(3 /* InvalidationLevel.Full */);\n  }\n\n  _private__applyTimeScaleInvalidation(invalidation) {\n    switch (invalidation._internal_type) {\n      case 0 /* TimeScaleInvalidationType.FitContent */:\n        this._internal_setFitContent();\n        break;\n      case 1 /* TimeScaleInvalidationType.ApplyRange */:\n        this._internal_applyRange(invalidation._internal_value);\n        break;\n      case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n        this._internal_setBarSpacing(invalidation._internal_value);\n        break;\n      case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n        this._internal_setRightOffset(invalidation._internal_value);\n        break;\n      case 4 /* TimeScaleInvalidationType.Reset */:\n        this._internal_resetTimeScale();\n        break;\n      case 5 /* TimeScaleInvalidationType.Animation */:\n        this._internal_setTimeScaleAnimation(invalidation._internal_value);\n        break;\n      case 6 /* TimeScaleInvalidationType.StopAnimation */:\n        this._private__removeTimeScaleAnimation();\n    }\n  }\n  _private__removeTimeScaleAnimation() {\n    const index = this._private__timeScaleInvalidations.findIndex(inv => inv._internal_type === 5 /* TimeScaleInvalidationType.Animation */);\n    if (index !== -1) {\n      this._private__timeScaleInvalidations.splice(index, 1);\n    }\n  }\n}\nconst formatterOptions = {\n  _internal_decimalSign: '.',\n  _internal_decimalSignFractional: '\\''\n};\n/**\n * @param value - The number of convert.\n * @param length - The length. Must be between 0 and 16 inclusive.\n */\nfunction numberToStringWithLeadingZero(value, length) {\n  if (!isNumber(value)) {\n    return 'n/a';\n  }\n  if (!isInteger(length)) {\n    throw new TypeError('invalid length');\n  }\n  if (length < 0 || length > 16) {\n    throw new TypeError('invalid length');\n  }\n  if (length === 0) {\n    return value.toString();\n  }\n  const dummyString = '0000000000000000';\n  return (dummyString + value.toString()).slice(-length);\n}\nclass PriceFormatter {\n  constructor(priceScale, minMove) {\n    if (!minMove) {\n      minMove = 1;\n    }\n    if (!isNumber(priceScale) || !isInteger(priceScale)) {\n      priceScale = 100;\n    }\n    if (priceScale < 0) {\n      throw new TypeError('invalid base');\n    }\n    this._private__priceScale = priceScale;\n    this._private__minMove = minMove;\n    this._private__calculateDecimal();\n  }\n  format(price) {\n    // \\u2212 is unicode's minus sign https://www.fileformat.info/info/unicode/char/2212/index.htm\n    // we should use it because it has the same width as plus sign +\n    const sign = price < 0 ? '\\u2212' : '';\n    price = Math.abs(price);\n    return sign + this._private__formatAsDecimal(price);\n  }\n  _private__calculateDecimal() {\n    // check if this._base is power of 10\n    // for double fractional _fractionalLength if for the main fractional only\n    this._internal__fractionalLength = 0;\n    if (this._private__priceScale > 0 && this._private__minMove > 0) {\n      let base = this._private__priceScale;\n      while (base > 1) {\n        base /= 10;\n        this._internal__fractionalLength++;\n      }\n    }\n  }\n  _private__formatAsDecimal(price) {\n    const base = this._private__priceScale / this._private__minMove;\n    let intPart = Math.floor(price);\n    let fracString = '';\n    const fracLength = this._internal__fractionalLength !== undefined ? this._internal__fractionalLength : NaN;\n    if (base > 1) {\n      let fracPart = +(Math.round(price * base) - intPart * base).toFixed(this._internal__fractionalLength);\n      if (fracPart >= base) {\n        fracPart -= base;\n        intPart += 1;\n      }\n      fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(+fracPart.toFixed(this._internal__fractionalLength) * this._private__minMove, fracLength);\n    } else {\n      // should round int part to min move\n      intPart = Math.round(intPart * base) / base;\n      // if min move > 1, fractional part is always = 0\n      if (fracLength > 0) {\n        fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(0, fracLength);\n      }\n    }\n    return intPart.toFixed(0) + fracString;\n  }\n}\nclass PercentageFormatter extends PriceFormatter {\n  constructor(priceScale = 100) {\n    super(priceScale);\n  }\n  format(price) {\n    return `${super.format(price)}%`;\n  }\n}\nclass VolumeFormatter {\n  constructor(precision) {\n    this._private__precision = precision;\n  }\n  format(vol) {\n    let sign = '';\n    if (vol < 0) {\n      sign = '-';\n      vol = -vol;\n    }\n    if (vol < 995) {\n      return sign + this._private__formatNumber(vol);\n    } else if (vol < 999995) {\n      return sign + this._private__formatNumber(vol / 1000) + 'K';\n    } else if (vol < 999999995) {\n      vol = 1000 * Math.round(vol / 1000);\n      return sign + this._private__formatNumber(vol / 1000000) + 'M';\n    } else {\n      vol = 1000000 * Math.round(vol / 1000000);\n      return sign + this._private__formatNumber(vol / 1000000000) + 'B';\n    }\n  }\n  _private__formatNumber(value) {\n    let res;\n    const priceScale = Math.pow(10, this._private__precision);\n    value = Math.round(value * priceScale) / priceScale;\n    if (value >= 1e-15 && value < 1) {\n      res = value.toFixed(this._private__precision).replace(/\\.?0+$/, ''); // regex removes trailing zeroes\n    } else {\n      res = String(value);\n    }\n    return res.replace(/(\\.[1-9]*)0+$/, (e, p1) => p1);\n  }\n}\n\n// eslint-disable-next-line max-params, complexity\nfunction walkLine(renderingScope, items, lineType, visibleRange, barWidth,\n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter, finishStyledArea) {\n  if (items.length === 0 || visibleRange.from >= items.length || visibleRange.to <= 0) {\n    return;\n  }\n  const ctx = renderingScope.context;\n  const firstItem = items[visibleRange.from];\n  let currentStyle = styleGetter(renderingScope, firstItem);\n  let currentStyleFirstItem = firstItem;\n  if (visibleRange.to - visibleRange.from < 2) {\n    const halfBarWidth = barWidth / 2;\n    ctx.beginPath();\n    const item1 = {\n      _internal_x: firstItem._internal_x - halfBarWidth,\n      _internal_y: firstItem._internal_y\n    };\n    const item2 = {\n      _internal_x: firstItem._internal_x + halfBarWidth,\n      _internal_y: firstItem._internal_y\n    };\n    ctx.moveTo(item1._internal_x, item1._internal_y);\n    ctx.lineTo(item2._internal_x, item2._internal_y);\n    finishStyledArea(ctx, currentStyle, item1, item2);\n    return;\n  }\n  const changeStyle = (newStyle, currentItem) => {\n    finishStyledArea(ctx, currentStyle, currentStyleFirstItem, currentItem);\n    ctx.beginPath();\n    currentStyle = newStyle;\n    currentStyleFirstItem = currentItem;\n  };\n  let currentItem = currentStyleFirstItem;\n  ctx.beginPath();\n  ctx.moveTo(firstItem._internal_x, firstItem._internal_y);\n  for (let i = visibleRange.from + 1; i < visibleRange.to; ++i) {\n    currentItem = items[i];\n    const itemStyle = styleGetter(renderingScope, currentItem);\n    switch (lineType) {\n      case 0 /* LineType.Simple */:\n        ctx.lineTo(currentItem._internal_x, currentItem._internal_y);\n        break;\n      case 1 /* LineType.WithSteps */:\n        ctx.lineTo(currentItem._internal_x, items[i - 1]._internal_y);\n        if (itemStyle !== currentStyle) {\n          changeStyle(itemStyle, currentItem);\n          ctx.lineTo(currentItem._internal_x, items[i - 1]._internal_y);\n        }\n        ctx.lineTo(currentItem._internal_x, currentItem._internal_y);\n        break;\n      case 2 /* LineType.Curved */:\n        {\n          const [cp1, cp2] = getControlPoints(items, i - 1, i);\n          ctx.bezierCurveTo(cp1._internal_x, cp1._internal_y, cp2._internal_x, cp2._internal_y, currentItem._internal_x, currentItem._internal_y);\n          break;\n        }\n    }\n    if (lineType !== 1 /* LineType.WithSteps */ && itemStyle !== currentStyle) {\n      changeStyle(itemStyle, currentItem);\n      ctx.moveTo(currentItem._internal_x, currentItem._internal_y);\n    }\n  }\n  if (currentStyleFirstItem !== currentItem || currentStyleFirstItem === currentItem && lineType === 1 /* LineType.WithSteps */) {\n    finishStyledArea(ctx, currentStyle, currentStyleFirstItem, currentItem);\n  }\n}\nconst curveTension = 6;\nfunction subtract(p1, p2) {\n  return {\n    _internal_x: p1._internal_x - p2._internal_x,\n    _internal_y: p1._internal_y - p2._internal_y\n  };\n}\nfunction add(p1, p2) {\n  return {\n    _internal_x: p1._internal_x + p2._internal_x,\n    _internal_y: p1._internal_y + p2._internal_y\n  };\n}\nfunction divide(p1, n) {\n  return {\n    _internal_x: p1._internal_x / n,\n    _internal_y: p1._internal_y / n\n  };\n}\n/**\n * @returns Two control points that can be used as arguments to {@link CanvasRenderingContext2D.bezierCurveTo} to draw a curved line between `points[fromPointIndex]` and `points[toPointIndex]`.\n */\nfunction getControlPoints(points, fromPointIndex, toPointIndex) {\n  const beforeFromPointIndex = Math.max(0, fromPointIndex - 1);\n  const afterToPointIndex = Math.min(points.length - 1, toPointIndex + 1);\n  const cp1 = add(points[fromPointIndex], divide(subtract(points[toPointIndex], points[beforeFromPointIndex]), curveTension));\n  const cp2 = subtract(points[toPointIndex], divide(subtract(points[afterToPointIndex], points[fromPointIndex]), curveTension));\n  return [cp1, cp2];\n}\nfunction finishStyledArea$1(baseLevelCoordinate, ctx, style, areaFirstItem, newAreaFirstItem) {\n  ctx.lineTo(newAreaFirstItem._internal_x, baseLevelCoordinate);\n  ctx.lineTo(areaFirstItem._internal_x, baseLevelCoordinate);\n  ctx.closePath();\n  ctx.fillStyle = style;\n  ctx.fill();\n}\nclass PaneRendererAreaBase extends MediaCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._internal__data = null;\n  }\n  _internal_setData(data) {\n    this._internal__data = data;\n  }\n  _internal__drawImpl(renderingScope) {\n    var _a;\n    if (this._internal__data === null) {\n      return;\n    }\n    const {\n      _internal_items: items,\n      _internal_visibleRange: visibleRange,\n      _internal_barWidth: barWidth,\n      _internal_lineWidth: lineWidth,\n      _internal_lineStyle: lineStyle,\n      _internal_lineType: lineType\n    } = this._internal__data;\n    const baseLevelCoordinate = (_a = this._internal__data._internal_baseLevelCoordinate) !== null && _a !== void 0 ? _a : this._internal__data._internal_invertFilledArea ? 0 : renderingScope.mediaSize.height;\n    if (visibleRange === null) {\n      return;\n    }\n    const ctx = renderingScope.context;\n    ctx.lineCap = 'butt';\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = lineWidth;\n    setLineStyle(ctx, lineStyle);\n    // walk lines with width=1 to have more accurate gradient's filling\n    ctx.lineWidth = 1;\n    walkLine(renderingScope, items, lineType, visibleRange, barWidth, this._internal__fillStyle.bind(this), finishStyledArea$1.bind(null, baseLevelCoordinate));\n  }\n}\nclass PaneRendererArea extends PaneRendererAreaBase {\n  constructor() {\n    super(...arguments);\n    this._private__fillCache = null;\n  }\n  _internal__fillStyle(renderingScope, item) {\n    const {\n      context: ctx,\n      mediaSize\n    } = renderingScope;\n    const {\n      _internal_topColor: topColor,\n      _internal_bottomColor: bottomColor\n    } = item;\n    const bottom = mediaSize.height;\n    if (this._private__fillCache !== null && this._private__fillCache.topColor === topColor && this._private__fillCache.bottomColor === bottomColor && this._private__fillCache.bottom === bottom) {\n      return this._private__fillCache.fillStyle;\n    }\n    const fillStyle = ctx.createLinearGradient(0, 0, 0, bottom);\n    fillStyle.addColorStop(0, topColor);\n    fillStyle.addColorStop(1, bottomColor);\n    this._private__fillCache = {\n      topColor,\n      bottomColor,\n      fillStyle,\n      bottom\n    };\n    return fillStyle;\n  }\n}\nfunction finishStyledArea(ctx, style) {\n  ctx.strokeStyle = style;\n  ctx.stroke();\n}\nclass PaneRendererLineBase extends MediaCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._internal__data = null;\n  }\n  _internal_setData(data) {\n    this._internal__data = data;\n  }\n  _internal__drawImpl(renderingScope) {\n    if (this._internal__data === null) {\n      return;\n    }\n    const {\n      _internal_items: items,\n      _internal_visibleRange: visibleRange,\n      _internal_barWidth: barWidth,\n      _internal_lineType: lineType,\n      _internal_lineWidth: lineWidth,\n      _internal_lineStyle: lineStyle\n    } = this._internal__data;\n    if (visibleRange === null) {\n      return;\n    }\n    const ctx = renderingScope.context;\n    ctx.lineCap = 'butt';\n    ctx.lineWidth = lineWidth;\n    setLineStyle(ctx, lineStyle);\n    ctx.lineJoin = 'round';\n    walkLine(renderingScope, items, lineType, visibleRange, barWidth, this._internal__strokeStyle.bind(this), finishStyledArea);\n  }\n}\nclass PaneRendererLine extends PaneRendererLineBase {\n  _internal__strokeStyle(renderingScope, item) {\n    return item._internal_lineColor;\n  }\n}\n\n/**\n * Binary function that accepts two arguments (the first of the type of array elements, and the second is always val), and returns a value convertible to bool.\n * The value returned indicates whether the first argument is considered to go before the second.\n * The function shall not modify any of its arguments.\n */\nfunction lowerbound(arr, value, compare, start = 0, to = arr.length) {\n  let count = to - start;\n  while (0 < count) {\n    const count2 = count >> 1;\n    const mid = start + count2;\n    if (compare(arr[mid], value)) {\n      start = mid + 1;\n      count -= count2 + 1;\n    } else {\n      count = count2;\n    }\n  }\n  return start;\n}\nfunction upperbound(arr, value, compare, start = 0, to = arr.length) {\n  let count = to - start;\n  while (0 < count) {\n    const count2 = count >> 1;\n    const mid = start + count2;\n    if (!compare(value, arr[mid])) {\n      start = mid + 1;\n      count -= count2 + 1;\n    } else {\n      count = count2;\n    }\n  }\n  return start;\n}\nfunction lowerBoundItemsCompare(item, time) {\n  return item._internal_time < time;\n}\nfunction upperBoundItemsCompare(time, item) {\n  return time < item._internal_time;\n}\nfunction visibleTimedValues(items, range, extendedRange) {\n  const firstBar = range._internal_left();\n  const lastBar = range._internal_right();\n  const from = lowerbound(items, firstBar, lowerBoundItemsCompare);\n  const to = upperbound(items, lastBar, upperBoundItemsCompare);\n  if (!extendedRange) {\n    return {\n      from,\n      to\n    };\n  }\n  let extendedFrom = from;\n  let extendedTo = to;\n  if (from > 0 && from < items.length && items[from]._internal_time >= firstBar) {\n    extendedFrom = from - 1;\n  }\n  if (to > 0 && to < items.length && items[to - 1]._internal_time <= lastBar) {\n    extendedTo = to + 1;\n  }\n  return {\n    from: extendedFrom,\n    to: extendedTo\n  };\n}\nclass SeriesPaneViewBase {\n  constructor(series, model, extendedVisibleRange) {\n    this._internal__invalidated = true;\n    this._internal__dataInvalidated = true;\n    this._internal__optionsInvalidated = true;\n    this._internal__items = [];\n    this._internal__itemsVisibleRange = null;\n    this._internal__series = series;\n    this._internal__model = model;\n    this._private__extendedVisibleRange = extendedVisibleRange;\n  }\n  _internal_update(updateType) {\n    this._internal__invalidated = true;\n    if (updateType === 'data') {\n      this._internal__dataInvalidated = true;\n    }\n    if (updateType === 'options') {\n      this._internal__optionsInvalidated = true;\n    }\n  }\n  _internal_renderer() {\n    if (!this._internal__series._internal_visible()) {\n      return null;\n    }\n    this._private__makeValid();\n    return this._internal__itemsVisibleRange === null ? null : this._internal__renderer;\n  }\n  _internal__updateOptions() {\n    this._internal__items = this._internal__items.map(item => Object.assign(Object.assign({}, item), this._internal__series._internal_barColorer()._internal_barStyle(item._internal_time)));\n  }\n  _internal__clearVisibleRange() {\n    this._internal__itemsVisibleRange = null;\n  }\n  _private__makeValid() {\n    if (this._internal__dataInvalidated) {\n      this._internal__fillRawPoints();\n      this._internal__dataInvalidated = false;\n    }\n    if (this._internal__optionsInvalidated) {\n      this._internal__updateOptions();\n      this._internal__optionsInvalidated = false;\n    }\n    if (this._internal__invalidated) {\n      this._private__makeValidImpl();\n      this._internal__invalidated = false;\n    }\n  }\n  _private__makeValidImpl() {\n    const priceScale = this._internal__series._internal_priceScale();\n    const timeScale = this._internal__model._internal_timeScale();\n    this._internal__clearVisibleRange();\n    if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n      return;\n    }\n    const visibleBars = timeScale._internal_visibleStrictRange();\n    if (visibleBars === null) {\n      return;\n    }\n    if (this._internal__series._internal_bars()._internal_size() === 0) {\n      return;\n    }\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return;\n    }\n    this._internal__itemsVisibleRange = visibleTimedValues(this._internal__items, visibleBars, this._private__extendedVisibleRange);\n    this._internal__convertToCoordinates(priceScale, timeScale, firstValue._internal_value);\n    this._internal__prepareRendererData();\n  }\n}\nclass LinePaneViewBase extends SeriesPaneViewBase {\n  constructor(series, model) {\n    super(series, model, true);\n  }\n  _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n    timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n    priceScale._internal_pointsArrayToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n  }\n  _internal__createRawItemBase(time, price) {\n    return {\n      _internal_time: time,\n      _internal_price: price,\n      _internal_x: NaN,\n      _internal_y: NaN\n    };\n  }\n  _internal__fillRawPoints() {\n    const colorer = this._internal__series._internal_barColorer();\n    this._internal__items = this._internal__series._internal_bars()._internal_rows().map(row => {\n      const value = row._internal_value[3 /* PlotRowValueIndex.Close */];\n      return this._internal__createRawItem(row._internal_index, value, colorer);\n    });\n  }\n}\nclass SeriesAreaPaneView extends LinePaneViewBase {\n  constructor(series, model) {\n    super(series, model);\n    this._internal__renderer = new CompositeRenderer();\n    this._private__areaRenderer = new PaneRendererArea();\n    this._private__lineRenderer = new PaneRendererLine();\n    this._internal__renderer._internal_setRenderers([this._private__areaRenderer, this._private__lineRenderer]);\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const areaStyleProperties = this._internal__series._internal_options();\n    this._private__areaRenderer._internal_setData({\n      _internal_lineType: areaStyleProperties.lineType,\n      _internal_items: this._internal__items,\n      _internal_lineStyle: areaStyleProperties.lineStyle,\n      _internal_lineWidth: areaStyleProperties.lineWidth,\n      _internal_baseLevelCoordinate: null,\n      _internal_invertFilledArea: areaStyleProperties.invertFilledArea,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing()\n    });\n    this._private__lineRenderer._internal_setData({\n      _internal_lineType: areaStyleProperties.lineType,\n      _internal_items: this._internal__items,\n      _internal_lineStyle: areaStyleProperties.lineStyle,\n      _internal_lineWidth: areaStyleProperties.lineWidth,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing()\n    });\n  }\n}\nfunction optimalBarWidth(barSpacing, pixelRatio) {\n  return Math.floor(barSpacing * 0.3 * pixelRatio);\n}\nfunction optimalCandlestickWidth(barSpacing, pixelRatio) {\n  const barSpacingSpecialCaseFrom = 2.5;\n  const barSpacingSpecialCaseTo = 4;\n  const barSpacingSpecialCaseCoeff = 3;\n  if (barSpacing >= barSpacingSpecialCaseFrom && barSpacing <= barSpacingSpecialCaseTo) {\n    return Math.floor(barSpacingSpecialCaseCoeff * pixelRatio);\n  }\n  // coeff should be 1 on small barspacing and go to 0.8 while groing bar spacing\n  const barSpacingReducingCoeff = 0.2;\n  const coeff = 1 - barSpacingReducingCoeff * Math.atan(Math.max(barSpacingSpecialCaseTo, barSpacing) - barSpacingSpecialCaseTo) / (Math.PI * 0.5);\n  const res = Math.floor(barSpacing * coeff * pixelRatio);\n  const scaledBarSpacing = Math.floor(barSpacing * pixelRatio);\n  const optimal = Math.min(res, scaledBarSpacing);\n  return Math.max(Math.floor(pixelRatio), optimal);\n}\nclass PaneRendererBars extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n    this._private__barWidth = 0;\n    this._private__barLineWidth = 0;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  // eslint-disable-next-line complexity\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    this._private__barWidth = this._private__calcBarWidth(horizontalPixelRatio);\n    // grid and crosshair have line width = Math.floor(pixelRatio)\n    // if this value is odd, we have to make bars' width odd\n    // if this value is even, we have to make bars' width even\n    // in order of keeping crosshair-over-bar drawing symmetric\n    if (this._private__barWidth >= 2) {\n      const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n      if (lineWidth % 2 !== this._private__barWidth % 2) {\n        this._private__barWidth--;\n      }\n    }\n    // if scale is compressed, bar could become less than 1 CSS pixel\n    this._private__barLineWidth = this._private__data._internal_thinBars ? Math.min(this._private__barWidth, Math.floor(horizontalPixelRatio)) : this._private__barWidth;\n    let prevColor = null;\n    const drawOpenClose = this._private__barLineWidth <= this._private__barWidth && this._private__data._internal_barSpacing >= Math.floor(1.5 * horizontalPixelRatio);\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; ++i) {\n      const bar = this._private__data._internal_bars[i];\n      if (prevColor !== bar._internal_barColor) {\n        ctx.fillStyle = bar._internal_barColor;\n        prevColor = bar._internal_barColor;\n      }\n      const bodyWidthHalf = Math.floor(this._private__barLineWidth * 0.5);\n      const bodyCenter = Math.round(bar._internal_x * horizontalPixelRatio);\n      const bodyLeft = bodyCenter - bodyWidthHalf;\n      const bodyWidth = this._private__barLineWidth;\n      const bodyRight = bodyLeft + bodyWidth - 1;\n      const high = Math.min(bar._internal_highY, bar._internal_lowY);\n      const low = Math.max(bar._internal_highY, bar._internal_lowY);\n      const bodyTop = Math.round(high * verticalPixelRatio) - bodyWidthHalf;\n      const bodyBottom = Math.round(low * verticalPixelRatio) + bodyWidthHalf;\n      const bodyHeight = Math.max(bodyBottom - bodyTop, this._private__barLineWidth);\n      ctx.fillRect(bodyLeft, bodyTop, bodyWidth, bodyHeight);\n      const sideWidth = Math.ceil(this._private__barWidth * 1.5);\n      if (drawOpenClose) {\n        if (this._private__data._internal_openVisible) {\n          const openLeft = bodyCenter - sideWidth;\n          let openTop = Math.max(bodyTop, Math.round(bar._internal_openY * verticalPixelRatio) - bodyWidthHalf);\n          let openBottom = openTop + bodyWidth - 1;\n          if (openBottom > bodyTop + bodyHeight - 1) {\n            openBottom = bodyTop + bodyHeight - 1;\n            openTop = openBottom - bodyWidth + 1;\n          }\n          ctx.fillRect(openLeft, openTop, bodyLeft - openLeft, openBottom - openTop + 1);\n        }\n        const closeRight = bodyCenter + sideWidth;\n        let closeTop = Math.max(bodyTop, Math.round(bar._internal_closeY * verticalPixelRatio) - bodyWidthHalf);\n        let closeBottom = closeTop + bodyWidth - 1;\n        if (closeBottom > bodyTop + bodyHeight - 1) {\n          closeBottom = bodyTop + bodyHeight - 1;\n          closeTop = closeBottom - bodyWidth + 1;\n        }\n        ctx.fillRect(bodyRight + 1, closeTop, closeRight - bodyRight, closeBottom - closeTop + 1);\n      }\n    }\n  }\n  _private__calcBarWidth(pixelRatio) {\n    const limit = Math.floor(pixelRatio);\n    return Math.max(limit, Math.floor(optimalBarWidth(ensureNotNull(this._private__data)._internal_barSpacing, pixelRatio)));\n  }\n}\nclass BarsPaneViewBase extends SeriesPaneViewBase {\n  constructor(series, model) {\n    super(series, model, false);\n  }\n  _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n    timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n    priceScale._internal_barPricesToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n  }\n  _internal__createDefaultItem(time, bar, colorer) {\n    return {\n      _internal_time: time,\n      _internal_open: bar._internal_value[0 /* PlotRowValueIndex.Open */],\n      _internal_high: bar._internal_value[1 /* PlotRowValueIndex.High */],\n      _internal_low: bar._internal_value[2 /* PlotRowValueIndex.Low */],\n      _internal_close: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n      _internal_x: NaN,\n      _internal_openY: NaN,\n      _internal_highY: NaN,\n      _internal_lowY: NaN,\n      _internal_closeY: NaN\n    };\n  }\n  _internal__fillRawPoints() {\n    const colorer = this._internal__series._internal_barColorer();\n    this._internal__items = this._internal__series._internal_bars()._internal_rows().map(row => this._internal__createRawItem(row._internal_index, row, colorer));\n  }\n}\nclass SeriesBarsPaneView extends BarsPaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererBars();\n  }\n  _internal__createRawItem(time, bar, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createDefaultItem(time, bar, colorer)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const barStyleProps = this._internal__series._internal_options();\n    this._internal__renderer._internal_setData({\n      _internal_bars: this._internal__items,\n      _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      _internal_openVisible: barStyleProps.openVisible,\n      _internal_thinBars: barStyleProps.thinBars,\n      _internal_visibleRange: this._internal__itemsVisibleRange\n    });\n  }\n}\nfunction clamp(value, minVal, maxVal) {\n  return Math.min(Math.max(value, minVal), maxVal);\n}\nfunction isBaseDecimal(value) {\n  if (value < 0) {\n    return false;\n  }\n  for (let current = value; current > 1; current /= 10) {\n    if (current % 10 !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction greaterOrEqual(x1, x2, epsilon) {\n  return x2 - x1 <= epsilon;\n}\nfunction equal(x1, x2, epsilon) {\n  return Math.abs(x1 - x2) < epsilon;\n}\nfunction log10(x) {\n  if (x <= 0) {\n    return NaN;\n  }\n  return Math.log(x) / Math.log(10);\n}\nfunction min(arr) {\n  if (arr.length < 1) {\n    throw Error('array is empty');\n  }\n  let minVal = arr[0];\n  for (let i = 1; i < arr.length; ++i) {\n    if (arr[i] < minVal) {\n      minVal = arr[i];\n    }\n  }\n  return minVal;\n}\nfunction ceiledEven(x) {\n  const ceiled = Math.ceil(x);\n  return ceiled % 2 !== 0 ? ceiled - 1 : ceiled;\n}\nfunction ceiledOdd(x) {\n  const ceiled = Math.ceil(x);\n  return ceiled % 2 === 0 ? ceiled - 1 : ceiled;\n}\nclass PaneRendererBaselineArea extends PaneRendererAreaBase {\n  constructor() {\n    super(...arguments);\n    this._private__fillCache = null;\n  }\n  _internal__fillStyle(renderingScope, item) {\n    var _a;\n    const {\n      context: ctx,\n      mediaSize\n    } = renderingScope;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const data = this._internal__data;\n    const {\n      _internal_topFillColor1: topFillColor1,\n      _internal_topFillColor2: topFillColor2,\n      _internal_bottomFillColor1: bottomFillColor1,\n      _internal_bottomFillColor2: bottomFillColor2\n    } = item;\n    const baseLevelCoordinate = (_a = data._internal_baseLevelCoordinate) !== null && _a !== void 0 ? _a : mediaSize.height;\n    const bottom = mediaSize.height;\n    if (this._private__fillCache !== null && this._private__fillCache.topFillColor1 === topFillColor1 && this._private__fillCache.topFillColor2 === topFillColor2 && this._private__fillCache.bottomFillColor1 === bottomFillColor1 && this._private__fillCache.bottomFillColor2 === bottomFillColor2 && this._private__fillCache.baseLevelCoordinate === baseLevelCoordinate && this._private__fillCache.bottom === bottom) {\n      return this._private__fillCache.fillStyle;\n    }\n    const fillStyle = ctx.createLinearGradient(0, 0, 0, bottom);\n    const baselinePercent = clamp(baseLevelCoordinate / bottom, 0, 1);\n    fillStyle.addColorStop(0, topFillColor1);\n    fillStyle.addColorStop(baselinePercent, topFillColor2);\n    fillStyle.addColorStop(baselinePercent, bottomFillColor1);\n    fillStyle.addColorStop(1, bottomFillColor2);\n    this._private__fillCache = {\n      topFillColor1,\n      topFillColor2,\n      bottomFillColor1,\n      bottomFillColor2,\n      fillStyle,\n      baseLevelCoordinate,\n      bottom\n    };\n    return fillStyle;\n  }\n}\nclass PaneRendererBaselineLine extends PaneRendererLineBase {\n  constructor() {\n    super(...arguments);\n    this._private__strokeCache = null;\n  }\n  _internal__strokeStyle(renderingScope, item) {\n    const {\n      context: ctx,\n      mediaSize\n    } = renderingScope;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const data = this._internal__data;\n    const {\n      _internal_topLineColor: topLineColor,\n      _internal_bottomLineColor: bottomLineColor\n    } = item;\n    const {\n      _internal_baseLevelCoordinate: baseLevelCoordinate\n    } = data;\n    const bottom = mediaSize.height;\n    if (this._private__strokeCache !== null && this._private__strokeCache.topLineColor === topLineColor && this._private__strokeCache.bottomLineColor === bottomLineColor && this._private__strokeCache.baseLevelCoordinate === baseLevelCoordinate && this._private__strokeCache.bottom === bottom) {\n      return this._private__strokeCache.strokeStyle;\n    }\n    const strokeStyle = ctx.createLinearGradient(0, 0, 0, bottom);\n    const baselinePercent = clamp(baseLevelCoordinate / bottom, 0, 1);\n    strokeStyle.addColorStop(0, topLineColor);\n    strokeStyle.addColorStop(baselinePercent, topLineColor);\n    strokeStyle.addColorStop(baselinePercent, bottomLineColor);\n    strokeStyle.addColorStop(1, bottomLineColor);\n    this._private__strokeCache = {\n      topLineColor,\n      bottomLineColor,\n      strokeStyle,\n      baseLevelCoordinate,\n      bottom\n    };\n    return strokeStyle;\n  }\n}\nclass SeriesBaselinePaneView extends LinePaneViewBase {\n  constructor(series, model) {\n    super(series, model);\n    this._internal__renderer = new CompositeRenderer();\n    this._private__baselineAreaRenderer = new PaneRendererBaselineArea();\n    this._private__baselineLineRenderer = new PaneRendererBaselineLine();\n    this._internal__renderer._internal_setRenderers([this._private__baselineAreaRenderer, this._private__baselineLineRenderer]);\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return;\n    }\n    const baselineProps = this._internal__series._internal_options();\n    const baseLevelCoordinate = this._internal__series._internal_priceScale()._internal_priceToCoordinate(baselineProps.baseValue.price, firstValue._internal_value);\n    const barWidth = this._internal__model._internal_timeScale()._internal_barSpacing();\n    this._private__baselineAreaRenderer._internal_setData({\n      _internal_items: this._internal__items,\n      _internal_lineWidth: baselineProps.lineWidth,\n      _internal_lineStyle: baselineProps.lineStyle,\n      _internal_lineType: baselineProps.lineType,\n      _internal_baseLevelCoordinate: baseLevelCoordinate,\n      _internal_invertFilledArea: false,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: barWidth\n    });\n    this._private__baselineLineRenderer._internal_setData({\n      _internal_items: this._internal__items,\n      _internal_lineWidth: baselineProps.lineWidth,\n      _internal_lineStyle: baselineProps.lineStyle,\n      _internal_lineType: baselineProps.lineType,\n      _internal_baseLevelCoordinate: baseLevelCoordinate,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: barWidth\n    });\n  }\n}\nclass PaneRendererCandlesticks extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n    // scaled with pixelRatio\n    this._private__barWidth = 0;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal__drawImpl(renderingScope) {\n    if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    const {\n      horizontalPixelRatio\n    } = renderingScope;\n    // now we know pixelRatio and we could calculate barWidth effectively\n    this._private__barWidth = optimalCandlestickWidth(this._private__data._internal_barSpacing, horizontalPixelRatio);\n    // grid and crosshair have line width = Math.floor(pixelRatio)\n    // if this value is odd, we have to make candlesticks' width odd\n    // if this value is even, we have to make candlesticks' width even\n    // in order of keeping crosshair-over-candlesticks drawing symmetric\n    if (this._private__barWidth >= 2) {\n      const wickWidth = Math.floor(horizontalPixelRatio);\n      if (wickWidth % 2 !== this._private__barWidth % 2) {\n        this._private__barWidth--;\n      }\n    }\n    const bars = this._private__data._internal_bars;\n    if (this._private__data._internal_wickVisible) {\n      this._private__drawWicks(renderingScope, bars, this._private__data._internal_visibleRange);\n    }\n    if (this._private__data._internal_borderVisible) {\n      this._private__drawBorder(renderingScope, bars, this._private__data._internal_visibleRange);\n    }\n    const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n    if (!this._private__data._internal_borderVisible || this._private__barWidth > borderWidth * 2) {\n      this._private__drawCandles(renderingScope, bars, this._private__data._internal_visibleRange);\n    }\n  }\n  _private__drawWicks(renderingScope, bars, visibleRange) {\n    if (this._private__data === null) {\n      return;\n    }\n    const {\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = renderingScope;\n    let prevWickColor = '';\n    let wickWidth = Math.min(Math.floor(horizontalPixelRatio), Math.floor(this._private__data._internal_barSpacing * horizontalPixelRatio));\n    wickWidth = Math.max(Math.floor(horizontalPixelRatio), Math.min(wickWidth, this._private__barWidth));\n    const wickOffset = Math.floor(wickWidth * 0.5);\n    let prevEdge = null;\n    for (let i = visibleRange.from; i < visibleRange.to; i++) {\n      const bar = bars[i];\n      if (bar._internal_barWickColor !== prevWickColor) {\n        ctx.fillStyle = bar._internal_barWickColor;\n        prevWickColor = bar._internal_barWickColor;\n      }\n      const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      const high = Math.round(bar._internal_highY * verticalPixelRatio);\n      const low = Math.round(bar._internal_lowY * verticalPixelRatio);\n      const scaledX = Math.round(horizontalPixelRatio * bar._internal_x);\n      let left = scaledX - wickOffset;\n      const right = left + wickWidth - 1;\n      if (prevEdge !== null) {\n        left = Math.max(prevEdge + 1, left);\n        left = Math.min(left, right);\n      }\n      const width = right - left + 1;\n      ctx.fillRect(left, high, width, top - high);\n      ctx.fillRect(left, bottom + 1, width, low - bottom);\n      prevEdge = right;\n    }\n  }\n  _private__calculateBorderWidth(pixelRatio) {\n    let borderWidth = Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio);\n    if (this._private__barWidth <= 2 * borderWidth) {\n      borderWidth = Math.floor((this._private__barWidth - 1) * 0.5);\n    }\n    const res = Math.max(Math.floor(pixelRatio), borderWidth);\n    if (this._private__barWidth <= res * 2) {\n      // do not draw bodies, restore original value\n      return Math.max(Math.floor(pixelRatio), Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio));\n    }\n    return res;\n  }\n  _private__drawBorder(renderingScope, bars, visibleRange) {\n    if (this._private__data === null) {\n      return;\n    }\n    const {\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = renderingScope;\n    let prevBorderColor = '';\n    const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n    let prevEdge = null;\n    for (let i = visibleRange.from; i < visibleRange.to; i++) {\n      const bar = bars[i];\n      if (bar._internal_barBorderColor !== prevBorderColor) {\n        ctx.fillStyle = bar._internal_barBorderColor;\n        prevBorderColor = bar._internal_barBorderColor;\n      }\n      let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n      // this is important to calculate right before patching left\n      const right = left + this._private__barWidth - 1;\n      const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      if (prevEdge !== null) {\n        left = Math.max(prevEdge + 1, left);\n        left = Math.min(left, right);\n      }\n      if (this._private__data._internal_barSpacing * horizontalPixelRatio > 2 * borderWidth) {\n        fillRectInnerBorder(ctx, left, top, right - left + 1, bottom - top + 1, borderWidth);\n      } else {\n        const width = right - left + 1;\n        ctx.fillRect(left, top, width, bottom - top + 1);\n      }\n      prevEdge = right;\n    }\n  }\n  _private__drawCandles(renderingScope, bars, visibleRange) {\n    if (this._private__data === null) {\n      return;\n    }\n    const {\n      context: ctx,\n      horizontalPixelRatio,\n      verticalPixelRatio\n    } = renderingScope;\n    let prevBarColor = '';\n    const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n    for (let i = visibleRange.from; i < visibleRange.to; i++) {\n      const bar = bars[i];\n      let top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      let bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n      let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n      let right = left + this._private__barWidth - 1;\n      if (bar._internal_barColor !== prevBarColor) {\n        const barColor = bar._internal_barColor;\n        ctx.fillStyle = barColor;\n        prevBarColor = barColor;\n      }\n      if (this._private__data._internal_borderVisible) {\n        left += borderWidth;\n        top += borderWidth;\n        right -= borderWidth;\n        bottom -= borderWidth;\n      }\n      if (top > bottom) {\n        continue;\n      }\n      ctx.fillRect(left, top, right - left + 1, bottom - top + 1);\n    }\n  }\n}\nclass SeriesCandlesticksPaneView extends BarsPaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererCandlesticks();\n  }\n  _internal__createRawItem(time, bar, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createDefaultItem(time, bar, colorer)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const candlestickStyleProps = this._internal__series._internal_options();\n    this._internal__renderer._internal_setData({\n      _internal_bars: this._internal__items,\n      _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      _internal_wickVisible: candlestickStyleProps.wickVisible,\n      _internal_borderVisible: candlestickStyleProps.borderVisible,\n      _internal_visibleRange: this._internal__itemsVisibleRange\n    });\n  }\n}\nconst showSpacingMinimalBarWidth = 1;\nconst alignToMinimalWidthLimit = 4;\nclass PaneRendererHistogram extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n    this._private__precalculatedCache = [];\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n    this._private__precalculatedCache = [];\n  }\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    if (!this._private__precalculatedCache.length) {\n      this._private__fillPrecalculatedCache(horizontalPixelRatio);\n    }\n    const tickWidth = Math.max(1, Math.floor(verticalPixelRatio));\n    const histogramBase = Math.round(this._private__data._internal_histogramBase * verticalPixelRatio);\n    const topHistogramBase = histogramBase - Math.floor(tickWidth / 2);\n    const bottomHistogramBase = topHistogramBase + tickWidth;\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const item = this._private__data._internal_items[i];\n      const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n      const y = Math.round(item._internal_y * verticalPixelRatio);\n      ctx.fillStyle = item._internal_barColor;\n      let top;\n      let bottom;\n      if (y <= topHistogramBase) {\n        top = y;\n        bottom = bottomHistogramBase;\n      } else {\n        top = topHistogramBase;\n        bottom = y - Math.floor(tickWidth / 2) + tickWidth;\n      }\n      ctx.fillRect(current._internal_left, top, current._internal_right - current._internal_left + 1, bottom - top);\n    }\n  }\n  // eslint-disable-next-line complexity\n  _private__fillPrecalculatedCache(pixelRatio) {\n    if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n      this._private__precalculatedCache = [];\n      return;\n    }\n    const spacing = Math.ceil(this._private__data._internal_barSpacing * pixelRatio) <= showSpacingMinimalBarWidth ? 0 : Math.max(1, Math.floor(pixelRatio));\n    const columnWidth = Math.round(this._private__data._internal_barSpacing * pixelRatio) - spacing;\n    this._private__precalculatedCache = new Array(this._private__data._internal_visibleRange.to - this._private__data._internal_visibleRange.from);\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const item = this._private__data._internal_items[i];\n      // force cast to avoid ensureDefined call\n      const x = Math.round(item._internal_x * pixelRatio);\n      let left;\n      let right;\n      if (columnWidth % 2) {\n        const halfWidth = (columnWidth - 1) / 2;\n        left = x - halfWidth;\n        right = x + halfWidth;\n      } else {\n        // shift pixel to left\n        const halfWidth = columnWidth / 2;\n        left = x - halfWidth;\n        right = x + halfWidth - 1;\n      }\n      this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from] = {\n        _internal_left: left,\n        _internal_right: right,\n        _internal_roundedCenter: x,\n        _internal_center: item._internal_x * pixelRatio,\n        _internal_time: item._internal_time\n      };\n    }\n    // correct positions\n    for (let i = this._private__data._internal_visibleRange.from + 1; i < this._private__data._internal_visibleRange.to; i++) {\n      const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n      const prev = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from - 1];\n      if (current._internal_time !== prev._internal_time + 1) {\n        continue;\n      }\n      if (current._internal_left - prev._internal_right !== spacing + 1) {\n        // have to align\n        if (prev._internal_roundedCenter > prev._internal_center) {\n          // prev wasshifted to left, so add pixel to right\n          prev._internal_right = current._internal_left - spacing - 1;\n        } else {\n          // extend current to left\n          current._internal_left = prev._internal_right + spacing + 1;\n        }\n      }\n    }\n    let minWidth = Math.ceil(this._private__data._internal_barSpacing * pixelRatio);\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n      // this could happen if barspacing < 1\n      if (current._internal_right < current._internal_left) {\n        current._internal_right = current._internal_left;\n      }\n      const width = current._internal_right - current._internal_left + 1;\n      minWidth = Math.min(width, minWidth);\n    }\n    if (spacing > 0 && minWidth < alignToMinimalWidthLimit) {\n      for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n        const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n        const width = current._internal_right - current._internal_left + 1;\n        if (width > minWidth) {\n          if (current._internal_roundedCenter > current._internal_center) {\n            current._internal_right -= 1;\n          } else {\n            current._internal_left += 1;\n          }\n        }\n      }\n    }\n  }\n}\nclass SeriesHistogramPaneView extends LinePaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererHistogram();\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const data = {\n      _internal_items: this._internal__items,\n      _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_histogramBase: this._internal__series._internal_priceScale()._internal_priceToCoordinate(this._internal__series._internal_options().base, ensureNotNull(this._internal__series._internal_firstValue())._internal_value)\n    };\n    this._internal__renderer._internal_setData(data);\n  }\n}\nclass SeriesLinePaneView extends LinePaneViewBase {\n  constructor() {\n    super(...arguments);\n    this._internal__renderer = new PaneRendererLine();\n  }\n  _internal__createRawItem(time, price, colorer) {\n    return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n  }\n  _internal__prepareRendererData() {\n    const lineStyleProps = this._internal__series._internal_options();\n    const data = {\n      _internal_items: this._internal__items,\n      _internal_lineStyle: lineStyleProps.lineStyle,\n      _internal_lineType: lineStyleProps.lineType,\n      _internal_lineWidth: lineStyleProps.lineWidth,\n      _internal_visibleRange: this._internal__itemsVisibleRange,\n      _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing()\n    };\n    this._internal__renderer._internal_setData(data);\n  }\n}\nconst defaultReplacementRe = /[2-9]/g;\nclass TextWidthCache {\n  constructor(size = 50) {\n    this._private__actualSize = 0;\n    this._private__usageTick = 1;\n    this._private__oldestTick = 1;\n    this._private__tick2Labels = {};\n    this._private__cache = new Map();\n    this._private__maxSize = size;\n  }\n  _internal_reset() {\n    this._private__actualSize = 0;\n    this._private__cache.clear();\n    this._private__usageTick = 1;\n    this._private__oldestTick = 1;\n    this._private__tick2Labels = {};\n  }\n  _internal_measureText(ctx, text, optimizationReplacementRe) {\n    return this._private__getMetrics(ctx, text, optimizationReplacementRe).width;\n  }\n  _internal_yMidCorrection(ctx, text, optimizationReplacementRe) {\n    const metrics = this._private__getMetrics(ctx, text, optimizationReplacementRe);\n    // if actualBoundingBoxAscent/actualBoundingBoxDescent are not supported we use 0 as a fallback\n    return ((metrics.actualBoundingBoxAscent || 0) - (metrics.actualBoundingBoxDescent || 0)) / 2;\n  }\n  _private__getMetrics(ctx, text, optimizationReplacementRe) {\n    const re = optimizationReplacementRe || defaultReplacementRe;\n    const cacheString = String(text).replace(re, '0');\n    if (this._private__cache.has(cacheString)) {\n      return ensureDefined(this._private__cache.get(cacheString))._internal_metrics;\n    }\n    if (this._private__actualSize === this._private__maxSize) {\n      const oldestValue = this._private__tick2Labels[this._private__oldestTick];\n      delete this._private__tick2Labels[this._private__oldestTick];\n      this._private__cache.delete(oldestValue);\n      this._private__oldestTick++;\n      this._private__actualSize--;\n    }\n    ctx.save();\n    ctx.textBaseline = 'middle';\n    const metrics = ctx.measureText(cacheString);\n    ctx.restore();\n    if (metrics.width === 0 && !!text.length) {\n      // measureText can return 0 in FF depending on a canvas size, don't cache it\n      return metrics;\n    }\n    this._private__cache.set(cacheString, {\n      _internal_metrics: metrics,\n      _internal_tick: this._private__usageTick\n    });\n    this._private__tick2Labels[this._private__usageTick] = cacheString;\n    this._private__actualSize++;\n    this._private__usageTick++;\n    return metrics;\n  }\n}\nclass PanePriceAxisViewRenderer {\n  constructor(textWidthCache) {\n    this._private__priceAxisViewRenderer = null;\n    this._private__rendererOptions = null;\n    this._private__align = 'right';\n    this._private__textWidthCache = textWidthCache;\n  }\n  _internal_setParams(priceAxisViewRenderer, rendererOptions, align) {\n    this._private__priceAxisViewRenderer = priceAxisViewRenderer;\n    this._private__rendererOptions = rendererOptions;\n    this._private__align = align;\n  }\n  _internal_draw(target) {\n    if (this._private__rendererOptions === null || this._private__priceAxisViewRenderer === null) {\n      return;\n    }\n    this._private__priceAxisViewRenderer._internal_draw(target, this._private__rendererOptions, this._private__textWidthCache, this._private__align);\n  }\n}\nclass PanePriceAxisView {\n  constructor(priceAxisView, dataSource, chartModel) {\n    this._private__priceAxisView = priceAxisView;\n    this._private__textWidthCache = new TextWidthCache(50); // when should we clear cache?\n    this._private__dataSource = dataSource;\n    this._private__chartModel = chartModel;\n    this._private__fontSize = -1;\n    this._private__renderer = new PanePriceAxisViewRenderer(this._private__textWidthCache);\n  }\n  _internal_renderer() {\n    const pane = this._private__chartModel._internal_paneForSource(this._private__dataSource);\n    if (pane === null) {\n      return null;\n    }\n    // this price scale will be used to find label placement only (left, right, none)\n    const priceScale = pane._internal_isOverlay(this._private__dataSource) ? pane._internal_defaultVisiblePriceScale() : this._private__dataSource._internal_priceScale();\n    if (priceScale === null) {\n      return null;\n    }\n    const position = pane._internal_priceScalePosition(priceScale);\n    if (position === 'overlay') {\n      return null;\n    }\n    const options = this._private__chartModel._internal_priceAxisRendererOptions();\n    if (options._internal_fontSize !== this._private__fontSize) {\n      this._private__fontSize = options._internal_fontSize;\n      this._private__textWidthCache._internal_reset();\n    }\n    this._private__renderer._internal_setParams(this._private__priceAxisView._internal_paneRenderer(), options, position);\n    return this._private__renderer;\n  }\n}\nclass HorizontalLineRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_hitTest(x, y) {\n    var _a;\n    if (!((_a = this._private__data) === null || _a === void 0 ? void 0 : _a._internal_visible)) {\n      return null;\n    }\n    const {\n      _internal_y: itemY,\n      _internal_lineWidth: lineWidth,\n      _internal_externalId: externalId\n    } = this._private__data;\n    // add a fixed area threshold around line (Y + width) for hit test\n    if (y >= itemY - lineWidth - 7 /* Constants.HitTestThreshold */ && y <= itemY + lineWidth + 7 /* Constants.HitTestThreshold */) {\n      return {\n        _internal_hitTestData: this._private__data,\n        _internal_externalId: externalId\n      };\n    }\n    return null;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null) {\n      return;\n    }\n    if (this._private__data._internal_visible === false) {\n      return;\n    }\n    const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n    if (y < 0 || y > bitmapSize.height) {\n      return;\n    }\n    ctx.lineCap = 'butt';\n    ctx.strokeStyle = this._private__data._internal_color;\n    ctx.lineWidth = Math.floor(this._private__data._internal_lineWidth * horizontalPixelRatio);\n    setLineStyle(ctx, this._private__data._internal_lineStyle);\n    drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n  }\n}\nclass SeriesHorizontalLinePaneView {\n  constructor(series) {\n    this._internal__lineRendererData = {\n      _internal_y: 0,\n      _internal_color: 'rgba(0, 0, 0, 0)',\n      _internal_lineWidth: 1,\n      _internal_lineStyle: 0 /* LineStyle.Solid */,\n      _internal_visible: false\n    };\n    this._internal__lineRenderer = new HorizontalLineRenderer();\n    this._private__invalidated = true;\n    this._internal__series = series;\n    this._internal__model = series._internal_model();\n    this._internal__lineRenderer._internal_setData(this._internal__lineRendererData);\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (!this._internal__series._internal_visible()) {\n      return null;\n    }\n    if (this._private__invalidated) {\n      this._internal__updateImpl();\n      this._private__invalidated = false;\n    }\n    return this._internal__lineRenderer;\n  }\n}\nclass SeriesHorizontalBaseLinePaneView extends SeriesHorizontalLinePaneView {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(series) {\n    super(series);\n  }\n  _internal__updateImpl() {\n    this._internal__lineRendererData._internal_visible = false;\n    const priceScale = this._internal__series._internal_priceScale();\n    const mode = priceScale._internal_mode()._internal_mode;\n    if (mode !== 2 /* PriceScaleMode.Percentage */ && mode !== 3 /* PriceScaleMode.IndexedTo100 */) {\n      return;\n    }\n    const seriesOptions = this._internal__series._internal_options();\n    if (!seriesOptions.baseLineVisible || !this._internal__series._internal_visible()) {\n      return;\n    }\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return;\n    }\n    this._internal__lineRendererData._internal_visible = true;\n    this._internal__lineRendererData._internal_y = priceScale._internal_priceToCoordinate(firstValue._internal_value, firstValue._internal_value);\n    this._internal__lineRendererData._internal_color = seriesOptions.baseLineColor;\n    this._internal__lineRendererData._internal_lineWidth = seriesOptions.baseLineWidth;\n    this._internal__lineRendererData._internal_lineStyle = seriesOptions.baseLineStyle;\n  }\n}\nclass SeriesLastPriceAnimationRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_data() {\n    return this._private__data;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    const data = this._private__data;\n    if (data === null) {\n      return;\n    }\n    const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    const correction = tickWidth % 2 / 2;\n    const centerX = Math.round(data._internal_center.x * horizontalPixelRatio) + correction; // correct x coordinate only\n    const centerY = data._internal_center.y * verticalPixelRatio;\n    ctx.fillStyle = data._internal_seriesLineColor;\n    ctx.beginPath();\n    // TODO: it is better to have different horizontal and vertical radii\n    const centerPointRadius = Math.max(2, data._internal_seriesLineWidth * 1.5) * horizontalPixelRatio;\n    ctx.arc(centerX, centerY, centerPointRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.fillStyle = data._internal_fillColor;\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = tickWidth;\n    ctx.strokeStyle = data._internal_strokeColor;\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio + tickWidth / 2, 0, 2 * Math.PI, false);\n    ctx.stroke();\n  }\n}\nconst animationStagesData = [{\n  _internal_start: 0,\n  _internal_end: 0.25 /* Constants.Stage1Period */,\n  _internal_startRadius: 4 /* Constants.Stage1StartCircleRadius */,\n  _internal_endRadius: 10 /* Constants.Stage1EndCircleRadius */,\n  _internal_startFillAlpha: 0.25 /* Constants.Stage1StartFillAlpha */,\n  _internal_endFillAlpha: 0 /* Constants.Stage1EndFillAlpha */,\n  _internal_startStrokeAlpha: 0.4 /* Constants.Stage1StartStrokeAlpha */,\n  _internal_endStrokeAlpha: 0.8 /* Constants.Stage1EndStrokeAlpha */\n}, {\n  _internal_start: 0.25 /* Constants.Stage1Period */,\n  _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n  _internal_startRadius: 10 /* Constants.Stage2StartCircleRadius */,\n  _internal_endRadius: 14 /* Constants.Stage2EndCircleRadius */,\n  _internal_startFillAlpha: 0 /* Constants.Stage2StartFillAlpha */,\n  _internal_endFillAlpha: 0 /* Constants.Stage2EndFillAlpha */,\n  _internal_startStrokeAlpha: 0.8 /* Constants.Stage2StartStrokeAlpha */,\n  _internal_endStrokeAlpha: 0 /* Constants.Stage2EndStrokeAlpha */\n}, {\n  _internal_start: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n  _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */ + 0.475 /* Constants.Stage3Period */,\n  _internal_startRadius: 14 /* Constants.Stage3StartCircleRadius */,\n  _internal_endRadius: 14 /* Constants.Stage3EndCircleRadius */,\n  _internal_startFillAlpha: 0 /* Constants.Stage3StartFillAlpha */,\n  _internal_endFillAlpha: 0 /* Constants.Stage3EndFillAlpha */,\n  _internal_startStrokeAlpha: 0 /* Constants.Stage3StartStrokeAlpha */,\n  _internal_endStrokeAlpha: 0 /* Constants.Stage3EndStrokeAlpha */\n}];\n\nfunction color(seriesLineColor, stage, startAlpha, endAlpha) {\n  const alpha = startAlpha + (endAlpha - startAlpha) * stage;\n  return applyAlpha(seriesLineColor, alpha);\n}\nfunction radius(stage, startRadius, endRadius) {\n  return startRadius + (endRadius - startRadius) * stage;\n}\nfunction animationData(durationSinceStart, lineColor) {\n  const globalStage = durationSinceStart % 2600 /* Constants.AnimationPeriod */ / 2600 /* Constants.AnimationPeriod */;\n  let currentStageData;\n  for (const stageData of animationStagesData) {\n    if (globalStage >= stageData._internal_start && globalStage <= stageData._internal_end) {\n      currentStageData = stageData;\n      break;\n    }\n  }\n  assert(currentStageData !== undefined, 'Last price animation internal logic error');\n  const subStage = (globalStage - currentStageData._internal_start) / (currentStageData._internal_end - currentStageData._internal_start);\n  return {\n    _internal_fillColor: color(lineColor, subStage, currentStageData._internal_startFillAlpha, currentStageData._internal_endFillAlpha),\n    _internal_strokeColor: color(lineColor, subStage, currentStageData._internal_startStrokeAlpha, currentStageData._internal_endStrokeAlpha),\n    _internal_radius: radius(subStage, currentStageData._internal_startRadius, currentStageData._internal_endRadius)\n  };\n}\nclass SeriesLastPriceAnimationPaneView {\n  constructor(series) {\n    this._private__renderer = new SeriesLastPriceAnimationRenderer();\n    this._private__invalidated = true;\n    this._private__stageInvalidated = true;\n    this._private__startTime = performance.now();\n    this._private__endTime = this._private__startTime - 1;\n    this._private__series = series;\n  }\n  _internal_onDataCleared() {\n    this._private__endTime = this._private__startTime - 1;\n    this._internal_update();\n  }\n  _internal_onNewRealtimeDataReceived() {\n    this._internal_update();\n    if (this._private__series._internal_options().lastPriceAnimation === 2 /* LastPriceAnimationMode.OnDataUpdate */) {\n      const now = performance.now();\n      const timeToAnimationEnd = this._private__endTime - now;\n      if (timeToAnimationEnd > 0) {\n        if (timeToAnimationEnd < 2600 /* Constants.AnimationPeriod */ / 4) {\n          this._private__endTime += 2600 /* Constants.AnimationPeriod */;\n        }\n\n        return;\n      }\n      this._private__startTime = now;\n      this._private__endTime = now + 2600 /* Constants.AnimationPeriod */;\n    }\n  }\n\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_invalidateStage() {\n    this._private__stageInvalidated = true;\n  }\n  _internal_visible() {\n    // center point is always visible if lastPriceAnimation is not LastPriceAnimationMode.Disabled\n    return this._private__series._internal_options().lastPriceAnimation !== 0 /* LastPriceAnimationMode.Disabled */;\n  }\n\n  _internal_animationActive() {\n    switch (this._private__series._internal_options().lastPriceAnimation) {\n      case 0 /* LastPriceAnimationMode.Disabled */:\n        return false;\n      case 1 /* LastPriceAnimationMode.Continuous */:\n        return true;\n      case 2 /* LastPriceAnimationMode.OnDataUpdate */:\n        return performance.now() <= this._private__endTime;\n    }\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n      this._private__stageInvalidated = false;\n    } else if (this._private__stageInvalidated) {\n      this._private__updateRendererDataStage();\n      this._private__stageInvalidated = false;\n    }\n    return this._private__renderer;\n  }\n  _private__updateImpl() {\n    this._private__renderer._internal_setData(null);\n    const timeScale = this._private__series._internal_model()._internal_timeScale();\n    const visibleRange = timeScale._internal_visibleStrictRange();\n    const firstValue = this._private__series._internal_firstValue();\n    if (visibleRange === null || firstValue === null) {\n      return;\n    }\n    const lastValue = this._private__series._internal_lastValueData(true);\n    if (lastValue._internal_noData || !visibleRange._internal_contains(lastValue._internal_index)) {\n      return;\n    }\n    const lastValuePoint = {\n      x: timeScale._internal_indexToCoordinate(lastValue._internal_index),\n      y: this._private__series._internal_priceScale()._internal_priceToCoordinate(lastValue._internal_price, firstValue._internal_value)\n    };\n    const seriesLineColor = lastValue._internal_color;\n    const seriesLineWidth = this._private__series._internal_options().lineWidth;\n    const data = animationData(this._private__duration(), seriesLineColor);\n    this._private__renderer._internal_setData({\n      _internal_seriesLineColor: seriesLineColor,\n      _internal_seriesLineWidth: seriesLineWidth,\n      _internal_fillColor: data._internal_fillColor,\n      _internal_strokeColor: data._internal_strokeColor,\n      _internal_radius: data._internal_radius,\n      _internal_center: lastValuePoint\n    });\n  }\n  _private__updateRendererDataStage() {\n    const rendererData = this._private__renderer._internal_data();\n    if (rendererData !== null) {\n      const data = animationData(this._private__duration(), rendererData._internal_seriesLineColor);\n      rendererData._internal_fillColor = data._internal_fillColor;\n      rendererData._internal_strokeColor = data._internal_strokeColor;\n      rendererData._internal_radius = data._internal_radius;\n    }\n  }\n  _private__duration() {\n    return this._internal_animationActive() ? performance.now() - this._private__startTime : 2600 /* Constants.AnimationPeriod */ - 1;\n  }\n}\nfunction size(barSpacing, coeff) {\n  const result = Math.min(Math.max(barSpacing, 12 /* Constants.MinShapeSize */), 30 /* Constants.MaxShapeSize */) * coeff;\n  return ceiledOdd(result);\n}\nfunction shapeSize(shape, originalSize) {\n  switch (shape) {\n    case 'arrowDown':\n    case 'arrowUp':\n      return size(originalSize, 1);\n    case 'circle':\n      return size(originalSize, 0.8);\n    case 'square':\n      return size(originalSize, 0.7);\n  }\n}\nfunction calculateShapeHeight(barSpacing) {\n  return ceiledEven(size(barSpacing, 1));\n}\nfunction shapeMargin(barSpacing) {\n  return Math.max(size(barSpacing, 0.1), 3 /* Constants.MinShapeMargin */);\n}\n\nfunction drawSquare(ctx, centerX, centerY, size) {\n  const squareSize = shapeSize('square', size);\n  const halfSize = (squareSize - 1) / 2;\n  const left = centerX - halfSize;\n  const top = centerY - halfSize;\n  ctx.fillRect(left, top, squareSize, squareSize);\n}\nfunction hitTestSquare(centerX, centerY, size, x, y) {\n  const squareSize = shapeSize('square', size);\n  const halfSize = (squareSize - 1) / 2;\n  const left = centerX - halfSize;\n  const top = centerY - halfSize;\n  return x >= left && x <= left + squareSize && y >= top && y <= top + squareSize;\n}\nfunction drawArrow(up, ctx, centerX, centerY, size) {\n  const arrowSize = shapeSize('arrowUp', size);\n  const halfArrowSize = (arrowSize - 1) / 2;\n  const baseSize = ceiledOdd(size / 2);\n  const halfBaseSize = (baseSize - 1) / 2;\n  ctx.beginPath();\n  if (up) {\n    ctx.moveTo(centerX - halfArrowSize, centerY);\n    ctx.lineTo(centerX, centerY - halfArrowSize);\n    ctx.lineTo(centerX + halfArrowSize, centerY);\n    ctx.lineTo(centerX + halfBaseSize, centerY);\n    ctx.lineTo(centerX + halfBaseSize, centerY + halfArrowSize);\n    ctx.lineTo(centerX - halfBaseSize, centerY + halfArrowSize);\n    ctx.lineTo(centerX - halfBaseSize, centerY);\n  } else {\n    ctx.moveTo(centerX - halfArrowSize, centerY);\n    ctx.lineTo(centerX, centerY + halfArrowSize);\n    ctx.lineTo(centerX + halfArrowSize, centerY);\n    ctx.lineTo(centerX + halfBaseSize, centerY);\n    ctx.lineTo(centerX + halfBaseSize, centerY - halfArrowSize);\n    ctx.lineTo(centerX - halfBaseSize, centerY - halfArrowSize);\n    ctx.lineTo(centerX - halfBaseSize, centerY);\n  }\n  ctx.fill();\n}\nfunction hitTestArrow(up, centerX, centerY, size, x, y) {\n  // TODO: implement arrow hit test\n  return hitTestSquare(centerX, centerY, size, x, y);\n}\nfunction drawCircle(ctx, centerX, centerY, size) {\n  const circleSize = shapeSize('circle', size);\n  const halfSize = (circleSize - 1) / 2;\n  ctx.beginPath();\n  ctx.arc(centerX, centerY, halfSize, 0, 2 * Math.PI, false);\n  ctx.fill();\n}\nfunction hitTestCircle(centerX, centerY, size, x, y) {\n  const circleSize = shapeSize('circle', size);\n  const tolerance = 2 + circleSize / 2;\n  const xOffset = centerX - x;\n  const yOffset = centerY - y;\n  const dist = Math.sqrt(xOffset * xOffset + yOffset * yOffset);\n  return dist <= tolerance;\n}\nfunction drawText(ctx, text, x, y) {\n  ctx.fillText(text, x, y);\n}\nfunction hitTestText(textX, textY, textWidth, textHeight, x, y) {\n  const halfHeight = textHeight / 2;\n  return x >= textX && x <= textX + textWidth && y >= textY - halfHeight && y <= textY + halfHeight;\n}\nclass SeriesMarkersRenderer extends MediaCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n    this._private__textWidthCache = new TextWidthCache();\n    this._private__fontSize = -1;\n    this._private__fontFamily = '';\n    this._private__font = '';\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal_setParams(fontSize, fontFamily) {\n    if (this._private__fontSize !== fontSize || this._private__fontFamily !== fontFamily) {\n      this._private__fontSize = fontSize;\n      this._private__fontFamily = fontFamily;\n      this._private__font = makeFont(fontSize, fontFamily);\n      this._private__textWidthCache._internal_reset();\n    }\n  }\n  _internal_hitTest(x, y) {\n    if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n      return null;\n    }\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const item = this._private__data._internal_items[i];\n      if (hitTestItem(item, x, y)) {\n        return {\n          _internal_hitTestData: item._internal_internalId,\n          _internal_externalId: item._internal_externalId\n        };\n      }\n    }\n    return null;\n  }\n  _internal__drawImpl({\n    context: ctx\n  }, isHovered, hitTestData) {\n    if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n      return;\n    }\n    ctx.textBaseline = 'middle';\n    ctx.font = this._private__font;\n    for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n      const item = this._private__data._internal_items[i];\n      if (item._internal_text !== undefined) {\n        item._internal_text._internal_width = this._private__textWidthCache._internal_measureText(ctx, item._internal_text._internal_content);\n        item._internal_text._internal_height = this._private__fontSize;\n        item._internal_text._internal_x = item._internal_x - item._internal_text._internal_width / 2;\n      }\n      drawItem(item, ctx);\n    }\n  }\n}\nfunction drawItem(item, ctx) {\n  ctx.fillStyle = item._internal_color;\n  if (item._internal_text !== undefined) {\n    drawText(ctx, item._internal_text._internal_content, item._internal_text._internal_x, item._internal_text._internal_y);\n  }\n  drawShape(item, ctx);\n}\nfunction drawShape(item, ctx) {\n  if (item._internal_size === 0) {\n    return;\n  }\n  switch (item._internal_shape) {\n    case 'arrowDown':\n      drawArrow(false, ctx, item._internal_x, item._internal_y, item._internal_size);\n      return;\n    case 'arrowUp':\n      drawArrow(true, ctx, item._internal_x, item._internal_y, item._internal_size);\n      return;\n    case 'circle':\n      drawCircle(ctx, item._internal_x, item._internal_y, item._internal_size);\n      return;\n    case 'square':\n      drawSquare(ctx, item._internal_x, item._internal_y, item._internal_size);\n      return;\n  }\n  ensureNever(item._internal_shape);\n}\nfunction hitTestItem(item, x, y) {\n  if (item._internal_text !== undefined && hitTestText(item._internal_text._internal_x, item._internal_text._internal_y, item._internal_text._internal_width, item._internal_text._internal_height, x, y)) {\n    return true;\n  }\n  return hitTestShape(item, x, y);\n}\nfunction hitTestShape(item, x, y) {\n  if (item._internal_size === 0) {\n    return false;\n  }\n  switch (item._internal_shape) {\n    case 'arrowDown':\n      return hitTestArrow(true, item._internal_x, item._internal_y, item._internal_size, x, y);\n    case 'arrowUp':\n      return hitTestArrow(false, item._internal_x, item._internal_y, item._internal_size, x, y);\n    case 'circle':\n      return hitTestCircle(item._internal_x, item._internal_y, item._internal_size, x, y);\n    case 'square':\n      return hitTestSquare(item._internal_x, item._internal_y, item._internal_size, x, y);\n  }\n}\n\n// eslint-disable-next-line max-params\nfunction fillSizeAndY(rendererItem, marker, seriesData, offsets, textHeight, shapeMargin, priceScale, timeScale, firstValue) {\n  const inBarPrice = isNumber(seriesData) ? seriesData : seriesData._internal_close;\n  const highPrice = isNumber(seriesData) ? seriesData : seriesData._internal_high;\n  const lowPrice = isNumber(seriesData) ? seriesData : seriesData._internal_low;\n  const sizeMultiplier = isNumber(marker.size) ? Math.max(marker.size, 0) : 1;\n  const shapeSize = calculateShapeHeight(timeScale._internal_barSpacing()) * sizeMultiplier;\n  const halfSize = shapeSize / 2;\n  rendererItem._internal_size = shapeSize;\n  switch (marker.position) {\n    case 'inBar':\n      {\n        rendererItem._internal_y = priceScale._internal_priceToCoordinate(inBarPrice, firstValue);\n        if (rendererItem._internal_text !== undefined) {\n          rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n        }\n\n        return;\n      }\n    case 'aboveBar':\n      {\n        rendererItem._internal_y = priceScale._internal_priceToCoordinate(highPrice, firstValue) - halfSize - offsets._internal_aboveBar;\n        if (rendererItem._internal_text !== undefined) {\n          rendererItem._internal_text._internal_y = rendererItem._internal_y - halfSize - textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n          offsets._internal_aboveBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n        }\n\n        offsets._internal_aboveBar += shapeSize + shapeMargin;\n        return;\n      }\n    case 'belowBar':\n      {\n        rendererItem._internal_y = priceScale._internal_priceToCoordinate(lowPrice, firstValue) + halfSize + offsets._internal_belowBar;\n        if (rendererItem._internal_text !== undefined) {\n          rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n          offsets._internal_belowBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n        }\n\n        offsets._internal_belowBar += shapeSize + shapeMargin;\n        return;\n      }\n  }\n  ensureNever(marker.position);\n}\nclass SeriesMarkersPaneView {\n  constructor(series, model) {\n    this._private__invalidated = true;\n    this._private__dataInvalidated = true;\n    this._private__autoScaleMarginsInvalidated = true;\n    this._private__autoScaleMargins = null;\n    this._private__renderer = new SeriesMarkersRenderer();\n    this._private__series = series;\n    this._private__model = model;\n    this._private__data = {\n      _internal_items: [],\n      _internal_visibleRange: null\n    };\n  }\n  _internal_update(updateType) {\n    this._private__invalidated = true;\n    this._private__autoScaleMarginsInvalidated = true;\n    if (updateType === 'data') {\n      this._private__dataInvalidated = true;\n    }\n  }\n  _internal_renderer(addAnchors) {\n    if (!this._private__series._internal_visible()) {\n      return null;\n    }\n    if (this._private__invalidated) {\n      this._internal__makeValid();\n    }\n    const layout = this._private__model._internal_options().layout;\n    this._private__renderer._internal_setParams(layout.fontSize, layout.fontFamily);\n    this._private__renderer._internal_setData(this._private__data);\n    return this._private__renderer;\n  }\n  _internal_autoScaleMargins() {\n    if (this._private__autoScaleMarginsInvalidated) {\n      if (this._private__series._internal_indexedMarkers().length > 0) {\n        const barSpacing = this._private__model._internal_timeScale()._internal_barSpacing();\n        const shapeMargin$1 = shapeMargin(barSpacing);\n        const marginsAboveAndBelow = calculateShapeHeight(barSpacing) * 1.5 + shapeMargin$1 * 2;\n        this._private__autoScaleMargins = {\n          above: marginsAboveAndBelow,\n          below: marginsAboveAndBelow\n        };\n      } else {\n        this._private__autoScaleMargins = null;\n      }\n      this._private__autoScaleMarginsInvalidated = false;\n    }\n    return this._private__autoScaleMargins;\n  }\n  _internal__makeValid() {\n    const priceScale = this._private__series._internal_priceScale();\n    const timeScale = this._private__model._internal_timeScale();\n    const seriesMarkers = this._private__series._internal_indexedMarkers();\n    if (this._private__dataInvalidated) {\n      this._private__data._internal_items = seriesMarkers.map(marker => ({\n        _internal_time: marker.time,\n        _internal_x: 0,\n        _internal_y: 0,\n        _internal_size: 0,\n        _internal_shape: marker.shape,\n        _internal_color: marker.color,\n        _internal_internalId: marker.internalId,\n        _internal_externalId: marker.id,\n        _internal_text: undefined\n      }));\n      this._private__dataInvalidated = false;\n    }\n    const layoutOptions = this._private__model._internal_options().layout;\n    this._private__data._internal_visibleRange = null;\n    const visibleBars = timeScale._internal_visibleStrictRange();\n    if (visibleBars === null) {\n      return;\n    }\n    const firstValue = this._private__series._internal_firstValue();\n    if (firstValue === null) {\n      return;\n    }\n    if (this._private__data._internal_items.length === 0) {\n      return;\n    }\n    let prevTimeIndex = NaN;\n    const shapeMargin$1 = shapeMargin(timeScale._internal_barSpacing());\n    const offsets = {\n      _internal_aboveBar: shapeMargin$1,\n      _internal_belowBar: shapeMargin$1\n    };\n    this._private__data._internal_visibleRange = visibleTimedValues(this._private__data._internal_items, visibleBars, true);\n    for (let index = this._private__data._internal_visibleRange.from; index < this._private__data._internal_visibleRange.to; index++) {\n      const marker = seriesMarkers[index];\n      if (marker.time !== prevTimeIndex) {\n        // new bar, reset stack counter\n        offsets._internal_aboveBar = shapeMargin$1;\n        offsets._internal_belowBar = shapeMargin$1;\n        prevTimeIndex = marker.time;\n      }\n      const rendererItem = this._private__data._internal_items[index];\n      rendererItem._internal_x = timeScale._internal_indexToCoordinate(marker.time);\n      if (marker.text !== undefined && marker.text.length > 0) {\n        rendererItem._internal_text = {\n          _internal_content: marker.text,\n          _internal_x: 0,\n          _internal_y: 0,\n          _internal_width: 0,\n          _internal_height: 0\n        };\n      }\n      const dataAt = this._private__series._internal_dataAt(marker.time);\n      if (dataAt === null) {\n        continue;\n      }\n      fillSizeAndY(rendererItem, marker, dataAt, offsets, layoutOptions.fontSize, shapeMargin$1, priceScale, timeScale, firstValue._internal_value);\n    }\n    this._private__invalidated = false;\n  }\n}\nclass SeriesPriceLinePaneView extends SeriesHorizontalLinePaneView {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(series) {\n    super(series);\n  }\n  _internal__updateImpl() {\n    const data = this._internal__lineRendererData;\n    data._internal_visible = false;\n    const seriesOptions = this._internal__series._internal_options();\n    if (!seriesOptions.priceLineVisible || !this._internal__series._internal_visible()) {\n      return;\n    }\n    const lastValueData = this._internal__series._internal_lastValueData(seriesOptions.priceLineSource === 0 /* PriceLineSource.LastBar */);\n    if (lastValueData._internal_noData) {\n      return;\n    }\n    data._internal_visible = true;\n    data._internal_y = lastValueData._internal_coordinate;\n    data._internal_color = this._internal__series._internal_priceLineColor(lastValueData._internal_color);\n    data._internal_lineWidth = seriesOptions.priceLineWidth;\n    data._internal_lineStyle = seriesOptions.priceLineStyle;\n  }\n}\nclass SeriesPriceAxisView extends PriceAxisView {\n  constructor(source) {\n    super();\n    this._private__source = source;\n  }\n  _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n    axisRendererData._internal_visible = false;\n    paneRendererData._internal_visible = false;\n    const source = this._private__source;\n    if (!source._internal_visible()) {\n      return;\n    }\n    const seriesOptions = source._internal_options();\n    const showSeriesLastValue = seriesOptions.lastValueVisible;\n    const showSymbolLabel = source._internal_title() !== '';\n    const showPriceAndPercentage = seriesOptions.seriesLastValueMode === 0 /* PriceAxisLastValueMode.LastPriceAndPercentageValue */;\n    const lastValueData = source._internal_lastValueData(false);\n    if (lastValueData._internal_noData) {\n      return;\n    }\n    if (showSeriesLastValue) {\n      axisRendererData._internal_text = this._internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage);\n      axisRendererData._internal_visible = axisRendererData._internal_text.length !== 0;\n    }\n    if (showSymbolLabel || showPriceAndPercentage) {\n      paneRendererData._internal_text = this._internal__paneText(lastValueData, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage);\n      paneRendererData._internal_visible = paneRendererData._internal_text.length > 0;\n    }\n    const lastValueColor = source._internal_priceLineColor(lastValueData._internal_color);\n    const colors = generateContrastColors(lastValueColor);\n    commonRendererData._internal_background = colors._internal_background;\n    commonRendererData._internal_coordinate = lastValueData._internal_coordinate;\n    paneRendererData._internal_borderColor = source._internal_model()._internal_backgroundColorAtYPercentFromTop(lastValueData._internal_coordinate / source._internal_priceScale()._internal_height());\n    axisRendererData._internal_borderColor = lastValueColor;\n    axisRendererData._internal_color = colors._internal_foreground;\n    paneRendererData._internal_color = colors._internal_foreground;\n  }\n  _internal__paneText(lastValue, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage) {\n    let result = '';\n    const title = this._private__source._internal_title();\n    if (showSymbolLabel && title.length !== 0) {\n      result += `${title} `;\n    }\n    if (showSeriesLastValue && showPriceAndPercentage) {\n      result += this._private__source._internal_priceScale()._internal_isPercentage() ? lastValue._internal_formattedPriceAbsolute : lastValue._internal_formattedPricePercentage;\n    }\n    return result.trim();\n  }\n  _internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage) {\n    if (!showSeriesLastValue) {\n      return '';\n    }\n    if (!showPriceAndPercentage) {\n      return lastValueData._internal_text;\n    }\n    return this._private__source._internal_priceScale()._internal_isPercentage() ? lastValueData._internal_formattedPricePercentage : lastValueData._internal_formattedPriceAbsolute;\n  }\n}\nclass PriceRangeImpl {\n  constructor(minValue, maxValue) {\n    this._private__minValue = minValue;\n    this._private__maxValue = maxValue;\n  }\n  _internal_equals(pr) {\n    if (pr === null) {\n      return false;\n    }\n    return this._private__minValue === pr._private__minValue && this._private__maxValue === pr._private__maxValue;\n  }\n  _internal_clone() {\n    return new PriceRangeImpl(this._private__minValue, this._private__maxValue);\n  }\n  _internal_minValue() {\n    return this._private__minValue;\n  }\n  _internal_maxValue() {\n    return this._private__maxValue;\n  }\n  _internal_length() {\n    return this._private__maxValue - this._private__minValue;\n  }\n  _internal_isEmpty() {\n    return this._private__maxValue === this._private__minValue || Number.isNaN(this._private__maxValue) || Number.isNaN(this._private__minValue);\n  }\n  _internal_merge(anotherRange) {\n    if (anotherRange === null) {\n      return this;\n    }\n    return new PriceRangeImpl(Math.min(this._internal_minValue(), anotherRange._internal_minValue()), Math.max(this._internal_maxValue(), anotherRange._internal_maxValue()));\n  }\n  _internal_scaleAroundCenter(coeff) {\n    if (!isNumber(coeff)) {\n      return;\n    }\n    const delta = this._private__maxValue - this._private__minValue;\n    if (delta === 0) {\n      return;\n    }\n    const center = (this._private__maxValue + this._private__minValue) * 0.5;\n    let maxDelta = this._private__maxValue - center;\n    let minDelta = this._private__minValue - center;\n    maxDelta *= coeff;\n    minDelta *= coeff;\n    this._private__maxValue = center + maxDelta;\n    this._private__minValue = center + minDelta;\n  }\n  _internal_shift(delta) {\n    if (!isNumber(delta)) {\n      return;\n    }\n    this._private__maxValue += delta;\n    this._private__minValue += delta;\n  }\n  _internal_toRaw() {\n    return {\n      minValue: this._private__minValue,\n      maxValue: this._private__maxValue\n    };\n  }\n  static _internal_fromRaw(raw) {\n    return raw === null ? null : new PriceRangeImpl(raw.minValue, raw.maxValue);\n  }\n}\nclass AutoscaleInfoImpl {\n  constructor(priceRange, margins) {\n    this._private__priceRange = priceRange;\n    this._private__margins = margins || null;\n  }\n  _internal_priceRange() {\n    return this._private__priceRange;\n  }\n  _internal_margins() {\n    return this._private__margins;\n  }\n  _internal_toRaw() {\n    if (this._private__priceRange === null) {\n      return null;\n    }\n    return {\n      priceRange: this._private__priceRange._internal_toRaw(),\n      margins: this._private__margins || undefined\n    };\n  }\n  static _internal_fromRaw(raw) {\n    return raw === null ? null : new AutoscaleInfoImpl(PriceRangeImpl._internal_fromRaw(raw.priceRange), raw.margins);\n  }\n}\nclass CustomPriceLinePaneView extends SeriesHorizontalLinePaneView {\n  constructor(series, priceLine) {\n    super(series);\n    this._private__priceLine = priceLine;\n  }\n  _internal__updateImpl() {\n    const data = this._internal__lineRendererData;\n    data._internal_visible = false;\n    const lineOptions = this._private__priceLine._internal_options();\n    if (!this._internal__series._internal_visible() || !lineOptions.lineVisible) {\n      return;\n    }\n    const y = this._private__priceLine._internal_yCoord();\n    if (y === null) {\n      return;\n    }\n    data._internal_visible = true;\n    data._internal_y = y;\n    data._internal_color = lineOptions.color;\n    data._internal_lineWidth = lineOptions.lineWidth;\n    data._internal_lineStyle = lineOptions.lineStyle;\n    data._internal_externalId = this._private__priceLine._internal_options().id;\n  }\n}\nclass CustomPriceLinePriceAxisView extends PriceAxisView {\n  constructor(series, priceLine) {\n    super();\n    this._private__series = series;\n    this._private__priceLine = priceLine;\n  }\n  _internal__updateRendererData(axisRendererData, paneRendererData, commonData) {\n    axisRendererData._internal_visible = false;\n    paneRendererData._internal_visible = false;\n    const options = this._private__priceLine._internal_options();\n    const labelVisible = options.axisLabelVisible;\n    const showPaneLabel = options.title !== '';\n    const series = this._private__series;\n    if (!labelVisible || !series._internal_visible()) {\n      return;\n    }\n    const y = this._private__priceLine._internal_yCoord();\n    if (y === null) {\n      return;\n    }\n    if (showPaneLabel) {\n      paneRendererData._internal_text = options.title;\n      paneRendererData._internal_visible = true;\n    }\n    paneRendererData._internal_borderColor = series._internal_model()._internal_backgroundColorAtYPercentFromTop(y / series._internal_priceScale()._internal_height());\n    axisRendererData._internal_text = this._private__formatPrice(options.price);\n    axisRendererData._internal_visible = true;\n    const colors = generateContrastColors(options.axisLabelColor || options.color);\n    commonData._internal_background = colors._internal_background;\n    const textColor = options.axisLabelTextColor || colors._internal_foreground;\n    axisRendererData._internal_color = textColor; // price text\n    paneRendererData._internal_color = textColor; // title text\n    commonData._internal_coordinate = y;\n  }\n  _private__formatPrice(price) {\n    const firstValue = this._private__series._internal_firstValue();\n    if (firstValue === null) {\n      return '';\n    }\n    return this._private__series._internal_priceScale()._internal_formatPrice(price, firstValue._internal_value);\n  }\n}\nclass CustomPriceLine {\n  constructor(series, options) {\n    this._private__series = series;\n    this._private__options = options;\n    this._private__priceLineView = new CustomPriceLinePaneView(series, this);\n    this._private__priceAxisView = new CustomPriceLinePriceAxisView(series, this);\n    this._private__panePriceAxisView = new PanePriceAxisView(this._private__priceAxisView, series, series._internal_model());\n  }\n  _internal_applyOptions(options) {\n    merge(this._private__options, options);\n    this._internal_update();\n    this._private__series._internal_model()._internal_lightUpdate();\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_paneView() {\n    return this._private__priceLineView;\n  }\n  _internal_labelPaneView() {\n    return this._private__panePriceAxisView;\n  }\n  _internal_priceAxisView() {\n    return this._private__priceAxisView;\n  }\n  _internal_update() {\n    this._private__priceLineView._internal_update();\n    this._private__priceAxisView._internal_update();\n  }\n  _internal_yCoord() {\n    const series = this._private__series;\n    const priceScale = series._internal_priceScale();\n    const timeScale = series._internal_model()._internal_timeScale();\n    if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n      return null;\n    }\n    const firstValue = series._internal_firstValue();\n    if (firstValue === null) {\n      return null;\n    }\n    return priceScale._internal_priceToCoordinate(this._private__options.price, firstValue._internal_value);\n  }\n}\nclass PriceDataSource extends DataSource {\n  constructor(model) {\n    super();\n    this._private__model = model;\n  }\n  _internal_model() {\n    return this._private__model;\n  }\n}\nconst barStyleFnMap = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Bar: (findBar, barStyle, barIndex, precomputedBars) => {\n    var _a;\n    const upColor = barStyle.upColor;\n    const downColor = barStyle.downColor;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n    return {\n      _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : isUp ? upColor : downColor\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Candlestick: (findBar, candlestickStyle, barIndex, precomputedBars) => {\n    var _a, _b, _c;\n    const upColor = candlestickStyle.upColor;\n    const downColor = candlestickStyle.downColor;\n    const borderUpColor = candlestickStyle.borderUpColor;\n    const borderDownColor = candlestickStyle.borderDownColor;\n    const wickUpColor = candlestickStyle.wickUpColor;\n    const wickDownColor = candlestickStyle.wickDownColor;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n    return {\n      _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : isUp ? upColor : downColor,\n      _internal_barBorderColor: (_b = currentBar._internal_borderColor) !== null && _b !== void 0 ? _b : isUp ? borderUpColor : borderDownColor,\n      _internal_barWickColor: (_c = currentBar._internal_wickColor) !== null && _c !== void 0 ? _c : isUp ? wickUpColor : wickDownColor\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Area: (findBar, areaStyle, barIndex, precomputedBars) => {\n    var _a, _b, _c, _d;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    return {\n      _internal_barColor: (_a = currentBar._internal_lineColor) !== null && _a !== void 0 ? _a : areaStyle.lineColor,\n      _internal_lineColor: (_b = currentBar._internal_lineColor) !== null && _b !== void 0 ? _b : areaStyle.lineColor,\n      _internal_topColor: (_c = currentBar._internal_topColor) !== null && _c !== void 0 ? _c : areaStyle.topColor,\n      _internal_bottomColor: (_d = currentBar._internal_bottomColor) !== null && _d !== void 0 ? _d : areaStyle.bottomColor\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Baseline: (findBar, baselineStyle, barIndex, precomputedBars) => {\n    var _a, _b, _c, _d, _e, _f;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    const isAboveBaseline = currentBar._internal_value[3 /* PlotRowValueIndex.Close */] >= baselineStyle.baseValue.price;\n    return {\n      _internal_barColor: isAboveBaseline ? baselineStyle.topLineColor : baselineStyle.bottomLineColor,\n      _internal_topLineColor: (_a = currentBar._internal_topLineColor) !== null && _a !== void 0 ? _a : baselineStyle.topLineColor,\n      _internal_bottomLineColor: (_b = currentBar._internal_bottomLineColor) !== null && _b !== void 0 ? _b : baselineStyle.bottomLineColor,\n      _internal_topFillColor1: (_c = currentBar._internal_topFillColor1) !== null && _c !== void 0 ? _c : baselineStyle.topFillColor1,\n      _internal_topFillColor2: (_d = currentBar._internal_topFillColor2) !== null && _d !== void 0 ? _d : baselineStyle.topFillColor2,\n      _internal_bottomFillColor1: (_e = currentBar._internal_bottomFillColor1) !== null && _e !== void 0 ? _e : baselineStyle.bottomFillColor1,\n      _internal_bottomFillColor2: (_f = currentBar._internal_bottomFillColor2) !== null && _f !== void 0 ? _f : baselineStyle.bottomFillColor2\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Line: (findBar, lineStyle, barIndex, precomputedBars) => {\n    var _a, _b;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    return {\n      _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : lineStyle.color,\n      _internal_lineColor: (_b = currentBar._internal_color) !== null && _b !== void 0 ? _b : lineStyle.color\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  Histogram: (findBar, histogramStyle, barIndex, precomputedBars) => {\n    var _a;\n    const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n    return {\n      _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : histogramStyle.color\n    };\n  }\n};\nclass SeriesBarColorer {\n  constructor(series) {\n    this._private__findBar = (barIndex, precomputedBars) => {\n      if (precomputedBars !== undefined) {\n        return precomputedBars._internal_value;\n      }\n      return this._private__series._internal_bars()._internal_valueAt(barIndex);\n    };\n    this._private__series = series;\n    this._private__styleGetter = barStyleFnMap[series._internal_seriesType()];\n  }\n  _internal_barStyle(barIndex, precomputedBars) {\n    // precomputedBars: {value: [Array BarValues], previousValue: [Array BarValues] | undefined}\n    // Used to avoid binary search if bars are already known\n    return this._private__styleGetter(this._private__findBar, this._private__series._internal_options(), barIndex, precomputedBars);\n  }\n}\n\n/**\n * Search direction if no data found at provided index\n */\nvar MismatchDirection;\n(function (MismatchDirection) {\n  /**\n   * Search the nearest left item\n   */\n  MismatchDirection[MismatchDirection[\"NearestLeft\"] = -1] = \"NearestLeft\";\n  /**\n   * Do not search\n   */\n  MismatchDirection[MismatchDirection[\"None\"] = 0] = \"None\";\n  /**\n   * Search the nearest right item\n   */\n  MismatchDirection[MismatchDirection[\"NearestRight\"] = 1] = \"NearestRight\";\n})(MismatchDirection || (MismatchDirection = {}));\n// TODO: think about changing it dynamically\nconst CHUNK_SIZE = 30;\n/**\n * PlotList is an array of plot rows\n * each plot row consists of key (index in timescale) and plot value map\n */\nclass PlotList {\n  constructor() {\n    this._private__items = [];\n    this._private__minMaxCache = new Map();\n    this._private__rowSearchCache = new Map();\n  }\n  // @returns Last row\n  _internal_last() {\n    return this._internal_size() > 0 ? this._private__items[this._private__items.length - 1] : null;\n  }\n  _internal_firstIndex() {\n    return this._internal_size() > 0 ? this._private__indexAt(0) : null;\n  }\n  _internal_lastIndex() {\n    return this._internal_size() > 0 ? this._private__indexAt(this._private__items.length - 1) : null;\n  }\n  _internal_size() {\n    return this._private__items.length;\n  }\n  _internal_isEmpty() {\n    return this._internal_size() === 0;\n  }\n  _internal_contains(index) {\n    return this._private__search(index, 0 /* MismatchDirection.None */) !== null;\n  }\n  _internal_valueAt(index) {\n    return this._internal_search(index);\n  }\n  _internal_search(index, searchMode = 0 /* MismatchDirection.None */) {\n    const pos = this._private__search(index, searchMode);\n    if (pos === null) {\n      return null;\n    }\n    return Object.assign(Object.assign({}, this._private__valueAt(pos)), {\n      _internal_index: this._private__indexAt(pos)\n    });\n  }\n  _internal_rows() {\n    return this._private__items;\n  }\n  _internal_minMaxOnRangeCached(start, end, plots) {\n    // this code works for single series only\n    // could fail after whitespaces implementation\n    if (this._internal_isEmpty()) {\n      return null;\n    }\n    let result = null;\n    for (const plot of plots) {\n      const plotMinMax = this._private__minMaxOnRangeCachedImpl(start, end, plot);\n      result = mergeMinMax(result, plotMinMax);\n    }\n    return result;\n  }\n  _internal_setData(plotRows) {\n    this._private__rowSearchCache.clear();\n    this._private__minMaxCache.clear();\n    this._private__items = plotRows;\n  }\n  _private__indexAt(offset) {\n    return this._private__items[offset]._internal_index;\n  }\n  _private__valueAt(offset) {\n    return this._private__items[offset];\n  }\n  _private__search(index, searchMode) {\n    const exactPos = this._private__bsearch(index);\n    if (exactPos === null && searchMode !== 0 /* MismatchDirection.None */) {\n      switch (searchMode) {\n        case -1 /* MismatchDirection.NearestLeft */:\n          return this._private__searchNearestLeft(index);\n        case 1 /* MismatchDirection.NearestRight */:\n          return this._private__searchNearestRight(index);\n        default:\n          throw new TypeError('Unknown search mode');\n      }\n    }\n    return exactPos;\n  }\n  _private__searchNearestLeft(index) {\n    let nearestLeftPos = this._private__lowerbound(index);\n    if (nearestLeftPos > 0) {\n      nearestLeftPos = nearestLeftPos - 1;\n    }\n    return nearestLeftPos !== this._private__items.length && this._private__indexAt(nearestLeftPos) < index ? nearestLeftPos : null;\n  }\n  _private__searchNearestRight(index) {\n    const nearestRightPos = this._private__upperbound(index);\n    return nearestRightPos !== this._private__items.length && index < this._private__indexAt(nearestRightPos) ? nearestRightPos : null;\n  }\n  _private__bsearch(index) {\n    const start = this._private__lowerbound(index);\n    if (start !== this._private__items.length && !(index < this._private__items[start]._internal_index)) {\n      return start;\n    }\n    return null;\n  }\n  _private__lowerbound(index) {\n    return lowerbound(this._private__items, index, (a, b) => a._internal_index < b);\n  }\n  _private__upperbound(index) {\n    return upperbound(this._private__items, index, (a, b) => b._internal_index > a);\n  }\n  _private__plotMinMax(startIndex, endIndexExclusive, plotIndex) {\n    let result = null;\n    for (let i = startIndex; i < endIndexExclusive; i++) {\n      const values = this._private__items[i]._internal_value;\n      const v = values[plotIndex];\n      if (Number.isNaN(v)) {\n        continue;\n      }\n      if (result === null) {\n        result = {\n          _internal_min: v,\n          _internal_max: v\n        };\n      } else {\n        if (v < result._internal_min) {\n          result._internal_min = v;\n        }\n        if (v > result._internal_max) {\n          result._internal_max = v;\n        }\n      }\n    }\n    return result;\n  }\n  _private__minMaxOnRangeCachedImpl(start, end, plotIndex) {\n    // this code works for single series only\n    // could fail after whitespaces implementation\n    if (this._internal_isEmpty()) {\n      return null;\n    }\n    let result = null;\n    // assume that bar indexes only increase\n    const firstIndex = ensureNotNull(this._internal_firstIndex());\n    const lastIndex = ensureNotNull(this._internal_lastIndex());\n    const s = Math.max(start, firstIndex);\n    const e = Math.min(end, lastIndex);\n    const cachedLow = Math.ceil(s / CHUNK_SIZE) * CHUNK_SIZE;\n    const cachedHigh = Math.max(cachedLow, Math.floor(e / CHUNK_SIZE) * CHUNK_SIZE);\n    {\n      const startIndex = this._private__lowerbound(s);\n      const endIndex = this._private__upperbound(Math.min(e, cachedLow, end)); // non-inclusive end\n      const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n      result = mergeMinMax(result, plotMinMax);\n    }\n    let minMaxCache = this._private__minMaxCache.get(plotIndex);\n    if (minMaxCache === undefined) {\n      minMaxCache = new Map();\n      this._private__minMaxCache.set(plotIndex, minMaxCache);\n    }\n    // now go cached\n    for (let c = Math.max(cachedLow + 1, s); c < cachedHigh; c += CHUNK_SIZE) {\n      const chunkIndex = Math.floor(c / CHUNK_SIZE);\n      let chunkMinMax = minMaxCache.get(chunkIndex);\n      if (chunkMinMax === undefined) {\n        const chunkStart = this._private__lowerbound(chunkIndex * CHUNK_SIZE);\n        const chunkEnd = this._private__upperbound((chunkIndex + 1) * CHUNK_SIZE - 1);\n        chunkMinMax = this._private__plotMinMax(chunkStart, chunkEnd, plotIndex);\n        minMaxCache.set(chunkIndex, chunkMinMax);\n      }\n      result = mergeMinMax(result, chunkMinMax);\n    }\n    // tail\n    {\n      const startIndex = this._private__lowerbound(cachedHigh);\n      const endIndex = this._private__upperbound(e); // non-inclusive end\n      const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n      result = mergeMinMax(result, plotMinMax);\n    }\n    return result;\n  }\n}\nfunction mergeMinMax(first, second) {\n  if (first === null) {\n    return second;\n  } else {\n    if (second === null) {\n      return first;\n    } else {\n      // merge MinMax values\n      const min = Math.min(first._internal_min, second._internal_min);\n      const max = Math.max(first._internal_max, second._internal_max);\n      return {\n        _internal_min: min,\n        _internal_max: max\n      };\n    }\n  }\n}\nfunction createSeriesPlotList() {\n  return new PlotList();\n}\nclass Series extends PriceDataSource {\n  constructor(model, options, seriesType) {\n    super(model);\n    this._private__data = createSeriesPlotList();\n    this._private__priceLineView = new SeriesPriceLinePaneView(this);\n    this._private__customPriceLines = [];\n    this._private__baseHorizontalLineView = new SeriesHorizontalBaseLinePaneView(this);\n    this._private__lastPriceAnimationPaneView = null;\n    this._private__barColorerCache = null;\n    this._private__markers = [];\n    this._private__indexedMarkers = [];\n    this._private__animationTimeoutId = null;\n    this._private__options = options;\n    this._private__seriesType = seriesType;\n    const priceAxisView = new SeriesPriceAxisView(this);\n    this._private__priceAxisViews = [priceAxisView];\n    this._private__panePriceAxisView = new PanePriceAxisView(priceAxisView, this, model);\n    if (seriesType === 'Area' || seriesType === 'Line' || seriesType === 'Baseline') {\n      this._private__lastPriceAnimationPaneView = new SeriesLastPriceAnimationPaneView(this);\n    }\n    this._private__recreateFormatter();\n    this._private__recreatePaneViews();\n  }\n  _internal_destroy() {\n    if (this._private__animationTimeoutId !== null) {\n      clearTimeout(this._private__animationTimeoutId);\n    }\n  }\n  _internal_priceLineColor(lastBarColor) {\n    return this._private__options.priceLineColor || lastBarColor;\n  }\n  _internal_lastValueData(globalLast) {\n    const noDataRes = {\n      _internal_noData: true\n    };\n    const priceScale = this._internal_priceScale();\n    if (this._internal_model()._internal_timeScale()._internal_isEmpty() || priceScale._internal_isEmpty() || this._private__data._internal_isEmpty()) {\n      return noDataRes;\n    }\n    const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n    const firstValue = this._internal_firstValue();\n    if (visibleBars === null || firstValue === null) {\n      return noDataRes;\n    }\n    // find range of bars inside range\n    // TODO: make it more optimal\n    let bar;\n    let lastIndex;\n    if (globalLast) {\n      const lastBar = this._private__data._internal_last();\n      if (lastBar === null) {\n        return noDataRes;\n      }\n      bar = lastBar;\n      lastIndex = lastBar._internal_index;\n    } else {\n      const endBar = this._private__data._internal_search(visibleBars._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n      if (endBar === null) {\n        return noDataRes;\n      }\n      bar = this._private__data._internal_valueAt(endBar._internal_index);\n      if (bar === null) {\n        return noDataRes;\n      }\n      lastIndex = endBar._internal_index;\n    }\n    const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n    const barColorer = this._internal_barColorer();\n    const style = barColorer._internal_barStyle(lastIndex, {\n      _internal_value: bar\n    });\n    const coordinate = priceScale._internal_priceToCoordinate(price, firstValue._internal_value);\n    return {\n      _internal_noData: false,\n      _internal_price: price,\n      _internal_text: priceScale._internal_formatPrice(price, firstValue._internal_value),\n      _internal_formattedPriceAbsolute: priceScale._internal_formatPriceAbsolute(price),\n      _internal_formattedPricePercentage: priceScale._internal_formatPricePercentage(price, firstValue._internal_value),\n      _internal_color: style._internal_barColor,\n      _internal_coordinate: coordinate,\n      _internal_index: lastIndex\n    };\n  }\n  _internal_barColorer() {\n    if (this._private__barColorerCache !== null) {\n      return this._private__barColorerCache;\n    }\n    this._private__barColorerCache = new SeriesBarColorer(this);\n    return this._private__barColorerCache;\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyOptions(options) {\n    const targetPriceScaleId = options.priceScaleId;\n    if (targetPriceScaleId !== undefined && targetPriceScaleId !== this._private__options.priceScaleId) {\n      // series cannot do it itself, ask model\n      this._internal_model()._internal_moveSeriesToScale(this, targetPriceScaleId);\n    }\n    merge(this._private__options, options);\n    if (options.priceFormat !== undefined) {\n      this._private__recreateFormatter();\n      // updated formatter might affect rendering  and as a consequence of this the width of price axis might be changed\n      // thus we need to force the chart to do a full update to apply changes correctly\n      // full update is quite heavy operation in terms of performance\n      // but updating formatter looks like quite rare so forcing a full update here shouldn't affect the performance a lot\n      this._internal_model()._internal_fullUpdate();\n    }\n    this._internal_model()._internal_updateSource(this);\n    // a series might affect crosshair by some options (like crosshair markers)\n    // that's why we need to update crosshair as well\n    this._internal_model()._internal_updateCrosshair();\n    this._private__paneView._internal_update('options');\n  }\n  _internal_setData(data, updateInfo) {\n    this._private__data._internal_setData(data);\n    this._private__recalculateMarkers();\n    this._private__paneView._internal_update('data');\n    this._private__markersPaneView._internal_update('data');\n    if (this._private__lastPriceAnimationPaneView !== null) {\n      if (updateInfo && updateInfo._internal_lastBarUpdatedOrNewBarsAddedToTheRight) {\n        this._private__lastPriceAnimationPaneView._internal_onNewRealtimeDataReceived();\n      } else if (data.length === 0) {\n        this._private__lastPriceAnimationPaneView._internal_onDataCleared();\n      }\n    }\n    const sourcePane = this._internal_model()._internal_paneForSource(this);\n    this._internal_model()._internal_recalculatePane(sourcePane);\n    this._internal_model()._internal_updateSource(this);\n    this._internal_model()._internal_updateCrosshair();\n    this._internal_model()._internal_lightUpdate();\n  }\n  _internal_setMarkers(data) {\n    this._private__markers = data;\n    this._private__recalculateMarkers();\n    const sourcePane = this._internal_model()._internal_paneForSource(this);\n    this._private__markersPaneView._internal_update('data');\n    this._internal_model()._internal_recalculatePane(sourcePane);\n    this._internal_model()._internal_updateSource(this);\n    this._internal_model()._internal_updateCrosshair();\n    this._internal_model()._internal_lightUpdate();\n  }\n  _internal_markers() {\n    return this._private__markers;\n  }\n  _internal_indexedMarkers() {\n    return this._private__indexedMarkers;\n  }\n  _internal_createPriceLine(options) {\n    const result = new CustomPriceLine(this, options);\n    this._private__customPriceLines.push(result);\n    this._internal_model()._internal_updateSource(this);\n    return result;\n  }\n  _internal_removePriceLine(line) {\n    const index = this._private__customPriceLines.indexOf(line);\n    if (index !== -1) {\n      this._private__customPriceLines.splice(index, 1);\n    }\n    this._internal_model()._internal_updateSource(this);\n  }\n  _internal_seriesType() {\n    return this._private__seriesType;\n  }\n  _internal_firstValue() {\n    const bar = this._internal_firstBar();\n    if (bar === null) {\n      return null;\n    }\n    return {\n      _internal_value: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n      _internal_timePoint: bar._internal_time\n    };\n  }\n  _internal_firstBar() {\n    const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n    if (visibleBars === null) {\n      return null;\n    }\n    const startTimePoint = visibleBars._internal_left();\n    return this._private__data._internal_search(startTimePoint, 1 /* MismatchDirection.NearestRight */);\n  }\n\n  _internal_bars() {\n    return this._private__data;\n  }\n  _internal_dataAt(time) {\n    const prices = this._private__data._internal_valueAt(time);\n    if (prices === null) {\n      return null;\n    }\n    if (this._private__seriesType === 'Bar' || this._private__seriesType === 'Candlestick') {\n      return {\n        _internal_open: prices._internal_value[0 /* PlotRowValueIndex.Open */],\n        _internal_high: prices._internal_value[1 /* PlotRowValueIndex.High */],\n        _internal_low: prices._internal_value[2 /* PlotRowValueIndex.Low */],\n        _internal_close: prices._internal_value[3 /* PlotRowValueIndex.Close */]\n      };\n    } else {\n      return prices._internal_value[3 /* PlotRowValueIndex.Close */];\n    }\n  }\n\n  _internal_topPaneViews(pane) {\n    const animationPaneView = this._private__lastPriceAnimationPaneView;\n    if (animationPaneView === null || !animationPaneView._internal_visible()) {\n      return [];\n    }\n    if (this._private__animationTimeoutId === null && animationPaneView._internal_animationActive()) {\n      this._private__animationTimeoutId = setTimeout(() => {\n        this._private__animationTimeoutId = null;\n        this._internal_model()._internal_cursorUpdate();\n      }, 0);\n    }\n    animationPaneView._internal_invalidateStage();\n    return [animationPaneView];\n  }\n  _internal_paneViews() {\n    const res = [];\n    if (!this._private__isOverlay()) {\n      res.push(this._private__baseHorizontalLineView);\n    }\n    res.push(this._private__paneView, this._private__priceLineView, this._private__markersPaneView);\n    const priceLineViews = this._private__customPriceLines.map(line => line._internal_paneView());\n    res.push(...priceLineViews);\n    return res;\n  }\n  _internal_labelPaneViews(pane) {\n    return [this._private__panePriceAxisView, ...this._private__customPriceLines.map(line => line._internal_labelPaneView())];\n  }\n  _internal_priceAxisViews(pane, priceScale) {\n    if (priceScale !== this._internal__priceScale && !this._private__isOverlay()) {\n      return [];\n    }\n    const result = [...this._private__priceAxisViews];\n    for (const customPriceLine of this._private__customPriceLines) {\n      result.push(customPriceLine._internal_priceAxisView());\n    }\n    return result;\n  }\n  _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n    if (this._private__options.autoscaleInfoProvider !== undefined) {\n      const autoscaleInfo = this._private__options.autoscaleInfoProvider(() => {\n        const res = this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n        return res === null ? null : res._internal_toRaw();\n      });\n      return AutoscaleInfoImpl._internal_fromRaw(autoscaleInfo);\n    }\n    return this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n  }\n  _internal_minMove() {\n    return this._private__options.priceFormat.minMove;\n  }\n  _internal_formatter() {\n    return this._private__formatter;\n  }\n  _internal_updateAllViews() {\n    var _a;\n    this._private__paneView._internal_update();\n    this._private__markersPaneView._internal_update();\n    for (const priceAxisView of this._private__priceAxisViews) {\n      priceAxisView._internal_update();\n    }\n    for (const customPriceLine of this._private__customPriceLines) {\n      customPriceLine._internal_update();\n    }\n    this._private__priceLineView._internal_update();\n    this._private__baseHorizontalLineView._internal_update();\n    (_a = this._private__lastPriceAnimationPaneView) === null || _a === void 0 ? void 0 : _a._internal_update();\n  }\n  _internal_priceScale() {\n    return ensureNotNull(super._internal_priceScale());\n  }\n  _internal_markerDataAtIndex(index) {\n    const getValue = (this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline') && this._private__options.crosshairMarkerVisible;\n    if (!getValue) {\n      return null;\n    }\n    const bar = this._private__data._internal_valueAt(index);\n    if (bar === null) {\n      return null;\n    }\n    const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n    const radius = this._private__markerRadius();\n    const borderColor = this._private__markerBorderColor();\n    const borderWidth = this._private__markerBorderWidth();\n    const backgroundColor = this._private__markerBackgroundColor(index);\n    return {\n      _internal_price: price,\n      _internal_radius: radius,\n      _internal_borderColor: borderColor,\n      _internal_borderWidth: borderWidth,\n      _internal_backgroundColor: backgroundColor\n    };\n  }\n  _internal_title() {\n    return this._private__options.title;\n  }\n  _internal_visible() {\n    return this._private__options.visible;\n  }\n  _private__isOverlay() {\n    const priceScale = this._internal_priceScale();\n    return !isDefaultPriceScale(priceScale._internal_id());\n  }\n  _private__autoscaleInfoImpl(startTimePoint, endTimePoint) {\n    if (!isInteger(startTimePoint) || !isInteger(endTimePoint) || this._private__data._internal_isEmpty()) {\n      return null;\n    }\n    // TODO: refactor this\n    // series data is strongly hardcoded to keep bars\n    const plots = this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline' || this._private__seriesType === 'Histogram' ? [3 /* PlotRowValueIndex.Close */] : [2 /* PlotRowValueIndex.Low */, 1 /* PlotRowValueIndex.High */];\n    const barsMinMax = this._private__data._internal_minMaxOnRangeCached(startTimePoint, endTimePoint, plots);\n    let range = barsMinMax !== null ? new PriceRangeImpl(barsMinMax._internal_min, barsMinMax._internal_max) : null;\n    if (this._internal_seriesType() === 'Histogram') {\n      const base = this._private__options.base;\n      const rangeWithBase = new PriceRangeImpl(base, base);\n      range = range !== null ? range._internal_merge(rangeWithBase) : rangeWithBase;\n    }\n    return new AutoscaleInfoImpl(range, this._private__markersPaneView._internal_autoScaleMargins());\n  }\n  _private__markerRadius() {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        return this._private__options.crosshairMarkerRadius;\n    }\n    return 0;\n  }\n  _private__markerBorderColor() {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        {\n          const crosshairMarkerBorderColor = this._private__options.crosshairMarkerBorderColor;\n          if (crosshairMarkerBorderColor.length !== 0) {\n            return crosshairMarkerBorderColor;\n          }\n        }\n    }\n    return null;\n  }\n  _private__markerBorderWidth() {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        return this._private__options.crosshairMarkerBorderWidth;\n    }\n    return 0;\n  }\n  _private__markerBackgroundColor(index) {\n    switch (this._private__seriesType) {\n      case 'Line':\n      case 'Area':\n      case 'Baseline':\n        {\n          const crosshairMarkerBackgroundColor = this._private__options.crosshairMarkerBackgroundColor;\n          if (crosshairMarkerBackgroundColor.length !== 0) {\n            return crosshairMarkerBackgroundColor;\n          }\n        }\n    }\n    return this._internal_barColorer()._internal_barStyle(index)._internal_barColor;\n  }\n  _private__recreateFormatter() {\n    switch (this._private__options.priceFormat.type) {\n      case 'custom':\n        {\n          this._private__formatter = {\n            format: this._private__options.priceFormat.formatter\n          };\n          break;\n        }\n      case 'volume':\n        {\n          this._private__formatter = new VolumeFormatter(this._private__options.priceFormat.precision);\n          break;\n        }\n      case 'percent':\n        {\n          this._private__formatter = new PercentageFormatter(this._private__options.priceFormat.precision);\n          break;\n        }\n      default:\n        {\n          const priceScale = Math.pow(10, this._private__options.priceFormat.precision);\n          this._private__formatter = new PriceFormatter(priceScale, this._private__options.priceFormat.minMove * priceScale);\n        }\n    }\n    if (this._internal__priceScale !== null) {\n      this._internal__priceScale._internal_updateFormatter();\n    }\n  }\n  _private__recalculateMarkers() {\n    const timeScale = this._internal_model()._internal_timeScale();\n    if (!timeScale._internal_hasPoints() || this._private__data._internal_isEmpty()) {\n      this._private__indexedMarkers = [];\n      return;\n    }\n    const firstDataIndex = ensureNotNull(this._private__data._internal_firstIndex());\n    this._private__indexedMarkers = this._private__markers.map((marker, index) => {\n      // the first find index on the time scale (across all series)\n      const timePointIndex = ensureNotNull(timeScale._internal_timeToIndex(marker.time, true));\n      // and then search that index inside the series data\n      const searchMode = timePointIndex < firstDataIndex ? 1 /* MismatchDirection.NearestRight */ : -1 /* MismatchDirection.NearestLeft */;\n      const seriesDataIndex = ensureNotNull(this._private__data._internal_search(timePointIndex, searchMode))._internal_index;\n      return {\n        time: seriesDataIndex,\n        position: marker.position,\n        shape: marker.shape,\n        color: marker.color,\n        id: marker.id,\n        internalId: index,\n        text: marker.text,\n        size: marker.size\n      };\n    });\n  }\n  _private__recreatePaneViews() {\n    this._private__markersPaneView = new SeriesMarkersPaneView(this, this._internal_model());\n    switch (this._private__seriesType) {\n      case 'Bar':\n        {\n          this._private__paneView = new SeriesBarsPaneView(this, this._internal_model());\n          break;\n        }\n      case 'Candlestick':\n        {\n          this._private__paneView = new SeriesCandlesticksPaneView(this, this._internal_model());\n          break;\n        }\n      case 'Line':\n        {\n          this._private__paneView = new SeriesLinePaneView(this, this._internal_model());\n          break;\n        }\n      case 'Area':\n        {\n          this._private__paneView = new SeriesAreaPaneView(this, this._internal_model());\n          break;\n        }\n      case 'Baseline':\n        {\n          this._private__paneView = new SeriesBaselinePaneView(this, this._internal_model());\n          break;\n        }\n      case 'Histogram':\n        {\n          this._private__paneView = new SeriesHistogramPaneView(this, this._internal_model());\n          break;\n        }\n      default:\n        throw Error('Unknown chart style assigned: ' + this._private__seriesType);\n    }\n  }\n}\nclass Magnet {\n  constructor(options) {\n    this._private__options = options;\n  }\n  _internal_align(price, index, pane) {\n    let res = price;\n    if (this._private__options.mode === 0 /* CrosshairMode.Normal */) {\n      return res;\n    }\n    const defaultPriceScale = pane._internal_defaultPriceScale();\n    const firstValue = defaultPriceScale._internal_firstValue();\n    if (firstValue === null) {\n      return res;\n    }\n    const y = defaultPriceScale._internal_priceToCoordinate(price, firstValue);\n    // get all serieses from the pane\n    const serieses = pane._internal_dataSources().filter(ds => ds instanceof Series);\n    const candidates = serieses.reduce((acc, series) => {\n      if (pane._internal_isOverlay(series) || !series._internal_visible()) {\n        return acc;\n      }\n      const ps = series._internal_priceScale();\n      const bars = series._internal_bars();\n      if (ps._internal_isEmpty() || !bars._internal_contains(index)) {\n        return acc;\n      }\n      const bar = bars._internal_valueAt(index);\n      if (bar === null) {\n        return acc;\n      }\n      // convert bar to pixels\n      const firstPrice = ensure(series._internal_firstValue());\n      return acc.concat([ps._internal_priceToCoordinate(bar._internal_value[3 /* PlotRowValueIndex.Close */], firstPrice._internal_value)]);\n    }, []);\n    if (candidates.length === 0) {\n      return res;\n    }\n    candidates.sort((y1, y2) => Math.abs(y1 - y) - Math.abs(y2 - y));\n    const nearest = candidates[0];\n    res = defaultPriceScale._internal_coordinateToPrice(nearest, firstValue);\n    return res;\n  }\n}\nclass GridRenderer extends BitmapCoordinatesPaneRenderer {\n  constructor() {\n    super(...arguments);\n    this._private__data = null;\n  }\n  _internal_setData(data) {\n    this._private__data = data;\n  }\n  _internal__drawImpl({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (this._private__data === null) {\n      return;\n    }\n    const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n    ctx.lineWidth = lineWidth;\n    strokeInPixel(ctx, () => {\n      const data = ensureNotNull(this._private__data);\n      if (data._internal_vertLinesVisible) {\n        ctx.strokeStyle = data._internal_vertLinesColor;\n        setLineStyle(ctx, data._internal_vertLineStyle);\n        ctx.beginPath();\n        for (const timeMark of data._internal_timeMarks) {\n          const x = Math.round(timeMark._internal_coord * horizontalPixelRatio);\n          ctx.moveTo(x, -lineWidth);\n          ctx.lineTo(x, bitmapSize.height + lineWidth);\n        }\n        ctx.stroke();\n      }\n      if (data._internal_horzLinesVisible) {\n        ctx.strokeStyle = data._internal_horzLinesColor;\n        setLineStyle(ctx, data._internal_horzLineStyle);\n        ctx.beginPath();\n        for (const priceMark of data._internal_priceMarks) {\n          const y = Math.round(priceMark._internal_coord * verticalPixelRatio);\n          ctx.moveTo(-lineWidth, y);\n          ctx.lineTo(bitmapSize.width + lineWidth, y);\n        }\n        ctx.stroke();\n      }\n    });\n  }\n}\nclass GridPaneView {\n  constructor(pane) {\n    this._private__renderer = new GridRenderer();\n    this._private__invalidated = true;\n    this._private__pane = pane;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      const gridOptions = this._private__pane._internal_model()._internal_options().grid;\n      const data = {\n        _internal_horzLinesVisible: gridOptions.horzLines.visible,\n        _internal_vertLinesVisible: gridOptions.vertLines.visible,\n        _internal_horzLinesColor: gridOptions.horzLines.color,\n        _internal_vertLinesColor: gridOptions.vertLines.color,\n        _internal_horzLineStyle: gridOptions.horzLines.style,\n        _internal_vertLineStyle: gridOptions.vertLines.style,\n        _internal_priceMarks: this._private__pane._internal_defaultPriceScale()._internal_marks(),\n        _internal_timeMarks: this._private__pane._internal_model()._internal_timeScale()._internal_marks() || []\n      };\n      this._private__renderer._internal_setData(data);\n      this._private__invalidated = false;\n    }\n    return this._private__renderer;\n  }\n}\nclass Grid {\n  constructor(pane) {\n    this._private__paneView = new GridPaneView(pane);\n  }\n  _internal_paneView() {\n    return this._private__paneView;\n  }\n}\nconst defLogFormula = {\n  _internal_logicalOffset: 4,\n  _internal_coordOffset: 0.0001\n};\nfunction fromPercent(value, baseValue) {\n  if (baseValue < 0) {\n    value = -value;\n  }\n  return value / 100 * baseValue + baseValue;\n}\nfunction toPercent(value, baseValue) {\n  const result = 100 * (value - baseValue) / baseValue;\n  return baseValue < 0 ? -result : result;\n}\nfunction toPercentRange(priceRange, baseValue) {\n  const minPercent = toPercent(priceRange._internal_minValue(), baseValue);\n  const maxPercent = toPercent(priceRange._internal_maxValue(), baseValue);\n  return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction fromIndexedTo100(value, baseValue) {\n  value -= 100;\n  if (baseValue < 0) {\n    value = -value;\n  }\n  return value / 100 * baseValue + baseValue;\n}\nfunction toIndexedTo100(value, baseValue) {\n  const result = 100 * (value - baseValue) / baseValue + 100;\n  return baseValue < 0 ? -result : result;\n}\nfunction toIndexedTo100Range(priceRange, baseValue) {\n  const minPercent = toIndexedTo100(priceRange._internal_minValue(), baseValue);\n  const maxPercent = toIndexedTo100(priceRange._internal_maxValue(), baseValue);\n  return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction toLog(price, logFormula) {\n  const m = Math.abs(price);\n  if (m < 1e-15) {\n    return 0;\n  }\n  const res = log10(m + logFormula._internal_coordOffset) + logFormula._internal_logicalOffset;\n  return price < 0 ? -res : res;\n}\nfunction fromLog(logical, logFormula) {\n  const m = Math.abs(logical);\n  if (m < 1e-15) {\n    return 0;\n  }\n  const res = Math.pow(10, m - logFormula._internal_logicalOffset) - logFormula._internal_coordOffset;\n  return logical < 0 ? -res : res;\n}\nfunction convertPriceRangeToLog(priceRange, logFormula) {\n  if (priceRange === null) {\n    return null;\n  }\n  const min = toLog(priceRange._internal_minValue(), logFormula);\n  const max = toLog(priceRange._internal_maxValue(), logFormula);\n  return new PriceRangeImpl(min, max);\n}\nfunction canConvertPriceRangeFromLog(priceRange, logFormula) {\n  if (priceRange === null) {\n    return false;\n  }\n  const min = fromLog(priceRange._internal_minValue(), logFormula);\n  const max = fromLog(priceRange._internal_maxValue(), logFormula);\n  return isFinite(min) && isFinite(max);\n}\nfunction convertPriceRangeFromLog(priceRange, logFormula) {\n  if (priceRange === null) {\n    return null;\n  }\n  const min = fromLog(priceRange._internal_minValue(), logFormula);\n  const max = fromLog(priceRange._internal_maxValue(), logFormula);\n  return new PriceRangeImpl(min, max);\n}\nfunction logFormulaForPriceRange(range) {\n  if (range === null) {\n    return defLogFormula;\n  }\n  const diff = Math.abs(range._internal_maxValue() - range._internal_minValue());\n  if (diff >= 1 || diff < 1e-15) {\n    return defLogFormula;\n  }\n  const digits = Math.ceil(Math.abs(Math.log10(diff)));\n  const logicalOffset = defLogFormula._internal_logicalOffset + digits;\n  const coordOffset = 1 / Math.pow(10, logicalOffset);\n  return {\n    _internal_logicalOffset: logicalOffset,\n    _internal_coordOffset: coordOffset\n  };\n}\nfunction logFormulasAreSame(f1, f2) {\n  return f1._internal_logicalOffset === f2._internal_logicalOffset && f1._internal_coordOffset === f2._internal_coordOffset;\n}\nclass PriceTickSpanCalculator {\n  constructor(base, integralDividers) {\n    this._private__base = base;\n    this._private__integralDividers = integralDividers;\n    if (isBaseDecimal(this._private__base)) {\n      this._private__fractionalDividers = [2, 2.5, 2];\n    } else {\n      this._private__fractionalDividers = [];\n      for (let baseRest = this._private__base; baseRest !== 1;) {\n        if (baseRest % 2 === 0) {\n          this._private__fractionalDividers.push(2);\n          baseRest /= 2;\n        } else if (baseRest % 5 === 0) {\n          this._private__fractionalDividers.push(2, 2.5);\n          baseRest /= 5;\n        } else {\n          throw new Error('unexpected base');\n        }\n        if (this._private__fractionalDividers.length > 100) {\n          throw new Error('something wrong with base');\n        }\n      }\n    }\n  }\n  _internal_tickSpan(high, low, maxTickSpan) {\n    const minMovement = this._private__base === 0 ? 0 : 1 / this._private__base;\n    let resultTickSpan = Math.pow(10, Math.max(0, Math.ceil(log10(high - low))));\n    let index = 0;\n    let c = this._private__integralDividers[0];\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      // the second part is actual for small with very small values like 1e-10\n      // greaterOrEqual fails for such values\n      const resultTickSpanLargerMinMovement = greaterOrEqual(resultTickSpan, minMovement, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > minMovement + 1e-14 /* Constants.TickSpanEpsilon */;\n      const resultTickSpanLargerMaxTickSpan = greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */);\n      const resultTickSpanLarger1 = greaterOrEqual(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */);\n      const haveToContinue = resultTickSpanLargerMinMovement && resultTickSpanLargerMaxTickSpan && resultTickSpanLarger1;\n      if (!haveToContinue) {\n        break;\n      }\n      resultTickSpan /= c;\n      c = this._private__integralDividers[++index % this._private__integralDividers.length];\n    }\n    if (resultTickSpan <= minMovement + 1e-14 /* Constants.TickSpanEpsilon */) {\n      resultTickSpan = minMovement;\n    }\n    resultTickSpan = Math.max(1, resultTickSpan);\n    if (this._private__fractionalDividers.length > 0 && equal(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */)) {\n      index = 0;\n      c = this._private__fractionalDividers[0];\n      while (greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > minMovement + 1e-14 /* Constants.TickSpanEpsilon */) {\n        resultTickSpan /= c;\n        c = this._private__fractionalDividers[++index % this._private__fractionalDividers.length];\n      }\n    }\n    return resultTickSpan;\n  }\n}\nconst TICK_DENSITY = 2.5;\nclass PriceTickMarkBuilder {\n  constructor(priceScale, base, coordinateToLogicalFunc, logicalToCoordinateFunc) {\n    this._private__marks = [];\n    this._private__priceScale = priceScale;\n    this._private__base = base;\n    this._private__coordinateToLogicalFunc = coordinateToLogicalFunc;\n    this._private__logicalToCoordinateFunc = logicalToCoordinateFunc;\n  }\n  _internal_tickSpan(high, low) {\n    if (high < low) {\n      throw new Error('high < low');\n    }\n    const scaleHeight = this._private__priceScale._internal_height();\n    const markHeight = this._private__tickMarkHeight();\n    const maxTickSpan = (high - low) * markHeight / scaleHeight;\n    const spanCalculator1 = new PriceTickSpanCalculator(this._private__base, [2, 2.5, 2]);\n    const spanCalculator2 = new PriceTickSpanCalculator(this._private__base, [2, 2, 2.5]);\n    const spanCalculator3 = new PriceTickSpanCalculator(this._private__base, [2.5, 2, 2]);\n    const spans = [];\n    spans.push(spanCalculator1._internal_tickSpan(high, low, maxTickSpan), spanCalculator2._internal_tickSpan(high, low, maxTickSpan), spanCalculator3._internal_tickSpan(high, low, maxTickSpan));\n    return min(spans);\n  }\n  _internal_rebuildTickMarks() {\n    const priceScale = this._private__priceScale;\n    const firstValue = priceScale._internal_firstValue();\n    if (firstValue === null) {\n      this._private__marks = [];\n      return;\n    }\n    const scaleHeight = priceScale._internal_height();\n    const bottom = this._private__coordinateToLogicalFunc(scaleHeight - 1, firstValue);\n    const top = this._private__coordinateToLogicalFunc(0, firstValue);\n    const extraTopBottomMargin = this._private__priceScale._internal_options().entireTextOnly ? this._private__fontHeight() / 2 : 0;\n    const minCoord = extraTopBottomMargin;\n    const maxCoord = scaleHeight - 1 - extraTopBottomMargin;\n    const high = Math.max(bottom, top);\n    const low = Math.min(bottom, top);\n    if (high === low) {\n      this._private__marks = [];\n      return;\n    }\n    let span = this._internal_tickSpan(high, low);\n    let mod = high % span;\n    mod += mod < 0 ? span : 0;\n    const sign = high >= low ? 1 : -1;\n    let prevCoord = null;\n    let targetIndex = 0;\n    for (let logical = high - mod; logical > low; logical -= span) {\n      const coord = this._private__logicalToCoordinateFunc(logical, firstValue, true);\n      // check if there is place for it\n      // this is required for log scale\n      if (prevCoord !== null && Math.abs(coord - prevCoord) < this._private__tickMarkHeight()) {\n        continue;\n      }\n      // check if a tick mark is partially visible and skip it if entireTextOnly is true\n      if (coord < minCoord || coord > maxCoord) {\n        continue;\n      }\n      if (targetIndex < this._private__marks.length) {\n        this._private__marks[targetIndex]._internal_coord = coord;\n        this._private__marks[targetIndex]._internal_label = priceScale._internal_formatLogical(logical);\n      } else {\n        this._private__marks.push({\n          _internal_coord: coord,\n          _internal_label: priceScale._internal_formatLogical(logical)\n        });\n      }\n      targetIndex++;\n      prevCoord = coord;\n      if (priceScale._internal_isLog()) {\n        // recalc span\n        span = this._internal_tickSpan(logical * sign, low);\n      }\n    }\n    this._private__marks.length = targetIndex;\n  }\n  _internal_marks() {\n    return this._private__marks;\n  }\n  _private__fontHeight() {\n    return this._private__priceScale._internal_fontSize();\n  }\n  _private__tickMarkHeight() {\n    return Math.ceil(this._private__fontHeight() * TICK_DENSITY);\n  }\n}\nfunction sortSources(sources) {\n  return sources.slice().sort((s1, s2) => {\n    return ensureNotNull(s1._internal_zorder()) - ensureNotNull(s2._internal_zorder());\n  });\n}\n\n/**\n * Represents the price scale mode.\n */\nvar PriceScaleMode;\n(function (PriceScaleMode) {\n  /**\n   * Price scale shows prices. Price range changes linearly.\n   */\n  PriceScaleMode[PriceScaleMode[\"Normal\"] = 0] = \"Normal\";\n  /**\n   * Price scale shows prices. Price range changes logarithmically.\n   */\n  PriceScaleMode[PriceScaleMode[\"Logarithmic\"] = 1] = \"Logarithmic\";\n  /**\n   * Price scale shows percentage values according the first visible value of the price scale.\n   * The first visible value is 0% in this mode.\n   */\n  PriceScaleMode[PriceScaleMode[\"Percentage\"] = 2] = \"Percentage\";\n  /**\n   * The same as percentage mode, but the first value is moved to 100.\n   */\n  PriceScaleMode[PriceScaleMode[\"IndexedTo100\"] = 3] = \"IndexedTo100\";\n})(PriceScaleMode || (PriceScaleMode = {}));\nconst percentageFormatter = new PercentageFormatter();\nconst defaultPriceFormatter = new PriceFormatter(100, 1);\nclass PriceScale {\n  constructor(id, options, layoutOptions, localizationOptions) {\n    this._private__height = 0;\n    this._private__internalHeightCache = null;\n    this._private__priceRange = null;\n    this._private__priceRangeSnapshot = null;\n    this._private__invalidatedForRange = {\n      _internal_isValid: false,\n      _internal_visibleBars: null\n    };\n    this._private__marginAbove = 0;\n    this._private__marginBelow = 0;\n    this._private__onMarksChanged = new Delegate();\n    this._private__modeChanged = new Delegate();\n    this._private__dataSources = [];\n    this._private__cachedOrderedSources = null;\n    this._private__marksCache = null;\n    this._private__scaleStartPoint = null;\n    this._private__scrollStartPoint = null;\n    this._private__formatter = defaultPriceFormatter;\n    this._private__logFormula = logFormulaForPriceRange(null);\n    this._private__id = id;\n    this._private__options = options;\n    this._private__layoutOptions = layoutOptions;\n    this._private__localizationOptions = localizationOptions;\n    this._private__markBuilder = new PriceTickMarkBuilder(this, 100, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n  }\n  _internal_id() {\n    return this._private__id;\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyOptions(options) {\n    merge(this._private__options, options);\n    this._internal_updateFormatter();\n    if (options.mode !== undefined) {\n      this._internal_setMode({\n        _internal_mode: options.mode\n      });\n    }\n    if (options.scaleMargins !== undefined) {\n      const top = ensureDefined(options.scaleMargins.top);\n      const bottom = ensureDefined(options.scaleMargins.bottom);\n      if (top < 0 || top > 1) {\n        throw new Error(`Invalid top margin - expect value between 0 and 1, given=${top}`);\n      }\n      if (bottom < 0 || bottom > 1 || top + bottom > 1) {\n        throw new Error(`Invalid bottom margin - expect value between 0 and 1, given=${bottom}`);\n      }\n      if (top + bottom > 1) {\n        throw new Error(`Invalid margins - sum of margins must be less than 1, given=${top + bottom}`);\n      }\n      this._private__invalidateInternalHeightCache();\n      this._private__marksCache = null;\n    }\n  }\n  _internal_isAutoScale() {\n    return this._private__options.autoScale;\n  }\n  _internal_isLog() {\n    return this._private__options.mode === 1 /* PriceScaleMode.Logarithmic */;\n  }\n\n  _internal_isPercentage() {\n    return this._private__options.mode === 2 /* PriceScaleMode.Percentage */;\n  }\n\n  _internal_isIndexedTo100() {\n    return this._private__options.mode === 3 /* PriceScaleMode.IndexedTo100 */;\n  }\n\n  _internal_mode() {\n    return {\n      _internal_autoScale: this._private__options.autoScale,\n      _internal_isInverted: this._private__options.invertScale,\n      _internal_mode: this._private__options.mode\n    };\n  }\n  // eslint-disable-next-line complexity\n  _internal_setMode(newMode) {\n    const oldMode = this._internal_mode();\n    let priceRange = null;\n    if (newMode._internal_autoScale !== undefined) {\n      this._private__options.autoScale = newMode._internal_autoScale;\n    }\n    if (newMode._internal_mode !== undefined) {\n      this._private__options.mode = newMode._internal_mode;\n      if (newMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || newMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */) {\n        this._private__options.autoScale = true;\n      }\n      // TODO: Remove after making rebuildTickMarks lazy\n      this._private__invalidatedForRange._internal_isValid = false;\n    }\n    // define which scale converted from\n    if (oldMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n      if (canConvertPriceRangeFromLog(this._private__priceRange, this._private__logFormula)) {\n        priceRange = convertPriceRangeFromLog(this._private__priceRange, this._private__logFormula);\n        if (priceRange !== null) {\n          this._internal_setPriceRange(priceRange);\n        }\n      } else {\n        this._private__options.autoScale = true;\n      }\n    }\n    // define which scale converted to\n    if (newMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n      priceRange = convertPriceRangeToLog(this._private__priceRange, this._private__logFormula);\n      if (priceRange !== null) {\n        this._internal_setPriceRange(priceRange);\n      }\n    }\n    const modeChanged = oldMode._internal_mode !== this._private__options.mode;\n    if (modeChanged && (oldMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || this._internal_isPercentage())) {\n      this._internal_updateFormatter();\n    }\n    if (modeChanged && (oldMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */ || this._internal_isIndexedTo100())) {\n      this._internal_updateFormatter();\n    }\n    if (newMode._internal_isInverted !== undefined && oldMode._internal_isInverted !== newMode._internal_isInverted) {\n      this._private__options.invertScale = newMode._internal_isInverted;\n      this._private__onIsInvertedChanged();\n    }\n    this._private__modeChanged._internal_fire(oldMode, this._internal_mode());\n  }\n  _internal_modeChanged() {\n    return this._private__modeChanged;\n  }\n  _internal_fontSize() {\n    return this._private__layoutOptions.fontSize;\n  }\n  _internal_height() {\n    return this._private__height;\n  }\n  _internal_setHeight(value) {\n    if (this._private__height === value) {\n      return;\n    }\n    this._private__height = value;\n    this._private__invalidateInternalHeightCache();\n    this._private__marksCache = null;\n  }\n  _internal_internalHeight() {\n    if (this._private__internalHeightCache) {\n      return this._private__internalHeightCache;\n    }\n    const res = this._internal_height() - this._private__topMarginPx() - this._private__bottomMarginPx();\n    this._private__internalHeightCache = res;\n    return res;\n  }\n  _internal_priceRange() {\n    this._private__makeSureItIsValid();\n    return this._private__priceRange;\n  }\n  _internal_setPriceRange(newPriceRange, isForceSetValue) {\n    const oldPriceRange = this._private__priceRange;\n    if (!isForceSetValue && !(oldPriceRange === null && newPriceRange !== null) && (oldPriceRange === null || oldPriceRange._internal_equals(newPriceRange))) {\n      return;\n    }\n    this._private__marksCache = null;\n    this._private__priceRange = newPriceRange;\n  }\n  _internal_isEmpty() {\n    this._private__makeSureItIsValid();\n    return this._private__height === 0 || !this._private__priceRange || this._private__priceRange._internal_isEmpty();\n  }\n  _internal_invertedCoordinate(coordinate) {\n    return this._internal_isInverted() ? coordinate : this._internal_height() - 1 - coordinate;\n  }\n  _internal_priceToCoordinate(price, baseValue) {\n    if (this._internal_isPercentage()) {\n      price = toPercent(price, baseValue);\n    } else if (this._internal_isIndexedTo100()) {\n      price = toIndexedTo100(price, baseValue);\n    }\n    return this._private__logicalToCoordinate(price, baseValue);\n  }\n  _internal_pointsArrayToCoordinates(points, baseValue, visibleRange) {\n    this._private__makeSureItIsValid();\n    const bh = this._private__bottomMarginPx();\n    const range = ensureNotNull(this._internal_priceRange());\n    const min = range._internal_minValue();\n    const max = range._internal_maxValue();\n    const ih = this._internal_internalHeight() - 1;\n    const isInverted = this._internal_isInverted();\n    const hmm = ih / (max - min);\n    const fromIndex = visibleRange === undefined ? 0 : visibleRange.from;\n    const toIndex = visibleRange === undefined ? points.length : visibleRange.to;\n    const transformFn = this._private__getCoordinateTransformer();\n    for (let i = fromIndex; i < toIndex; i++) {\n      const point = points[i];\n      const price = point._internal_price;\n      if (isNaN(price)) {\n        continue;\n      }\n      let logical = price;\n      if (transformFn !== null) {\n        logical = transformFn(point._internal_price, baseValue);\n      }\n      const invCoordinate = bh + hmm * (logical - min);\n      const coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      point._internal_y = coordinate;\n    }\n  }\n  _internal_barPricesToCoordinates(pricesList, baseValue, visibleRange) {\n    this._private__makeSureItIsValid();\n    const bh = this._private__bottomMarginPx();\n    const range = ensureNotNull(this._internal_priceRange());\n    const min = range._internal_minValue();\n    const max = range._internal_maxValue();\n    const ih = this._internal_internalHeight() - 1;\n    const isInverted = this._internal_isInverted();\n    const hmm = ih / (max - min);\n    const fromIndex = visibleRange === undefined ? 0 : visibleRange.from;\n    const toIndex = visibleRange === undefined ? pricesList.length : visibleRange.to;\n    const transformFn = this._private__getCoordinateTransformer();\n    for (let i = fromIndex; i < toIndex; i++) {\n      const bar = pricesList[i];\n      let openLogical = bar._internal_open;\n      let highLogical = bar._internal_high;\n      let lowLogical = bar._internal_low;\n      let closeLogical = bar._internal_close;\n      if (transformFn !== null) {\n        openLogical = transformFn(bar._internal_open, baseValue);\n        highLogical = transformFn(bar._internal_high, baseValue);\n        lowLogical = transformFn(bar._internal_low, baseValue);\n        closeLogical = transformFn(bar._internal_close, baseValue);\n      }\n      let invCoordinate = bh + hmm * (openLogical - min);\n      let coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_openY = coordinate;\n      invCoordinate = bh + hmm * (highLogical - min);\n      coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_highY = coordinate;\n      invCoordinate = bh + hmm * (lowLogical - min);\n      coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_lowY = coordinate;\n      invCoordinate = bh + hmm * (closeLogical - min);\n      coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n      bar._internal_closeY = coordinate;\n    }\n  }\n  _internal_coordinateToPrice(coordinate, baseValue) {\n    const logical = this._private__coordinateToLogical(coordinate, baseValue);\n    return this._internal_logicalToPrice(logical, baseValue);\n  }\n  _internal_logicalToPrice(logical, baseValue) {\n    let value = logical;\n    if (this._internal_isPercentage()) {\n      value = fromPercent(value, baseValue);\n    } else if (this._internal_isIndexedTo100()) {\n      value = fromIndexedTo100(value, baseValue);\n    }\n    return value;\n  }\n  _internal_dataSources() {\n    return this._private__dataSources;\n  }\n  _internal_orderedSources() {\n    if (this._private__cachedOrderedSources) {\n      return this._private__cachedOrderedSources;\n    }\n    let sources = [];\n    for (let i = 0; i < this._private__dataSources.length; i++) {\n      const ds = this._private__dataSources[i];\n      if (ds._internal_zorder() === null) {\n        ds._internal_setZorder(i + 1);\n      }\n      sources.push(ds);\n    }\n    sources = sortSources(sources);\n    this._private__cachedOrderedSources = sources;\n    return this._private__cachedOrderedSources;\n  }\n  _internal_addDataSource(source) {\n    if (this._private__dataSources.indexOf(source) !== -1) {\n      return;\n    }\n    this._private__dataSources.push(source);\n    this._internal_updateFormatter();\n    this._internal_invalidateSourcesCache();\n  }\n  _internal_removeDataSource(source) {\n    const index = this._private__dataSources.indexOf(source);\n    if (index === -1) {\n      throw new Error('source is not attached to scale');\n    }\n    this._private__dataSources.splice(index, 1);\n    if (this._private__dataSources.length === 0) {\n      this._internal_setMode({\n        _internal_autoScale: true\n      });\n      // if no sources on price scale let's clear price range cache as well as enabling auto scale\n      this._internal_setPriceRange(null);\n    }\n    this._internal_updateFormatter();\n    this._internal_invalidateSourcesCache();\n  }\n  _internal_firstValue() {\n    // TODO: cache the result\n    let result = null;\n    for (const source of this._private__dataSources) {\n      const firstValue = source._internal_firstValue();\n      if (firstValue === null) {\n        continue;\n      }\n      if (result === null || firstValue._internal_timePoint < result._internal_timePoint) {\n        result = firstValue;\n      }\n    }\n    return result === null ? null : result._internal_value;\n  }\n  _internal_isInverted() {\n    return this._private__options.invertScale;\n  }\n  _internal_marks() {\n    const firstValueIsNull = this._internal_firstValue() === null;\n    // do not recalculate marks if firstValueIsNull is true because in this case we'll always get empty result\n    // this could happen in case when a series had some data and then you set empty data to it (in a simplified case)\n    // we could display an empty price scale, but this is not good from UX\n    // so in this case we need to keep an previous marks to display them on the scale\n    // as one of possible examples for this situation could be the following:\n    // let's say you have a study/indicator attached to a price scale and then you decide to stop it, i.e. remove its data because of its visibility\n    // a user will see the previous marks on the scale until you turn on your study back or remove it from the chart completely\n    if (this._private__marksCache !== null && (firstValueIsNull || this._private__marksCache._internal_firstValueIsNull === firstValueIsNull)) {\n      return this._private__marksCache._internal_marks;\n    }\n    this._private__markBuilder._internal_rebuildTickMarks();\n    const marks = this._private__markBuilder._internal_marks();\n    this._private__marksCache = {\n      _internal_marks: marks,\n      _internal_firstValueIsNull: firstValueIsNull\n    };\n    this._private__onMarksChanged._internal_fire();\n    return marks;\n  }\n  _internal_onMarksChanged() {\n    return this._private__onMarksChanged;\n  }\n  _internal_startScale(x) {\n    if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n      return;\n    }\n    if (this._private__scaleStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    // invert x\n    this._private__scaleStartPoint = this._private__height - x;\n    this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n  }\n  _internal_scaleTo(x) {\n    if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n      return;\n    }\n    if (this._private__scaleStartPoint === null) {\n      return;\n    }\n    this._internal_setMode({\n      _internal_autoScale: false\n    });\n    // invert x\n    x = this._private__height - x;\n    if (x < 0) {\n      x = 0;\n    }\n    let scaleCoeff = (this._private__scaleStartPoint + (this._private__height - 1) * 0.2) / (x + (this._private__height - 1) * 0.2);\n    const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n    scaleCoeff = Math.max(scaleCoeff, 0.1);\n    newPriceRange._internal_scaleAroundCenter(scaleCoeff);\n    this._internal_setPriceRange(newPriceRange);\n  }\n  _internal_endScale() {\n    if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n      return;\n    }\n    this._private__scaleStartPoint = null;\n    this._private__priceRangeSnapshot = null;\n  }\n  _internal_startScroll(x) {\n    if (this._internal_isAutoScale()) {\n      return;\n    }\n    if (this._private__scrollStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    this._private__scrollStartPoint = x;\n    this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n  }\n  _internal_scrollTo(x) {\n    if (this._internal_isAutoScale()) {\n      return;\n    }\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    const priceUnitsPerPixel = ensureNotNull(this._internal_priceRange())._internal_length() / (this._internal_internalHeight() - 1);\n    let pixelDelta = x - this._private__scrollStartPoint;\n    if (this._internal_isInverted()) {\n      pixelDelta *= -1;\n    }\n    const priceDelta = pixelDelta * priceUnitsPerPixel;\n    const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n    newPriceRange._internal_shift(priceDelta);\n    this._internal_setPriceRange(newPriceRange, true);\n    this._private__marksCache = null;\n  }\n  _internal_endScroll() {\n    if (this._internal_isAutoScale()) {\n      return;\n    }\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    this._private__scrollStartPoint = null;\n    this._private__priceRangeSnapshot = null;\n  }\n  _internal_formatter() {\n    if (!this._private__formatter) {\n      this._internal_updateFormatter();\n    }\n    return this._private__formatter;\n  }\n  _internal_formatPrice(price, firstValue) {\n    switch (this._private__options.mode) {\n      case 2 /* PriceScaleMode.Percentage */:\n        return this._internal_formatter().format(toPercent(price, firstValue));\n      case 3 /* PriceScaleMode.IndexedTo100 */:\n        return this._internal_formatter().format(toIndexedTo100(price, firstValue));\n      default:\n        return this._private__formatPrice(price);\n    }\n  }\n  _internal_formatLogical(logical) {\n    switch (this._private__options.mode) {\n      case 2 /* PriceScaleMode.Percentage */:\n      case 3 /* PriceScaleMode.IndexedTo100 */:\n        return this._internal_formatter().format(logical);\n      default:\n        return this._private__formatPrice(logical);\n    }\n  }\n  _internal_formatPriceAbsolute(price) {\n    return this._private__formatPrice(price, ensureNotNull(this._private__formatterSource())._internal_formatter());\n  }\n  _internal_formatPricePercentage(price, baseValue) {\n    price = toPercent(price, baseValue);\n    return percentageFormatter.format(price);\n  }\n  _internal_sourcesForAutoScale() {\n    return this._private__dataSources;\n  }\n  _internal_recalculatePriceRange(visibleBars) {\n    this._private__invalidatedForRange = {\n      _internal_visibleBars: visibleBars,\n      _internal_isValid: false\n    };\n  }\n  _internal_updateAllViews() {\n    this._private__dataSources.forEach(s => s._internal_updateAllViews());\n  }\n  _internal_updateFormatter() {\n    this._private__marksCache = null;\n    const formatterSource = this._private__formatterSource();\n    let base = 100;\n    if (formatterSource !== null) {\n      base = Math.round(1 / formatterSource._internal_minMove());\n    }\n    this._private__formatter = defaultPriceFormatter;\n    if (this._internal_isPercentage()) {\n      this._private__formatter = percentageFormatter;\n      base = 100;\n    } else if (this._internal_isIndexedTo100()) {\n      this._private__formatter = new PriceFormatter(100, 1);\n      base = 100;\n    } else {\n      if (formatterSource !== null) {\n        // user\n        this._private__formatter = formatterSource._internal_formatter();\n      }\n    }\n    this._private__markBuilder = new PriceTickMarkBuilder(this, base, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n    this._private__markBuilder._internal_rebuildTickMarks();\n  }\n  _internal_invalidateSourcesCache() {\n    this._private__cachedOrderedSources = null;\n  }\n  /**\n   * @returns The {@link IPriceDataSource} that will be used as the \"formatter source\" (take minMove for formatter).\n   */\n  _private__formatterSource() {\n    return this._private__dataSources[0] || null;\n  }\n  _private__topMarginPx() {\n    return this._internal_isInverted() ? this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow : this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove;\n  }\n  _private__bottomMarginPx() {\n    return this._internal_isInverted() ? this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove : this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow;\n  }\n  _private__makeSureItIsValid() {\n    if (!this._private__invalidatedForRange._internal_isValid) {\n      this._private__invalidatedForRange._internal_isValid = true;\n      this._private__recalculatePriceRangeImpl();\n    }\n  }\n  _private__invalidateInternalHeightCache() {\n    this._private__internalHeightCache = null;\n  }\n  _private__logicalToCoordinate(logical, baseValue) {\n    this._private__makeSureItIsValid();\n    if (this._internal_isEmpty()) {\n      return 0;\n    }\n    logical = this._internal_isLog() && logical ? toLog(logical, this._private__logFormula) : logical;\n    const range = ensureNotNull(this._internal_priceRange());\n    const invCoordinate = this._private__bottomMarginPx() + (this._internal_internalHeight() - 1) * (logical - range._internal_minValue()) / range._internal_length();\n    const coordinate = this._internal_invertedCoordinate(invCoordinate);\n    return coordinate;\n  }\n  _private__coordinateToLogical(coordinate, baseValue) {\n    this._private__makeSureItIsValid();\n    if (this._internal_isEmpty()) {\n      return 0;\n    }\n    const invCoordinate = this._internal_invertedCoordinate(coordinate);\n    const range = ensureNotNull(this._internal_priceRange());\n    const logical = range._internal_minValue() + range._internal_length() * ((invCoordinate - this._private__bottomMarginPx()) / (this._internal_internalHeight() - 1));\n    return this._internal_isLog() ? fromLog(logical, this._private__logFormula) : logical;\n  }\n  _private__onIsInvertedChanged() {\n    this._private__marksCache = null;\n    this._private__markBuilder._internal_rebuildTickMarks();\n  }\n  // eslint-disable-next-line complexity\n  _private__recalculatePriceRangeImpl() {\n    const visibleBars = this._private__invalidatedForRange._internal_visibleBars;\n    if (visibleBars === null) {\n      return;\n    }\n    let priceRange = null;\n    const sources = this._internal_sourcesForAutoScale();\n    let marginAbove = 0;\n    let marginBelow = 0;\n    for (const source of sources) {\n      if (!source._internal_visible()) {\n        continue;\n      }\n      const firstValue = source._internal_firstValue();\n      if (firstValue === null) {\n        continue;\n      }\n      const autoScaleInfo = source._internal_autoscaleInfo(visibleBars._internal_left(), visibleBars._internal_right());\n      let sourceRange = autoScaleInfo && autoScaleInfo._internal_priceRange();\n      if (sourceRange !== null) {\n        switch (this._private__options.mode) {\n          case 1 /* PriceScaleMode.Logarithmic */:\n            sourceRange = convertPriceRangeToLog(sourceRange, this._private__logFormula);\n            break;\n          case 2 /* PriceScaleMode.Percentage */:\n            sourceRange = toPercentRange(sourceRange, firstValue._internal_value);\n            break;\n          case 3 /* PriceScaleMode.IndexedTo100 */:\n            sourceRange = toIndexedTo100Range(sourceRange, firstValue._internal_value);\n            break;\n        }\n        if (priceRange === null) {\n          priceRange = sourceRange;\n        } else {\n          priceRange = priceRange._internal_merge(ensureNotNull(sourceRange));\n        }\n        if (autoScaleInfo !== null) {\n          const margins = autoScaleInfo._internal_margins();\n          if (margins !== null) {\n            marginAbove = Math.max(marginAbove, margins.above);\n            marginBelow = Math.max(marginAbove, margins.below);\n          }\n        }\n      }\n    }\n    if (marginAbove !== this._private__marginAbove || marginBelow !== this._private__marginBelow) {\n      this._private__marginAbove = marginAbove;\n      this._private__marginBelow = marginBelow;\n      this._private__marksCache = null;\n      this._private__invalidateInternalHeightCache();\n    }\n    if (priceRange !== null) {\n      // keep current range is new is empty\n      if (priceRange._internal_minValue() === priceRange._internal_maxValue()) {\n        const formatterSource = this._private__formatterSource();\n        const minMove = formatterSource === null || this._internal_isPercentage() || this._internal_isIndexedTo100() ? 1 : formatterSource._internal_minMove();\n        // if price range is degenerated to 1 point let's extend it by 10 min move values\n        // to avoid incorrect range and empty (blank) scale (in case of min tick much greater than 1)\n        const extendValue = 5 * minMove;\n        if (this._internal_isLog()) {\n          priceRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n        }\n        priceRange = new PriceRangeImpl(priceRange._internal_minValue() - extendValue, priceRange._internal_maxValue() + extendValue);\n        if (this._internal_isLog()) {\n          priceRange = convertPriceRangeToLog(priceRange, this._private__logFormula);\n        }\n      }\n      if (this._internal_isLog()) {\n        const rawRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n        const newLogFormula = logFormulaForPriceRange(rawRange);\n        if (!logFormulasAreSame(newLogFormula, this._private__logFormula)) {\n          const rawSnapshot = this._private__priceRangeSnapshot !== null ? convertPriceRangeFromLog(this._private__priceRangeSnapshot, this._private__logFormula) : null;\n          this._private__logFormula = newLogFormula;\n          priceRange = convertPriceRangeToLog(rawRange, newLogFormula);\n          if (rawSnapshot !== null) {\n            this._private__priceRangeSnapshot = convertPriceRangeToLog(rawSnapshot, newLogFormula);\n          }\n        }\n      }\n      this._internal_setPriceRange(priceRange);\n    } else {\n      // reset empty to default\n      if (this._private__priceRange === null) {\n        this._internal_setPriceRange(new PriceRangeImpl(-0.5, 0.5));\n        this._private__logFormula = logFormulaForPriceRange(null);\n      }\n    }\n    this._private__invalidatedForRange._internal_isValid = true;\n  }\n  _private__getCoordinateTransformer() {\n    if (this._internal_isPercentage()) {\n      return toPercent;\n    } else if (this._internal_isIndexedTo100()) {\n      return toIndexedTo100;\n    } else if (this._internal_isLog()) {\n      return price => toLog(price, this._private__logFormula);\n    }\n    return null;\n  }\n  _private__formatPrice(price, fallbackFormatter) {\n    if (this._private__localizationOptions.priceFormatter === undefined) {\n      if (fallbackFormatter === undefined) {\n        fallbackFormatter = this._internal_formatter();\n      }\n      return fallbackFormatter.format(price);\n    }\n    return this._private__localizationOptions.priceFormatter(price);\n  }\n}\nconst DEFAULT_STRETCH_FACTOR = 1000;\nclass Pane {\n  constructor(timeScale, model) {\n    this._private__dataSources = [];\n    this._private__overlaySourcesByScaleId = new Map();\n    this._private__height = 0;\n    this._private__width = 0;\n    this._private__stretchFactor = DEFAULT_STRETCH_FACTOR;\n    this._private__cachedOrderedSources = null;\n    this._private__destroyed = new Delegate();\n    this._private__timeScale = timeScale;\n    this._private__model = model;\n    this._private__grid = new Grid(this);\n    const options = model._internal_options();\n    this._private__leftPriceScale = this._private__createPriceScale(\"left\" /* DefaultPriceScaleId.Left */, options.leftPriceScale);\n    this._private__rightPriceScale = this._private__createPriceScale(\"right\" /* DefaultPriceScaleId.Right */, options.rightPriceScale);\n    this._private__leftPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__leftPriceScale), this);\n    this._private__rightPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__rightPriceScale), this);\n    this._internal_applyScaleOptions(options);\n  }\n  _internal_applyScaleOptions(options) {\n    if (options.leftPriceScale) {\n      this._private__leftPriceScale._internal_applyOptions(options.leftPriceScale);\n    }\n    if (options.rightPriceScale) {\n      this._private__rightPriceScale._internal_applyOptions(options.rightPriceScale);\n    }\n    if (options.localization) {\n      this._private__leftPriceScale._internal_updateFormatter();\n      this._private__rightPriceScale._internal_updateFormatter();\n    }\n    if (options.overlayPriceScales) {\n      const sourceArrays = Array.from(this._private__overlaySourcesByScaleId.values());\n      for (const arr of sourceArrays) {\n        const priceScale = ensureNotNull(arr[0]._internal_priceScale());\n        priceScale._internal_applyOptions(options.overlayPriceScales);\n        if (options.localization) {\n          priceScale._internal_updateFormatter();\n        }\n      }\n    }\n  }\n  _internal_priceScaleById(id) {\n    switch (id) {\n      case \"left\" /* DefaultPriceScaleId.Left */:\n        {\n          return this._private__leftPriceScale;\n        }\n      case \"right\" /* DefaultPriceScaleId.Right */:\n        {\n          return this._private__rightPriceScale;\n        }\n    }\n    if (this._private__overlaySourcesByScaleId.has(id)) {\n      return ensureDefined(this._private__overlaySourcesByScaleId.get(id))[0]._internal_priceScale();\n    }\n    return null;\n  }\n  _internal_destroy() {\n    this._internal_model()._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n    this._private__leftPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n    this._private__rightPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n    this._private__dataSources.forEach(source => {\n      if (source._internal_destroy) {\n        source._internal_destroy();\n      }\n    });\n    this._private__destroyed._internal_fire();\n  }\n  _internal_stretchFactor() {\n    return this._private__stretchFactor;\n  }\n  _internal_setStretchFactor(factor) {\n    this._private__stretchFactor = factor;\n  }\n  _internal_model() {\n    return this._private__model;\n  }\n  _internal_width() {\n    return this._private__width;\n  }\n  _internal_height() {\n    return this._private__height;\n  }\n  _internal_setWidth(width) {\n    this._private__width = width;\n    this._internal_updateAllSources();\n  }\n  _internal_setHeight(height) {\n    this._private__height = height;\n    this._private__leftPriceScale._internal_setHeight(height);\n    this._private__rightPriceScale._internal_setHeight(height);\n    // process overlays\n    this._private__dataSources.forEach(ds => {\n      if (this._internal_isOverlay(ds)) {\n        const priceScale = ds._internal_priceScale();\n        if (priceScale !== null) {\n          priceScale._internal_setHeight(height);\n        }\n      }\n    });\n    this._internal_updateAllSources();\n  }\n  _internal_dataSources() {\n    return this._private__dataSources;\n  }\n  _internal_isOverlay(source) {\n    const priceScale = source._internal_priceScale();\n    if (priceScale === null) {\n      return true;\n    }\n    return this._private__leftPriceScale !== priceScale && this._private__rightPriceScale !== priceScale;\n  }\n  _internal_addDataSource(source, targetScaleId, zOrder) {\n    const targetZOrder = zOrder !== undefined ? zOrder : this._private__getZOrderMinMax()._internal_maxZOrder + 1;\n    this._private__insertDataSource(source, targetScaleId, targetZOrder);\n  }\n  _internal_removeDataSource(source) {\n    const index = this._private__dataSources.indexOf(source);\n    assert(index !== -1, 'removeDataSource: invalid data source');\n    this._private__dataSources.splice(index, 1);\n    const priceScaleId = ensureNotNull(source._internal_priceScale())._internal_id();\n    if (this._private__overlaySourcesByScaleId.has(priceScaleId)) {\n      const overlaySources = ensureDefined(this._private__overlaySourcesByScaleId.get(priceScaleId));\n      const overlayIndex = overlaySources.indexOf(source);\n      if (overlayIndex !== -1) {\n        overlaySources.splice(overlayIndex, 1);\n        if (overlaySources.length === 0) {\n          this._private__overlaySourcesByScaleId.delete(priceScaleId);\n        }\n      }\n    }\n    const priceScale = source._internal_priceScale();\n    // if source has owner, it returns owner's price scale\n    // and it does not have source in their list\n    if (priceScale && priceScale._internal_dataSources().indexOf(source) >= 0) {\n      priceScale._internal_removeDataSource(source);\n    }\n    if (priceScale !== null) {\n      priceScale._internal_invalidateSourcesCache();\n      this._internal_recalculatePriceScale(priceScale);\n    }\n    this._private__cachedOrderedSources = null;\n  }\n  _internal_priceScalePosition(priceScale) {\n    if (priceScale === this._private__leftPriceScale) {\n      return 'left';\n    }\n    if (priceScale === this._private__rightPriceScale) {\n      return 'right';\n    }\n    return 'overlay';\n  }\n  _internal_leftPriceScale() {\n    return this._private__leftPriceScale;\n  }\n  _internal_rightPriceScale() {\n    return this._private__rightPriceScale;\n  }\n  _internal_startScalePrice(priceScale, x) {\n    priceScale._internal_startScale(x);\n  }\n  _internal_scalePriceTo(priceScale, x) {\n    priceScale._internal_scaleTo(x);\n    // TODO: be more smart and update only affected views\n    this._internal_updateAllSources();\n  }\n  _internal_endScalePrice(priceScale) {\n    priceScale._internal_endScale();\n  }\n  _internal_startScrollPrice(priceScale, x) {\n    priceScale._internal_startScroll(x);\n  }\n  _internal_scrollPriceTo(priceScale, x) {\n    priceScale._internal_scrollTo(x);\n    this._internal_updateAllSources();\n  }\n  _internal_endScrollPrice(priceScale) {\n    priceScale._internal_endScroll();\n  }\n  _internal_updateAllSources() {\n    this._private__dataSources.forEach(source => {\n      source._internal_updateAllViews();\n    });\n  }\n  _internal_defaultPriceScale() {\n    let priceScale = null;\n    if (this._private__model._internal_options().rightPriceScale.visible && this._private__rightPriceScale._internal_dataSources().length !== 0) {\n      priceScale = this._private__rightPriceScale;\n    } else if (this._private__model._internal_options().leftPriceScale.visible && this._private__leftPriceScale._internal_dataSources().length !== 0) {\n      priceScale = this._private__leftPriceScale;\n    } else if (this._private__dataSources.length !== 0) {\n      priceScale = this._private__dataSources[0]._internal_priceScale();\n    }\n    if (priceScale === null) {\n      priceScale = this._private__rightPriceScale;\n    }\n    return priceScale;\n  }\n  _internal_defaultVisiblePriceScale() {\n    let priceScale = null;\n    if (this._private__model._internal_options().rightPriceScale.visible) {\n      priceScale = this._private__rightPriceScale;\n    } else if (this._private__model._internal_options().leftPriceScale.visible) {\n      priceScale = this._private__leftPriceScale;\n    }\n    return priceScale;\n  }\n  _internal_recalculatePriceScale(priceScale) {\n    if (priceScale === null || !priceScale._internal_isAutoScale()) {\n      return;\n    }\n    this._private__recalculatePriceScaleImpl(priceScale);\n  }\n  _internal_resetPriceScale(priceScale) {\n    const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n    priceScale._internal_setMode({\n      _internal_autoScale: true\n    });\n    if (visibleBars !== null) {\n      priceScale._internal_recalculatePriceRange(visibleBars);\n    }\n    this._internal_updateAllSources();\n  }\n  _internal_momentaryAutoScale() {\n    this._private__recalculatePriceScaleImpl(this._private__leftPriceScale);\n    this._private__recalculatePriceScaleImpl(this._private__rightPriceScale);\n  }\n  _internal_recalculate() {\n    this._internal_recalculatePriceScale(this._private__leftPriceScale);\n    this._internal_recalculatePriceScale(this._private__rightPriceScale);\n    this._private__dataSources.forEach(ds => {\n      if (this._internal_isOverlay(ds)) {\n        this._internal_recalculatePriceScale(ds._internal_priceScale());\n      }\n    });\n    this._internal_updateAllSources();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_orderedSources() {\n    if (this._private__cachedOrderedSources === null) {\n      this._private__cachedOrderedSources = sortSources(this._private__dataSources);\n    }\n    return this._private__cachedOrderedSources;\n  }\n  _internal_onDestroyed() {\n    return this._private__destroyed;\n  }\n  _internal_grid() {\n    return this._private__grid;\n  }\n  _private__recalculatePriceScaleImpl(priceScale) {\n    // TODO: can use this checks\n    const sourceForAutoScale = priceScale._internal_sourcesForAutoScale();\n    if (sourceForAutoScale && sourceForAutoScale.length > 0 && !this._private__timeScale._internal_isEmpty()) {\n      const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n      if (visibleBars !== null) {\n        priceScale._internal_recalculatePriceRange(visibleBars);\n      }\n    }\n    priceScale._internal_updateAllViews();\n  }\n  _private__getZOrderMinMax() {\n    const sources = this._internal_orderedSources();\n    if (sources.length === 0) {\n      return {\n        _internal_minZOrder: 0,\n        _internal_maxZOrder: 0\n      };\n    }\n    let minZOrder = 0;\n    let maxZOrder = 0;\n    for (let j = 0; j < sources.length; j++) {\n      const ds = sources[j];\n      const zOrder = ds._internal_zorder();\n      if (zOrder !== null) {\n        if (zOrder < minZOrder) {\n          minZOrder = zOrder;\n        }\n        if (zOrder > maxZOrder) {\n          maxZOrder = zOrder;\n        }\n      }\n    }\n    return {\n      _internal_minZOrder: minZOrder,\n      _internal_maxZOrder: maxZOrder\n    };\n  }\n  _private__insertDataSource(source, priceScaleId, zOrder) {\n    let priceScale = this._internal_priceScaleById(priceScaleId);\n    if (priceScale === null) {\n      priceScale = this._private__createPriceScale(priceScaleId, this._private__model._internal_options().overlayPriceScales);\n    }\n    this._private__dataSources.push(source);\n    if (!isDefaultPriceScale(priceScaleId)) {\n      const overlaySources = this._private__overlaySourcesByScaleId.get(priceScaleId) || [];\n      overlaySources.push(source);\n      this._private__overlaySourcesByScaleId.set(priceScaleId, overlaySources);\n    }\n    priceScale._internal_addDataSource(source);\n    source._internal_setPriceScale(priceScale);\n    source._internal_setZorder(zOrder);\n    this._internal_recalculatePriceScale(priceScale);\n    this._private__cachedOrderedSources = null;\n  }\n  _private__onPriceScaleModeChanged(priceScale, oldMode, newMode) {\n    if (oldMode._internal_mode === newMode._internal_mode) {\n      return;\n    }\n    // momentary auto scale if we toggle percentage/indexedTo100 mode\n    this._private__recalculatePriceScaleImpl(priceScale);\n  }\n  _private__createPriceScale(id, options) {\n    const actualOptions = Object.assign({\n      visible: true,\n      autoScale: true\n    }, clone(options));\n    const priceScale = new PriceScale(id, actualOptions, this._private__model._internal_options().layout, this._private__model._internal_options().localization);\n    priceScale._internal_setHeight(this._internal_height());\n    return priceScale;\n  }\n}\nconst getMonth = date => date.getUTCMonth() + 1;\nconst getDay = date => date.getUTCDate();\nconst getYear = date => date.getUTCFullYear();\nconst dd = date => numberToStringWithLeadingZero(getDay(date), 2);\nconst MMMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1).toLocaleString(locale, {\n  month: 'long'\n});\nconst MMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1).toLocaleString(locale, {\n  month: 'short'\n});\nconst MM = date => numberToStringWithLeadingZero(getMonth(date), 2);\nconst yy = date => numberToStringWithLeadingZero(getYear(date) % 100, 2);\nconst yyyy = date => numberToStringWithLeadingZero(getYear(date), 4);\nfunction formatDate(date, format, locale) {\n  return format.replace(/yyyy/g, yyyy(date)).replace(/yy/g, yy(date)).replace(/MMMM/g, MMMM(date, locale)).replace(/MMM/g, MMM(date, locale)).replace(/MM/g, MM(date)).replace(/dd/g, dd(date));\n}\nclass DateFormatter {\n  constructor(dateFormat = 'yyyy-MM-dd', locale = 'default') {\n    this._private__dateFormat = dateFormat;\n    this._private__locale = locale;\n  }\n  _internal_format(date) {\n    return formatDate(date, this._private__dateFormat, this._private__locale);\n  }\n}\nclass TimeFormatter {\n  constructor(format) {\n    this._private__formatStr = format || '%h:%m:%s';\n  }\n  _internal_format(date) {\n    return this._private__formatStr.replace('%h', numberToStringWithLeadingZero(date.getUTCHours(), 2)).replace('%m', numberToStringWithLeadingZero(date.getUTCMinutes(), 2)).replace('%s', numberToStringWithLeadingZero(date.getUTCSeconds(), 2));\n  }\n}\nconst defaultParams = {\n  _internal_dateFormat: 'yyyy-MM-dd',\n  _internal_timeFormat: '%h:%m:%s',\n  _internal_dateTimeSeparator: ' ',\n  _internal_locale: 'default'\n};\nclass DateTimeFormatter {\n  constructor(params = {}) {\n    const formatterParams = Object.assign(Object.assign({}, defaultParams), params);\n    this._private__dateFormatter = new DateFormatter(formatterParams._internal_dateFormat, formatterParams._internal_locale);\n    this._private__timeFormatter = new TimeFormatter(formatterParams._internal_timeFormat);\n    this._private__separator = formatterParams._internal_dateTimeSeparator;\n  }\n  _internal_format(dateTime) {\n    return `${this._private__dateFormatter._internal_format(dateTime)}${this._private__separator}${this._private__timeFormatter._internal_format(dateTime)}`;\n  }\n}\nfunction defaultTickMarkFormatter(timePoint, tickMarkType, locale) {\n  const formatOptions = {};\n  switch (tickMarkType) {\n    case 0 /* TickMarkType.Year */:\n      formatOptions.year = 'numeric';\n      break;\n    case 1 /* TickMarkType.Month */:\n      formatOptions.month = 'short';\n      break;\n    case 2 /* TickMarkType.DayOfMonth */:\n      formatOptions.day = 'numeric';\n      break;\n    case 3 /* TickMarkType.Time */:\n      formatOptions.hour12 = false;\n      formatOptions.hour = '2-digit';\n      formatOptions.minute = '2-digit';\n      break;\n    case 4 /* TickMarkType.TimeWithSeconds */:\n      formatOptions.hour12 = false;\n      formatOptions.hour = '2-digit';\n      formatOptions.minute = '2-digit';\n      formatOptions.second = '2-digit';\n      break;\n  }\n  const date = timePoint._internal_businessDay === undefined ? new Date(timePoint._internal_timestamp * 1000) : new Date(Date.UTC(timePoint._internal_businessDay.year, timePoint._internal_businessDay.month - 1, timePoint._internal_businessDay.day));\n  // from given date we should use only as UTC date or timestamp\n  // but to format as locale date we can convert UTC date to local date\n  const localDateFromUtc = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return localDateFromUtc.toLocaleString(locale, formatOptions);\n}\nclass FormattedLabelsCache {\n  constructor(format, size = 50) {\n    this._private__actualSize = 0;\n    this._private__usageTick = 1;\n    this._private__oldestTick = 1;\n    this._private__cache = new Map();\n    this._private__tick2Labels = new Map();\n    this._private__format = format;\n    this._private__maxSize = size;\n  }\n  _internal_format(tickMark) {\n    const time = tickMark._internal_time;\n    const cacheKey = time._internal_businessDay === undefined ? new Date(time._internal_timestamp * 1000).getTime() : new Date(Date.UTC(time._internal_businessDay.year, time._internal_businessDay.month - 1, time._internal_businessDay.day)).getTime();\n    const tick = this._private__cache.get(cacheKey);\n    if (tick !== undefined) {\n      return tick._internal_string;\n    }\n    if (this._private__actualSize === this._private__maxSize) {\n      const oldestValue = this._private__tick2Labels.get(this._private__oldestTick);\n      this._private__tick2Labels.delete(this._private__oldestTick);\n      this._private__cache.delete(ensureDefined(oldestValue));\n      this._private__oldestTick++;\n      this._private__actualSize--;\n    }\n    const str = this._private__format(tickMark);\n    this._private__cache.set(cacheKey, {\n      _internal_string: str,\n      _internal_tick: this._private__usageTick\n    });\n    this._private__tick2Labels.set(this._private__usageTick, cacheKey);\n    this._private__actualSize++;\n    this._private__usageTick++;\n    return str;\n  }\n}\nclass RangeImpl {\n  constructor(left, right) {\n    assert(left <= right, 'right should be >= left');\n    this._private__left = left;\n    this._private__right = right;\n  }\n  _internal_left() {\n    return this._private__left;\n  }\n  _internal_right() {\n    return this._private__right;\n  }\n  _internal_count() {\n    return this._private__right - this._private__left + 1;\n  }\n  _internal_contains(index) {\n    return this._private__left <= index && index <= this._private__right;\n  }\n  _internal_equals(other) {\n    return this._private__left === other._internal_left() && this._private__right === other._internal_right();\n  }\n}\nfunction areRangesEqual(first, second) {\n  if (first === null || second === null) {\n    return first === second;\n  }\n  return first._internal_equals(second);\n}\nclass TickMarks {\n  constructor() {\n    this._private__marksByWeight = new Map();\n    this._private__cache = null;\n  }\n  _internal_setTimeScalePoints(newPoints, firstChangedPointIndex) {\n    this._private__removeMarksSinceIndex(firstChangedPointIndex);\n    this._private__cache = null;\n    for (let index = firstChangedPointIndex; index < newPoints.length; ++index) {\n      const point = newPoints[index];\n      let marksForWeight = this._private__marksByWeight.get(point._internal_timeWeight);\n      if (marksForWeight === undefined) {\n        marksForWeight = [];\n        this._private__marksByWeight.set(point._internal_timeWeight, marksForWeight);\n      }\n      marksForWeight.push({\n        _internal_index: index,\n        _internal_time: point._internal_time,\n        _internal_weight: point._internal_timeWeight,\n        _internal_originalTime: point._internal_originalTime\n      });\n    }\n  }\n  _internal_build(spacing, maxWidth) {\n    const maxIndexesPerMark = Math.ceil(maxWidth / spacing);\n    if (this._private__cache === null || this._private__cache._internal_maxIndexesPerMark !== maxIndexesPerMark) {\n      this._private__cache = {\n        _internal_marks: this._private__buildMarksImpl(maxIndexesPerMark),\n        _internal_maxIndexesPerMark: maxIndexesPerMark\n      };\n    }\n    return this._private__cache._internal_marks;\n  }\n  _private__removeMarksSinceIndex(sinceIndex) {\n    if (sinceIndex === 0) {\n      this._private__marksByWeight.clear();\n      return;\n    }\n    const weightsToClear = [];\n    this._private__marksByWeight.forEach((marks, timeWeight) => {\n      if (sinceIndex <= marks[0]._internal_index) {\n        weightsToClear.push(timeWeight);\n      } else {\n        marks.splice(lowerbound(marks, sinceIndex, tm => tm._internal_index < sinceIndex), Infinity);\n      }\n    });\n    for (const weight of weightsToClear) {\n      this._private__marksByWeight.delete(weight);\n    }\n  }\n  _private__buildMarksImpl(maxIndexesPerMark) {\n    let marks = [];\n    for (const weight of Array.from(this._private__marksByWeight.keys()).sort((a, b) => b - a)) {\n      if (!this._private__marksByWeight.get(weight)) {\n        continue;\n      }\n      // Built tickMarks are now prevMarks, and marks it as new array\n      const prevMarks = marks;\n      marks = [];\n      const prevMarksLength = prevMarks.length;\n      let prevMarksPointer = 0;\n      const currentWeight = ensureDefined(this._private__marksByWeight.get(weight));\n      const currentWeightLength = currentWeight.length;\n      let rightIndex = Infinity;\n      let leftIndex = -Infinity;\n      for (let i = 0; i < currentWeightLength; i++) {\n        const mark = currentWeight[i];\n        const currentIndex = mark._internal_index;\n        // Determine indexes with which current index will be compared\n        // All marks to the right is moved to new array\n        while (prevMarksPointer < prevMarksLength) {\n          const lastMark = prevMarks[prevMarksPointer];\n          const lastIndex = lastMark._internal_index;\n          if (lastIndex < currentIndex) {\n            prevMarksPointer++;\n            marks.push(lastMark);\n            leftIndex = lastIndex;\n            rightIndex = Infinity;\n          } else {\n            rightIndex = lastIndex;\n            break;\n          }\n        }\n        if (rightIndex - currentIndex >= maxIndexesPerMark && currentIndex - leftIndex >= maxIndexesPerMark) {\n          // TickMark fits. Place it into new array\n          marks.push(mark);\n          leftIndex = currentIndex;\n        }\n      }\n      // Place all unused tickMarks into new array;\n      for (; prevMarksPointer < prevMarksLength; prevMarksPointer++) {\n        marks.push(prevMarks[prevMarksPointer]);\n      }\n    }\n    return marks;\n  }\n}\nclass TimeScaleVisibleRange {\n  constructor(logicalRange) {\n    this._private__logicalRange = logicalRange;\n  }\n  _internal_strictRange() {\n    if (this._private__logicalRange === null) {\n      return null;\n    }\n    return new RangeImpl(Math.floor(this._private__logicalRange._internal_left()), Math.ceil(this._private__logicalRange._internal_right()));\n  }\n  _internal_logicalRange() {\n    return this._private__logicalRange;\n  }\n  static _internal_invalid() {\n    return new TimeScaleVisibleRange(null);\n  }\n}\n\n/**\n * Represents the type of a tick mark on the time axis.\n */\nvar TickMarkType;\n(function (TickMarkType) {\n  /**\n   * The start of the year (e.g. it's the first tick mark in a year).\n   */\n  TickMarkType[TickMarkType[\"Year\"] = 0] = \"Year\";\n  /**\n   * The start of the month (e.g. it's the first tick mark in a month).\n   */\n  TickMarkType[TickMarkType[\"Month\"] = 1] = \"Month\";\n  /**\n   * A day of the month.\n   */\n  TickMarkType[TickMarkType[\"DayOfMonth\"] = 2] = \"DayOfMonth\";\n  /**\n   * A time without seconds.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  TickMarkType[TickMarkType[\"Time\"] = 3] = \"Time\";\n  /**\n   * A time with seconds.\n   */\n  TickMarkType[TickMarkType[\"TimeWithSeconds\"] = 4] = \"TimeWithSeconds\";\n})(TickMarkType || (TickMarkType = {}));\nclass TimeScale {\n  constructor(model, options, localizationOptions) {\n    this._private__width = 0;\n    this._private__baseIndexOrNull = null;\n    this._private__points = [];\n    this._private__scrollStartPoint = null;\n    this._private__scaleStartPoint = null;\n    this._private__tickMarks = new TickMarks();\n    this._private__formattedByWeight = new Map();\n    this._private__visibleRange = TimeScaleVisibleRange._internal_invalid();\n    this._private__visibleRangeInvalidated = true;\n    this._private__visibleBarsChanged = new Delegate();\n    this._private__logicalRangeChanged = new Delegate();\n    this._private__optionsApplied = new Delegate();\n    this._private__commonTransitionStartState = null;\n    this._private__timeMarksCache = null;\n    this._private__labels = [];\n    this._private__options = options;\n    this._private__localizationOptions = localizationOptions;\n    this._private__rightOffset = options.rightOffset;\n    this._private__barSpacing = options.barSpacing;\n    this._private__model = model;\n    this._private__updateDateTimeFormatter();\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyLocalizationOptions(localizationOptions) {\n    merge(this._private__localizationOptions, localizationOptions);\n    this._private__invalidateTickMarks();\n    this._private__updateDateTimeFormatter();\n  }\n  _internal_applyOptions(options, localizationOptions) {\n    var _a;\n    merge(this._private__options, options);\n    if (this._private__options.fixLeftEdge) {\n      this._private__doFixLeftEdge();\n    }\n    if (this._private__options.fixRightEdge) {\n      this._private__doFixRightEdge();\n    }\n    // note that bar spacing should be applied before right offset\n    // because right offset depends on bar spacing\n    if (options.barSpacing !== undefined) {\n      this._private__model._internal_setBarSpacing(options.barSpacing);\n    }\n    if (options.rightOffset !== undefined) {\n      this._private__model._internal_setRightOffset(options.rightOffset);\n    }\n    if (options.minBarSpacing !== undefined) {\n      // yes, if we apply min bar spacing then we need to correct bar spacing\n      // the easiest way is to apply it once again\n      this._private__model._internal_setBarSpacing((_a = options.barSpacing) !== null && _a !== void 0 ? _a : this._private__barSpacing);\n    }\n    this._private__invalidateTickMarks();\n    this._private__updateDateTimeFormatter();\n    this._private__optionsApplied._internal_fire();\n  }\n  _internal_indexToTime(index) {\n    var _a, _b;\n    return (_b = (_a = this._private__points[index]) === null || _a === void 0 ? void 0 : _a._internal_time) !== null && _b !== void 0 ? _b : null;\n  }\n  _internal_indexToTimeScalePoint(index) {\n    var _a;\n    return (_a = this._private__points[index]) !== null && _a !== void 0 ? _a : null;\n  }\n  _internal_timeToIndex(time, findNearest) {\n    if (this._private__points.length < 1) {\n      // no time points available\n      return null;\n    }\n    if (time._internal_timestamp > this._private__points[this._private__points.length - 1]._internal_time._internal_timestamp) {\n      // special case\n      return findNearest ? this._private__points.length - 1 : null;\n    }\n    const index = lowerbound(this._private__points, time._internal_timestamp, (a, b) => a._internal_time._internal_timestamp < b);\n    if (time._internal_timestamp < this._private__points[index]._internal_time._internal_timestamp) {\n      return findNearest ? index : null;\n    }\n    return index;\n  }\n  _internal_isEmpty() {\n    return this._private__width === 0 || this._private__points.length === 0 || this._private__baseIndexOrNull === null;\n  }\n  _internal_hasPoints() {\n    return this._private__points.length > 0;\n  }\n  // strict range: integer indices of the bars in the visible range rounded in more wide direction\n  _internal_visibleStrictRange() {\n    this._private__updateVisibleRange();\n    return this._private__visibleRange._internal_strictRange();\n  }\n  _internal_visibleLogicalRange() {\n    this._private__updateVisibleRange();\n    return this._private__visibleRange._internal_logicalRange();\n  }\n  _internal_visibleTimeRange() {\n    const visibleBars = this._internal_visibleStrictRange();\n    if (visibleBars === null) {\n      return null;\n    }\n    const range = {\n      from: visibleBars._internal_left(),\n      to: visibleBars._internal_right()\n    };\n    return this._internal_timeRangeForLogicalRange(range);\n  }\n  _internal_timeRangeForLogicalRange(range) {\n    const from = Math.round(range.from);\n    const to = Math.round(range.to);\n    const firstIndex = ensureNotNull(this._private__firstIndex());\n    const lastIndex = ensureNotNull(this._private__lastIndex());\n    return {\n      from: ensureNotNull(this._internal_indexToTime(Math.max(firstIndex, from))),\n      to: ensureNotNull(this._internal_indexToTime(Math.min(lastIndex, to)))\n    };\n  }\n  _internal_logicalRangeForTimeRange(range) {\n    return {\n      from: ensureNotNull(this._internal_timeToIndex(range.from, true)),\n      to: ensureNotNull(this._internal_timeToIndex(range.to, true))\n    };\n  }\n  _internal_width() {\n    return this._private__width;\n  }\n  _internal_setWidth(newWidth) {\n    if (!isFinite(newWidth) || newWidth <= 0) {\n      return;\n    }\n    if (this._private__width === newWidth) {\n      return;\n    }\n    // when we change the width and we need to correct visible range because of fixing left edge\n    // we need to check the previous visible range rather than the new one\n    // because it might be updated by changing width, bar spacing, etc\n    // but we need to try to keep the same range\n    const previousVisibleRange = this._internal_visibleLogicalRange();\n    const oldWidth = this._private__width;\n    this._private__width = newWidth;\n    this._private__visibleRangeInvalidated = true;\n    if (this._private__options.lockVisibleTimeRangeOnResize && oldWidth !== 0) {\n      // recalculate bar spacing\n      const newBarSpacing = this._private__barSpacing * newWidth / oldWidth;\n      this._private__barSpacing = newBarSpacing;\n    }\n    // if time scale is scrolled to the end of data and we have fixed right edge\n    // keep left edge instead of right\n    // we need it to avoid \"shaking\" if the last bar visibility affects time scale width\n    if (this._private__options.fixLeftEdge) {\n      // note that logical left range means not the middle of a bar (it's the left border)\n      if (previousVisibleRange !== null && previousVisibleRange._internal_left() <= 0) {\n        const delta = oldWidth - newWidth;\n        // reduce  _rightOffset means move right\n        // we could move more than required - this will be fixed by _correctOffset()\n        this._private__rightOffset -= Math.round(delta / this._private__barSpacing) + 1;\n        this._private__visibleRangeInvalidated = true;\n      }\n    }\n    // updating bar spacing should be first because right offset depends on it\n    this._private__correctBarSpacing();\n    this._private__correctOffset();\n  }\n  _internal_indexToCoordinate(index) {\n    if (this._internal_isEmpty() || !isInteger(index)) {\n      return 0;\n    }\n    const baseIndex = this._internal_baseIndex();\n    const deltaFromRight = baseIndex + this._private__rightOffset - index;\n    const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n    return coordinate;\n  }\n  _internal_indexesToCoordinates(points, visibleRange) {\n    const baseIndex = this._internal_baseIndex();\n    const indexFrom = visibleRange === undefined ? 0 : visibleRange.from;\n    const indexTo = visibleRange === undefined ? points.length : visibleRange.to;\n    for (let i = indexFrom; i < indexTo; i++) {\n      const index = points[i]._internal_time;\n      const deltaFromRight = baseIndex + this._private__rightOffset - index;\n      const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n      points[i]._internal_x = coordinate;\n    }\n  }\n  _internal_coordinateToIndex(x) {\n    return Math.ceil(this._private__coordinateToFloatIndex(x));\n  }\n  _internal_setRightOffset(offset) {\n    this._private__visibleRangeInvalidated = true;\n    this._private__rightOffset = offset;\n    this._private__correctOffset();\n    this._private__model._internal_recalculateAllPanes();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_barSpacing() {\n    return this._private__barSpacing;\n  }\n  _internal_setBarSpacing(newBarSpacing) {\n    this._private__setBarSpacing(newBarSpacing);\n    // do not allow scroll out of visible bars\n    this._private__correctOffset();\n    this._private__model._internal_recalculateAllPanes();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_rightOffset() {\n    return this._private__rightOffset;\n  }\n  // eslint-disable-next-line complexity\n  _internal_marks() {\n    if (this._internal_isEmpty()) {\n      return null;\n    }\n    if (this._private__timeMarksCache !== null) {\n      return this._private__timeMarksCache;\n    }\n    const spacing = this._private__barSpacing;\n    const fontSize = this._private__model._internal_options().layout.fontSize;\n    const maxLabelWidth = (fontSize + 4) * 5;\n    const indexPerLabel = Math.round(maxLabelWidth / spacing);\n    const visibleBars = ensureNotNull(this._internal_visibleStrictRange());\n    const firstBar = Math.max(visibleBars._internal_left(), visibleBars._internal_left() - indexPerLabel);\n    const lastBar = Math.max(visibleBars._internal_right(), visibleBars._internal_right() - indexPerLabel);\n    const items = this._private__tickMarks._internal_build(spacing, maxLabelWidth);\n    // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second label on time scale\"\n    const earliestIndexOfSecondLabel = this._private__firstIndex() + indexPerLabel;\n    // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second last label on time scale\"\n    const indexOfSecondLastLabel = this._private__lastIndex() - indexPerLabel;\n    const isAllScalingAndScrollingDisabled = this._private__isAllScalingAndScrollingDisabled();\n    const isLeftEdgeFixed = this._private__options.fixLeftEdge || isAllScalingAndScrollingDisabled;\n    const isRightEdgeFixed = this._private__options.fixRightEdge || isAllScalingAndScrollingDisabled;\n    let targetIndex = 0;\n    for (const tm of items) {\n      if (!(firstBar <= tm._internal_index && tm._internal_index <= lastBar)) {\n        continue;\n      }\n      let label;\n      if (targetIndex < this._private__labels.length) {\n        label = this._private__labels[targetIndex];\n        label._internal_coord = this._internal_indexToCoordinate(tm._internal_index);\n        label._internal_label = this._private__formatLabel(tm);\n        label._internal_weight = tm._internal_weight;\n      } else {\n        label = {\n          _internal_needAlignCoordinate: false,\n          _internal_coord: this._internal_indexToCoordinate(tm._internal_index),\n          _internal_label: this._private__formatLabel(tm),\n          _internal_weight: tm._internal_weight\n        };\n        this._private__labels.push(label);\n      }\n      if (this._private__barSpacing > maxLabelWidth / 2 && !isAllScalingAndScrollingDisabled) {\n        // if there is enough space then let's show all tick marks as usual\n        label._internal_needAlignCoordinate = false;\n      } else {\n        // if a user is able to scroll after a tick mark then show it as usual, otherwise the coordinate might be aligned\n        // if the index is for the second (last) label or later (earlier) then most likely this label might be displayed without correcting the coordinate\n        label._internal_needAlignCoordinate = isLeftEdgeFixed && tm._internal_index <= earliestIndexOfSecondLabel || isRightEdgeFixed && tm._internal_index >= indexOfSecondLastLabel;\n      }\n      targetIndex++;\n    }\n    this._private__labels.length = targetIndex;\n    this._private__timeMarksCache = this._private__labels;\n    return this._private__labels;\n  }\n  _internal_restoreDefault() {\n    this._private__visibleRangeInvalidated = true;\n    this._internal_setBarSpacing(this._private__options.barSpacing);\n    this._internal_setRightOffset(this._private__options.rightOffset);\n  }\n  _internal_setBaseIndex(baseIndex) {\n    this._private__visibleRangeInvalidated = true;\n    this._private__baseIndexOrNull = baseIndex;\n    this._private__correctOffset();\n    this._private__doFixLeftEdge();\n  }\n  /**\n   * Zoom in/out the scale around a `zoomPoint` on `scale` value.\n   *\n   * @param zoomPoint - X coordinate of the point to apply the zoom.\n   * If `rightBarStaysOnScroll` option is disabled, then will be used to restore right offset.\n   * @param scale - Zoom value (in 1/10 parts of current bar spacing).\n   * Negative value means zoom out, positive - zoom in.\n   */\n  _internal_zoom(zoomPoint, scale) {\n    const floatIndexAtZoomPoint = this._private__coordinateToFloatIndex(zoomPoint);\n    const barSpacing = this._internal_barSpacing();\n    const newBarSpacing = barSpacing + scale * (barSpacing / 10);\n    // zoom in/out bar spacing\n    this._internal_setBarSpacing(newBarSpacing);\n    if (!this._private__options.rightBarStaysOnScroll) {\n      // and then correct right offset to move index under zoomPoint back to its coordinate\n      this._internal_setRightOffset(this._internal_rightOffset() + (floatIndexAtZoomPoint - this._private__coordinateToFloatIndex(zoomPoint)));\n    }\n  }\n  _internal_startScale(x) {\n    if (this._private__scrollStartPoint) {\n      this._internal_endScroll();\n    }\n    if (this._private__scaleStartPoint !== null || this._private__commonTransitionStartState !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    this._private__scaleStartPoint = x;\n    this._private__saveCommonTransitionsStartState();\n  }\n  _internal_scaleTo(x) {\n    if (this._private__commonTransitionStartState === null) {\n      return;\n    }\n    const startLengthFromRight = clamp(this._private__width - x, 0, this._private__width);\n    const currentLengthFromRight = clamp(this._private__width - ensureNotNull(this._private__scaleStartPoint), 0, this._private__width);\n    if (startLengthFromRight === 0 || currentLengthFromRight === 0) {\n      return;\n    }\n    this._internal_setBarSpacing(this._private__commonTransitionStartState._internal_barSpacing * startLengthFromRight / currentLengthFromRight);\n  }\n  _internal_endScale() {\n    if (this._private__scaleStartPoint === null) {\n      return;\n    }\n    this._private__scaleStartPoint = null;\n    this._private__clearCommonTransitionsStartState();\n  }\n  _internal_startScroll(x) {\n    if (this._private__scrollStartPoint !== null || this._private__commonTransitionStartState !== null) {\n      return;\n    }\n    if (this._internal_isEmpty()) {\n      return;\n    }\n    this._private__scrollStartPoint = x;\n    this._private__saveCommonTransitionsStartState();\n  }\n  _internal_scrollTo(x) {\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    const shiftInLogical = (this._private__scrollStartPoint - x) / this._internal_barSpacing();\n    this._private__rightOffset = ensureNotNull(this._private__commonTransitionStartState)._internal_rightOffset + shiftInLogical;\n    this._private__visibleRangeInvalidated = true;\n    // do not allow scroll out of visible bars\n    this._private__correctOffset();\n  }\n  _internal_endScroll() {\n    if (this._private__scrollStartPoint === null) {\n      return;\n    }\n    this._private__scrollStartPoint = null;\n    this._private__clearCommonTransitionsStartState();\n  }\n  _internal_scrollToRealTime() {\n    this._internal_scrollToOffsetAnimated(this._private__options.rightOffset);\n  }\n  _internal_scrollToOffsetAnimated(offset, animationDuration = 400 /* Constants.DefaultAnimationDuration */) {\n    if (!isFinite(offset)) {\n      throw new RangeError('offset is required and must be finite number');\n    }\n    if (!isFinite(animationDuration) || animationDuration <= 0) {\n      throw new RangeError('animationDuration (optional) must be finite positive number');\n    }\n    const source = this._private__rightOffset;\n    const animationStart = performance.now();\n    this._private__model._internal_setTimeScaleAnimation({\n      _internal_finished: time => (time - animationStart) / animationDuration >= 1,\n      _internal_getPosition: time => {\n        const animationProgress = (time - animationStart) / animationDuration;\n        const finishAnimation = animationProgress >= 1;\n        return finishAnimation ? offset : source + (offset - source) * animationProgress;\n      }\n    });\n  }\n  _internal_update(newPoints, firstChangedPointIndex) {\n    this._private__visibleRangeInvalidated = true;\n    this._private__points = newPoints;\n    this._private__tickMarks._internal_setTimeScalePoints(newPoints, firstChangedPointIndex);\n    this._private__correctOffset();\n  }\n  _internal_visibleBarsChanged() {\n    return this._private__visibleBarsChanged;\n  }\n  _internal_logicalRangeChanged() {\n    return this._private__logicalRangeChanged;\n  }\n  _internal_optionsApplied() {\n    return this._private__optionsApplied;\n  }\n  _internal_baseIndex() {\n    // null is used to known that baseIndex is not set yet\n    // so in methods which should known whether it is set or not\n    // we should check field `_baseIndexOrNull` instead of getter `baseIndex()`\n    // see minRightOffset for example\n    return this._private__baseIndexOrNull || 0;\n  }\n  _internal_setVisibleRange(range) {\n    const length = range._internal_count();\n    this._private__setBarSpacing(this._private__width / length);\n    this._private__rightOffset = range._internal_right() - this._internal_baseIndex();\n    this._private__correctOffset();\n    this._private__visibleRangeInvalidated = true;\n    this._private__model._internal_recalculateAllPanes();\n    this._private__model._internal_lightUpdate();\n  }\n  _internal_fitContent() {\n    const first = this._private__firstIndex();\n    const last = this._private__lastIndex();\n    if (first === null || last === null) {\n      return;\n    }\n    this._internal_setVisibleRange(new RangeImpl(first, last + this._private__options.rightOffset));\n  }\n  _internal_setLogicalRange(range) {\n    const barRange = new RangeImpl(range.from, range.to);\n    this._internal_setVisibleRange(barRange);\n  }\n  _internal_formatDateTime(timeScalePoint) {\n    if (this._private__localizationOptions.timeFormatter !== undefined) {\n      return this._private__localizationOptions.timeFormatter(timeScalePoint._internal_originalTime);\n    }\n    return this._private__dateTimeFormatter._internal_format(new Date(timeScalePoint._internal_time._internal_timestamp * 1000));\n  }\n  _private__isAllScalingAndScrollingDisabled() {\n    const {\n      handleScroll,\n      handleScale\n    } = this._private__model._internal_options();\n    return !handleScroll.horzTouchDrag && !handleScroll.mouseWheel && !handleScroll.pressedMouseMove && !handleScroll.vertTouchDrag && !handleScale.axisDoubleClickReset.time && !handleScale.axisPressedMouseMove.time && !handleScale.mouseWheel && !handleScale.pinch;\n  }\n  _private__firstIndex() {\n    return this._private__points.length === 0 ? null : 0;\n  }\n  _private__lastIndex() {\n    return this._private__points.length === 0 ? null : this._private__points.length - 1;\n  }\n  _private__rightOffsetForCoordinate(x) {\n    return (this._private__width - 1 - x) / this._private__barSpacing;\n  }\n  _private__coordinateToFloatIndex(x) {\n    const deltaFromRight = this._private__rightOffsetForCoordinate(x);\n    const baseIndex = this._internal_baseIndex();\n    const index = baseIndex + this._private__rightOffset - deltaFromRight;\n    // JavaScript uses very strange rounding\n    // we need rounding to avoid problems with calculation errors\n    return Math.round(index * 1000000) / 1000000;\n  }\n  _private__setBarSpacing(newBarSpacing) {\n    const oldBarSpacing = this._private__barSpacing;\n    this._private__barSpacing = newBarSpacing;\n    this._private__correctBarSpacing();\n    // this._barSpacing might be changed in _correctBarSpacing\n    if (oldBarSpacing !== this._private__barSpacing) {\n      this._private__visibleRangeInvalidated = true;\n      this._private__resetTimeMarksCache();\n    }\n  }\n  _private__updateVisibleRange() {\n    if (!this._private__visibleRangeInvalidated) {\n      return;\n    }\n    this._private__visibleRangeInvalidated = false;\n    if (this._internal_isEmpty()) {\n      this._private__setVisibleRange(TimeScaleVisibleRange._internal_invalid());\n      return;\n    }\n    const baseIndex = this._internal_baseIndex();\n    const newBarsLength = this._private__width / this._private__barSpacing;\n    const rightBorder = this._private__rightOffset + baseIndex;\n    const leftBorder = rightBorder - newBarsLength + 1;\n    const logicalRange = new RangeImpl(leftBorder, rightBorder);\n    this._private__setVisibleRange(new TimeScaleVisibleRange(logicalRange));\n  }\n  _private__correctBarSpacing() {\n    const minBarSpacing = this._private__minBarSpacing();\n    if (this._private__barSpacing < minBarSpacing) {\n      this._private__barSpacing = minBarSpacing;\n      this._private__visibleRangeInvalidated = true;\n    }\n    if (this._private__width !== 0) {\n      // make sure that this (1 / Constants.MinVisibleBarsCount) >= coeff in max bar spacing (it's 0.5 here)\n      const maxBarSpacing = this._private__width * 0.5;\n      if (this._private__barSpacing > maxBarSpacing) {\n        this._private__barSpacing = maxBarSpacing;\n        this._private__visibleRangeInvalidated = true;\n      }\n    }\n  }\n  _private__minBarSpacing() {\n    // if both options are enabled then limit bar spacing so that zooming-out is not possible\n    // if it would cause either the first or last points to move too far from an edge\n    if (this._private__options.fixLeftEdge && this._private__options.fixRightEdge && this._private__points.length !== 0) {\n      return this._private__width / this._private__points.length;\n    }\n    return this._private__options.minBarSpacing;\n  }\n  _private__correctOffset() {\n    // block scrolling of to future\n    const maxRightOffset = this._private__maxRightOffset();\n    if (this._private__rightOffset > maxRightOffset) {\n      this._private__rightOffset = maxRightOffset;\n      this._private__visibleRangeInvalidated = true;\n    }\n    // block scrolling of to past\n    const minRightOffset = this._private__minRightOffset();\n    if (minRightOffset !== null && this._private__rightOffset < minRightOffset) {\n      this._private__rightOffset = minRightOffset;\n      this._private__visibleRangeInvalidated = true;\n    }\n  }\n  _private__minRightOffset() {\n    const firstIndex = this._private__firstIndex();\n    const baseIndex = this._private__baseIndexOrNull;\n    if (firstIndex === null || baseIndex === null) {\n      return null;\n    }\n    const barsEstimation = this._private__options.fixLeftEdge ? this._private__width / this._private__barSpacing : Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n    return firstIndex - baseIndex - 1 + barsEstimation;\n  }\n  _private__maxRightOffset() {\n    return this._private__options.fixRightEdge ? 0 : this._private__width / this._private__barSpacing - Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n  }\n  _private__saveCommonTransitionsStartState() {\n    this._private__commonTransitionStartState = {\n      _internal_barSpacing: this._internal_barSpacing(),\n      _internal_rightOffset: this._internal_rightOffset()\n    };\n  }\n  _private__clearCommonTransitionsStartState() {\n    this._private__commonTransitionStartState = null;\n  }\n  _private__formatLabel(tickMark) {\n    let formatter = this._private__formattedByWeight.get(tickMark._internal_weight);\n    if (formatter === undefined) {\n      formatter = new FormattedLabelsCache(mark => {\n        return this._private__formatLabelImpl(mark);\n      });\n      this._private__formattedByWeight.set(tickMark._internal_weight, formatter);\n    }\n    return formatter._internal_format(tickMark);\n  }\n  _private__formatLabelImpl(tickMark) {\n    const tickMarkType = weightToTickMarkType(tickMark._internal_weight, this._private__options.timeVisible, this._private__options.secondsVisible);\n    if (this._private__options.tickMarkFormatter !== undefined) {\n      const tickMarkString = this._private__options.tickMarkFormatter(tickMark._internal_originalTime, tickMarkType, this._private__localizationOptions.locale);\n      if (tickMarkString !== null) {\n        return tickMarkString;\n      }\n    }\n    return defaultTickMarkFormatter(tickMark._internal_time, tickMarkType, this._private__localizationOptions.locale);\n  }\n  _private__setVisibleRange(newVisibleRange) {\n    const oldVisibleRange = this._private__visibleRange;\n    this._private__visibleRange = newVisibleRange;\n    if (!areRangesEqual(oldVisibleRange._internal_strictRange(), this._private__visibleRange._internal_strictRange())) {\n      this._private__visibleBarsChanged._internal_fire();\n    }\n    if (!areRangesEqual(oldVisibleRange._internal_logicalRange(), this._private__visibleRange._internal_logicalRange())) {\n      this._private__logicalRangeChanged._internal_fire();\n    }\n    // TODO: reset only coords in case when this._visibleBars has not been changed\n    this._private__resetTimeMarksCache();\n  }\n  _private__resetTimeMarksCache() {\n    this._private__timeMarksCache = null;\n  }\n  _private__invalidateTickMarks() {\n    this._private__resetTimeMarksCache();\n    this._private__formattedByWeight.clear();\n  }\n  _private__updateDateTimeFormatter() {\n    const dateFormat = this._private__localizationOptions.dateFormat;\n    if (this._private__options.timeVisible) {\n      this._private__dateTimeFormatter = new DateTimeFormatter({\n        _internal_dateFormat: dateFormat,\n        _internal_timeFormat: this._private__options.secondsVisible ? '%h:%m:%s' : '%h:%m',\n        _internal_dateTimeSeparator: '   ',\n        _internal_locale: this._private__localizationOptions.locale\n      });\n    } else {\n      this._private__dateTimeFormatter = new DateFormatter(dateFormat, this._private__localizationOptions.locale);\n    }\n  }\n  _private__doFixLeftEdge() {\n    if (!this._private__options.fixLeftEdge) {\n      return;\n    }\n    const firstIndex = this._private__firstIndex();\n    if (firstIndex === null) {\n      return;\n    }\n    const visibleRange = this._internal_visibleStrictRange();\n    if (visibleRange === null) {\n      return;\n    }\n    const delta = visibleRange._internal_left() - firstIndex;\n    if (delta < 0) {\n      const leftEdgeOffset = this._private__rightOffset - delta - 1;\n      this._internal_setRightOffset(leftEdgeOffset);\n    }\n    this._private__correctBarSpacing();\n  }\n  _private__doFixRightEdge() {\n    this._private__correctOffset();\n    this._private__correctBarSpacing();\n  }\n}\n// eslint-disable-next-line complexity\nfunction weightToTickMarkType(weight, timeVisible, secondsVisible) {\n  switch (weight) {\n    case 0 /* TickMarkWeight.LessThanSecond */:\n    case 10 /* TickMarkWeight.Second */:\n      return timeVisible ? secondsVisible ? 4 /* TickMarkType.TimeWithSeconds */ : 3 /* TickMarkType.Time */ : 2 /* TickMarkType.DayOfMonth */;\n    case 20 /* TickMarkWeight.Minute1 */:\n    case 21 /* TickMarkWeight.Minute5 */:\n    case 22 /* TickMarkWeight.Minute30 */:\n    case 30 /* TickMarkWeight.Hour1 */:\n    case 31 /* TickMarkWeight.Hour3 */:\n    case 32 /* TickMarkWeight.Hour6 */:\n    case 33 /* TickMarkWeight.Hour12 */:\n      return timeVisible ? 3 /* TickMarkType.Time */ : 2 /* TickMarkType.DayOfMonth */;\n    case 50 /* TickMarkWeight.Day */:\n      return 2 /* TickMarkType.DayOfMonth */;\n    case 60 /* TickMarkWeight.Month */:\n      return 1 /* TickMarkType.Month */;\n    case 70 /* TickMarkWeight.Year */:\n      return 0 /* TickMarkType.Year */;\n  }\n}\n\nclass WatermarkRenderer extends MediaCoordinatesPaneRenderer {\n  constructor(data) {\n    super();\n    this._private__metricsCache = new Map();\n    this._private__data = data;\n  }\n  _internal__drawImpl(renderingScope) {}\n  _internal__drawBackgroundImpl(renderingScope) {\n    if (!this._private__data._internal_visible) {\n      return;\n    }\n    const {\n      context: ctx,\n      mediaSize\n    } = renderingScope;\n    let textHeight = 0;\n    for (const line of this._private__data._internal_lines) {\n      if (line._internal_text.length === 0) {\n        continue;\n      }\n      ctx.font = line._internal_font;\n      const textWidth = this._private__metrics(ctx, line._internal_text);\n      if (textWidth > mediaSize.width) {\n        line._internal_zoom = mediaSize.width / textWidth;\n      } else {\n        line._internal_zoom = 1;\n      }\n      textHeight += line._internal_lineHeight * line._internal_zoom;\n    }\n    let vertOffset = 0;\n    switch (this._private__data._internal_vertAlign) {\n      case 'top':\n        vertOffset = 0;\n        break;\n      case 'center':\n        vertOffset = Math.max((mediaSize.height - textHeight) / 2, 0);\n        break;\n      case 'bottom':\n        vertOffset = Math.max(mediaSize.height - textHeight, 0);\n        break;\n    }\n    ctx.fillStyle = this._private__data._internal_color;\n    for (const line of this._private__data._internal_lines) {\n      ctx.save();\n      let horzOffset = 0;\n      switch (this._private__data._internal_horzAlign) {\n        case 'left':\n          ctx.textAlign = 'left';\n          horzOffset = line._internal_lineHeight / 2;\n          break;\n        case 'center':\n          ctx.textAlign = 'center';\n          horzOffset = mediaSize.width / 2;\n          break;\n        case 'right':\n          ctx.textAlign = 'right';\n          horzOffset = mediaSize.width - 1 - line._internal_lineHeight / 2;\n          break;\n      }\n      ctx.translate(horzOffset, vertOffset);\n      ctx.textBaseline = 'top';\n      ctx.font = line._internal_font;\n      ctx.scale(line._internal_zoom, line._internal_zoom);\n      ctx.fillText(line._internal_text, 0, line._internal_vertOffset);\n      ctx.restore();\n      vertOffset += line._internal_lineHeight * line._internal_zoom;\n    }\n  }\n  _private__metrics(ctx, text) {\n    const fontCache = this._private__fontCache(ctx.font);\n    let result = fontCache.get(text);\n    if (result === undefined) {\n      result = ctx.measureText(text).width;\n      fontCache.set(text, result);\n    }\n    return result;\n  }\n  _private__fontCache(font) {\n    let fontCache = this._private__metricsCache.get(font);\n    if (fontCache === undefined) {\n      fontCache = new Map();\n      this._private__metricsCache.set(font, fontCache);\n    }\n    return fontCache;\n  }\n}\nclass WatermarkPaneView {\n  constructor(source) {\n    this._private__invalidated = true;\n    this._private__rendererData = {\n      _internal_visible: false,\n      _internal_color: '',\n      _internal_lines: [],\n      _internal_vertAlign: 'center',\n      _internal_horzAlign: 'center'\n    };\n    this._private__renderer = new WatermarkRenderer(this._private__rendererData);\n    this._private__source = source;\n  }\n  _internal_update() {\n    this._private__invalidated = true;\n  }\n  _internal_renderer() {\n    if (this._private__invalidated) {\n      this._private__updateImpl();\n      this._private__invalidated = false;\n    }\n    return this._private__renderer;\n  }\n  _private__updateImpl() {\n    const options = this._private__source._internal_options();\n    const data = this._private__rendererData;\n    data._internal_visible = options.visible;\n    if (!data._internal_visible) {\n      return;\n    }\n    data._internal_color = options.color;\n    data._internal_horzAlign = options.horzAlign;\n    data._internal_vertAlign = options.vertAlign;\n    data._internal_lines = [{\n      _internal_text: options.text,\n      _internal_font: makeFont(options.fontSize, options.fontFamily, options.fontStyle),\n      _internal_lineHeight: options.fontSize * 1.2,\n      _internal_vertOffset: 0,\n      _internal_zoom: 0\n    }];\n  }\n}\nclass Watermark extends DataSource {\n  constructor(model, options) {\n    super();\n    this._private__options = options;\n    this._private__paneView = new WatermarkPaneView(this);\n  }\n  _internal_priceAxisViews() {\n    return [];\n  }\n  _internal_paneViews() {\n    return [this._private__paneView];\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_updateAllViews() {\n    this._private__paneView._internal_update();\n  }\n}\n\n/// <reference types=\"_build-time-constants\" />\n/**\n * Determine how to exit the tracking mode.\n *\n * By default, mobile users will long press to deactivate the scroll and have the ability to check values and dates.\n * Another press is required to activate the scroll, be able to move left/right, zoom, etc.\n */\nvar TrackingModeExitMode;\n(function (TrackingModeExitMode) {\n  /**\n   * Tracking Mode will be deactivated on touch end event.\n   */\n  TrackingModeExitMode[TrackingModeExitMode[\"OnTouchEnd\"] = 0] = \"OnTouchEnd\";\n  /**\n   * Tracking Mode will be deactivated on the next tap event.\n   */\n  TrackingModeExitMode[TrackingModeExitMode[\"OnNextTap\"] = 1] = \"OnNextTap\";\n})(TrackingModeExitMode || (TrackingModeExitMode = {}));\nclass ChartModel {\n  constructor(invalidateHandler, options) {\n    this._private__panes = [];\n    this._private__serieses = [];\n    this._private__width = 0;\n    this._private__hoveredSource = null;\n    this._private__priceScalesOptionsChanged = new Delegate();\n    this._private__crosshairMoved = new Delegate();\n    this._private__gradientColorsCache = null;\n    this._private__invalidateHandler = invalidateHandler;\n    this._private__options = options;\n    this._private__rendererOptionsProvider = new PriceAxisRendererOptionsProvider(this);\n    this._private__timeScale = new TimeScale(this, options.timeScale, this._private__options.localization);\n    this._private__crosshair = new Crosshair(this, options.crosshair);\n    this._private__magnet = new Magnet(options.crosshair);\n    this._private__watermark = new Watermark(this, options.watermark);\n    this._internal_createPane();\n    this._private__panes[0]._internal_setStretchFactor(DEFAULT_STRETCH_FACTOR * 2);\n    this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n    this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n  }\n\n  _internal_fullUpdate() {\n    this._private__invalidate(InvalidateMask._internal_full());\n  }\n  _internal_lightUpdate() {\n    this._private__invalidate(InvalidateMask._internal_light());\n  }\n  _internal_cursorUpdate() {\n    this._private__invalidate(new InvalidateMask(1 /* InvalidationLevel.Cursor */));\n  }\n\n  _internal_updateSource(source) {\n    const inv = this._private__invalidationMaskForSource(source);\n    this._private__invalidate(inv);\n  }\n  _internal_hoveredSource() {\n    return this._private__hoveredSource;\n  }\n  _internal_setHoveredSource(source) {\n    const prevSource = this._private__hoveredSource;\n    this._private__hoveredSource = source;\n    if (prevSource !== null) {\n      this._internal_updateSource(prevSource._internal_source);\n    }\n    if (source !== null) {\n      this._internal_updateSource(source._internal_source);\n    }\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_applyOptions(options) {\n    merge(this._private__options, options);\n    this._private__panes.forEach(p => p._internal_applyScaleOptions(options));\n    if (options.timeScale !== undefined) {\n      this._private__timeScale._internal_applyOptions(options.timeScale);\n    }\n    if (options.localization !== undefined) {\n      this._private__timeScale._internal_applyLocalizationOptions(options.localization);\n    }\n    if (options.leftPriceScale || options.rightPriceScale) {\n      this._private__priceScalesOptionsChanged._internal_fire();\n    }\n    this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n    this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n    this._internal_fullUpdate();\n  }\n  _internal_applyPriceScaleOptions(priceScaleId, options) {\n    if (priceScaleId === \"left\" /* DefaultPriceScaleId.Left */) {\n      this._internal_applyOptions({\n        leftPriceScale: options\n      });\n      return;\n    } else if (priceScaleId === \"right\" /* DefaultPriceScaleId.Right */) {\n      this._internal_applyOptions({\n        rightPriceScale: options\n      });\n      return;\n    }\n    const res = this._internal_findPriceScale(priceScaleId);\n    if (res === null) {\n      {\n        throw new Error(`Trying to apply price scale options with incorrect ID: ${priceScaleId}`);\n      }\n    }\n    res._internal_priceScale._internal_applyOptions(options);\n    this._private__priceScalesOptionsChanged._internal_fire();\n  }\n  _internal_findPriceScale(priceScaleId) {\n    for (const pane of this._private__panes) {\n      const priceScale = pane._internal_priceScaleById(priceScaleId);\n      if (priceScale !== null) {\n        return {\n          _internal_pane: pane,\n          _internal_priceScale: priceScale\n        };\n      }\n    }\n    return null;\n  }\n  _internal_timeScale() {\n    return this._private__timeScale;\n  }\n  _internal_panes() {\n    return this._private__panes;\n  }\n  _internal_watermarkSource() {\n    return this._private__watermark;\n  }\n  _internal_crosshairSource() {\n    return this._private__crosshair;\n  }\n  _internal_crosshairMoved() {\n    return this._private__crosshairMoved;\n  }\n  _internal_setPaneHeight(pane, height) {\n    pane._internal_setHeight(height);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_setWidth(width) {\n    this._private__width = width;\n    this._private__timeScale._internal_setWidth(this._private__width);\n    this._private__panes.forEach(pane => pane._internal_setWidth(width));\n    this._internal_recalculateAllPanes();\n  }\n  _internal_createPane(index) {\n    const pane = new Pane(this._private__timeScale, this);\n    if (index !== undefined) {\n      this._private__panes.splice(index, 0, pane);\n    } else {\n      // adding to the end - common case\n      this._private__panes.push(pane);\n    }\n    const actualIndex = index === undefined ? this._private__panes.length - 1 : index;\n    // we always do autoscaling on the creation\n    // if autoscale option is true, it is ok, just recalculate by invalidation mask\n    // if autoscale option is false, autoscale anyway on the first draw\n    // also there is a scenario when autoscale is true in constructor and false later on applyOptions\n    const mask = InvalidateMask._internal_full();\n    mask._internal_invalidatePane(actualIndex, {\n      _internal_level: 0 /* InvalidationLevel.None */,\n      _internal_autoScale: true\n    });\n    this._private__invalidate(mask);\n    return pane;\n  }\n  _internal_startScalePrice(pane, priceScale, x) {\n    pane._internal_startScalePrice(priceScale, x);\n  }\n  _internal_scalePriceTo(pane, priceScale, x) {\n    pane._internal_scalePriceTo(priceScale, x);\n    this._internal_updateCrosshair();\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n\n  _internal_endScalePrice(pane, priceScale) {\n    pane._internal_endScalePrice(priceScale);\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n\n  _internal_startScrollPrice(pane, priceScale, x) {\n    if (priceScale._internal_isAutoScale()) {\n      return;\n    }\n    pane._internal_startScrollPrice(priceScale, x);\n  }\n  _internal_scrollPriceTo(pane, priceScale, x) {\n    if (priceScale._internal_isAutoScale()) {\n      return;\n    }\n    pane._internal_scrollPriceTo(priceScale, x);\n    this._internal_updateCrosshair();\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n\n  _internal_endScrollPrice(pane, priceScale) {\n    if (priceScale._internal_isAutoScale()) {\n      return;\n    }\n    pane._internal_endScrollPrice(priceScale);\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n\n  _internal_resetPriceScale(pane, priceScale) {\n    pane._internal_resetPriceScale(priceScale);\n    this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n  }\n\n  _internal_startScaleTime(position) {\n    this._private__timeScale._internal_startScale(position);\n  }\n  /**\n   * Zoom in/out the chart (depends on scale value).\n   *\n   * @param pointX - X coordinate of the point to apply the zoom (the point which should stay on its place)\n   * @param scale - Zoom value. Negative value means zoom out, positive - zoom in.\n   */\n  _internal_zoomTime(pointX, scale) {\n    const timeScale = this._internal_timeScale();\n    if (timeScale._internal_isEmpty() || scale === 0) {\n      return;\n    }\n    const timeScaleWidth = timeScale._internal_width();\n    pointX = Math.max(1, Math.min(pointX, timeScaleWidth));\n    timeScale._internal_zoom(pointX, scale);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_scrollChart(x) {\n    this._internal_startScrollTime(0);\n    this._internal_scrollTimeTo(x);\n    this._internal_endScrollTime();\n  }\n  _internal_scaleTimeTo(x) {\n    this._private__timeScale._internal_scaleTo(x);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_endScaleTime() {\n    this._private__timeScale._internal_endScale();\n    this._internal_lightUpdate();\n  }\n  _internal_startScrollTime(x) {\n    this._private__timeScale._internal_startScroll(x);\n  }\n  _internal_scrollTimeTo(x) {\n    this._private__timeScale._internal_scrollTo(x);\n    this._internal_recalculateAllPanes();\n  }\n  _internal_endScrollTime() {\n    this._private__timeScale._internal_endScroll();\n    this._internal_lightUpdate();\n  }\n  _internal_serieses() {\n    return this._private__serieses;\n  }\n  _internal_setAndSaveCurrentPosition(x, y, event, pane) {\n    this._private__crosshair._internal_saveOriginCoord(x, y);\n    let price = NaN;\n    let index = this._private__timeScale._internal_coordinateToIndex(x);\n    const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n    if (visibleBars !== null) {\n      index = Math.min(Math.max(visibleBars._internal_left(), index), visibleBars._internal_right());\n    }\n    const priceScale = pane._internal_defaultPriceScale();\n    const firstValue = priceScale._internal_firstValue();\n    if (firstValue !== null) {\n      price = priceScale._internal_coordinateToPrice(y, firstValue);\n    }\n    price = this._private__magnet._internal_align(price, index, pane);\n    this._private__crosshair._internal_setPosition(index, price, pane);\n    this._internal_cursorUpdate();\n    this._private__crosshairMoved._internal_fire(this._private__crosshair._internal_appliedIndex(), {\n      x,\n      y\n    }, event);\n  }\n  _internal_clearCurrentPosition() {\n    const crosshair = this._internal_crosshairSource();\n    crosshair._internal_clearPosition();\n    this._internal_cursorUpdate();\n    this._private__crosshairMoved._internal_fire(null, null, null);\n  }\n  _internal_updateCrosshair() {\n    // apply magnet\n    const pane = this._private__crosshair._internal_pane();\n    if (pane !== null) {\n      const x = this._private__crosshair._internal_originCoordX();\n      const y = this._private__crosshair._internal_originCoordY();\n      this._internal_setAndSaveCurrentPosition(x, y, null, pane);\n    }\n    this._private__crosshair._internal_updateAllViews();\n  }\n  _internal_updateTimeScale(newBaseIndex, newPoints, firstChangedPointIndex) {\n    const oldFirstTime = this._private__timeScale._internal_indexToTime(0);\n    if (newPoints !== undefined && firstChangedPointIndex !== undefined) {\n      this._private__timeScale._internal_update(newPoints, firstChangedPointIndex);\n    }\n    const newFirstTime = this._private__timeScale._internal_indexToTime(0);\n    const currentBaseIndex = this._private__timeScale._internal_baseIndex();\n    const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n    // if time scale cannot return current visible bars range (e.g. time scale has zero-width)\n    // then we do not need to update right offset to shift visible bars range to have the same right offset as we have before new bar\n    // (and actually we cannot)\n    if (visibleBars !== null && oldFirstTime !== null && newFirstTime !== null) {\n      const isLastSeriesBarVisible = visibleBars._internal_contains(currentBaseIndex);\n      const isLeftBarShiftToLeft = oldFirstTime._internal_timestamp > newFirstTime._internal_timestamp;\n      const isSeriesPointsAdded = newBaseIndex !== null && newBaseIndex > currentBaseIndex;\n      const isSeriesPointsAddedToRight = isSeriesPointsAdded && !isLeftBarShiftToLeft;\n      const needShiftVisibleRangeOnNewBar = isLastSeriesBarVisible && this._private__timeScale._internal_options().shiftVisibleRangeOnNewBar;\n      if (isSeriesPointsAddedToRight && !needShiftVisibleRangeOnNewBar) {\n        const compensationShift = newBaseIndex - currentBaseIndex;\n        this._private__timeScale._internal_setRightOffset(this._private__timeScale._internal_rightOffset() - compensationShift);\n      }\n    }\n    this._private__timeScale._internal_setBaseIndex(newBaseIndex);\n  }\n  _internal_recalculatePane(pane) {\n    if (pane !== null) {\n      pane._internal_recalculate();\n    }\n  }\n  _internal_paneForSource(source) {\n    const pane = this._private__panes.find(p => p._internal_orderedSources().includes(source));\n    return pane === undefined ? null : pane;\n  }\n  _internal_recalculateAllPanes() {\n    this._private__watermark._internal_updateAllViews();\n    this._private__panes.forEach(p => p._internal_recalculate());\n    this._internal_updateCrosshair();\n  }\n  _internal_destroy() {\n    this._private__panes.forEach(p => p._internal_destroy());\n    this._private__panes.length = 0;\n    // to avoid memleaks\n    this._private__options.localization.priceFormatter = undefined;\n    this._private__options.localization.timeFormatter = undefined;\n  }\n  _internal_rendererOptionsProvider() {\n    return this._private__rendererOptionsProvider;\n  }\n  _internal_priceAxisRendererOptions() {\n    return this._private__rendererOptionsProvider._internal_options();\n  }\n  _internal_priceScalesOptionsChanged() {\n    return this._private__priceScalesOptionsChanged;\n  }\n  _internal_createSeries(seriesType, options) {\n    const pane = this._private__panes[0];\n    const series = this._private__createSeries(options, seriesType, pane);\n    this._private__serieses.push(series);\n    if (this._private__serieses.length === 1) {\n      // call fullUpdate to recalculate chart's parts geometry\n      this._internal_fullUpdate();\n    } else {\n      this._internal_lightUpdate();\n    }\n    return series;\n  }\n  _internal_removeSeries(series) {\n    const pane = this._internal_paneForSource(series);\n    const seriesIndex = this._private__serieses.indexOf(series);\n    assert(seriesIndex !== -1, 'Series not found');\n    this._private__serieses.splice(seriesIndex, 1);\n    ensureNotNull(pane)._internal_removeDataSource(series);\n    if (series._internal_destroy) {\n      series._internal_destroy();\n    }\n  }\n  _internal_moveSeriesToScale(series, targetScaleId) {\n    const pane = ensureNotNull(this._internal_paneForSource(series));\n    pane._internal_removeDataSource(series);\n    // check if targetScaleId exists\n    const target = this._internal_findPriceScale(targetScaleId);\n    if (target === null) {\n      // new scale on the same pane\n      const zOrder = series._internal_zorder();\n      pane._internal_addDataSource(series, targetScaleId, zOrder);\n    } else {\n      // if move to the new scale of the same pane, keep zorder\n      // if move to new pane\n      const zOrder = target._internal_pane === pane ? series._internal_zorder() : undefined;\n      target._internal_pane._internal_addDataSource(series, targetScaleId, zOrder);\n    }\n  }\n  _internal_fitContent() {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setFitContent();\n    this._private__invalidate(mask);\n  }\n  _internal_setTargetLogicalRange(range) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_applyRange(range);\n    this._private__invalidate(mask);\n  }\n  _internal_resetTimeScale() {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_resetTimeScale();\n    this._private__invalidate(mask);\n  }\n  _internal_setBarSpacing(spacing) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setBarSpacing(spacing);\n    this._private__invalidate(mask);\n  }\n  _internal_setRightOffset(offset) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setRightOffset(offset);\n    this._private__invalidate(mask);\n  }\n  _internal_setTimeScaleAnimation(animation) {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_setTimeScaleAnimation(animation);\n    this._private__invalidate(mask);\n  }\n  _internal_stopTimeScaleAnimation() {\n    const mask = InvalidateMask._internal_light();\n    mask._internal_stopTimeScaleAnimation();\n    this._private__invalidate(mask);\n  }\n  _internal_defaultVisiblePriceScaleId() {\n    return this._private__options.rightPriceScale.visible ? \"right\" /* DefaultPriceScaleId.Right */ : \"left\" /* DefaultPriceScaleId.Left */;\n  }\n\n  _internal_backgroundBottomColor() {\n    return this._private__backgroundBottomColor;\n  }\n  _internal_backgroundTopColor() {\n    return this._private__backgroundTopColor;\n  }\n  _internal_backgroundColorAtYPercentFromTop(percent) {\n    const bottomColor = this._private__backgroundBottomColor;\n    const topColor = this._private__backgroundTopColor;\n    if (bottomColor === topColor) {\n      // solid background\n      return bottomColor;\n    }\n    // gradient background\n    // percent should be from 0 to 100 (we're using only integer values to make cache more efficient)\n    percent = Math.max(0, Math.min(100, Math.round(percent * 100)));\n    if (this._private__gradientColorsCache === null || this._private__gradientColorsCache._internal_topColor !== topColor || this._private__gradientColorsCache._internal_bottomColor !== bottomColor) {\n      this._private__gradientColorsCache = {\n        _internal_topColor: topColor,\n        _internal_bottomColor: bottomColor,\n        _internal_colors: new Map()\n      };\n    } else {\n      const cachedValue = this._private__gradientColorsCache._internal_colors.get(percent);\n      if (cachedValue !== undefined) {\n        return cachedValue;\n      }\n    }\n    const result = gradientColorAtPercent(topColor, bottomColor, percent / 100);\n    this._private__gradientColorsCache._internal_colors.set(percent, result);\n    return result;\n  }\n  _private__paneInvalidationMask(pane, level) {\n    const inv = new InvalidateMask(level);\n    if (pane !== null) {\n      const index = this._private__panes.indexOf(pane);\n      inv._internal_invalidatePane(index, {\n        _internal_level: level\n      });\n    }\n    return inv;\n  }\n  _private__invalidationMaskForSource(source, invalidateType) {\n    if (invalidateType === undefined) {\n      invalidateType = 2 /* InvalidationLevel.Light */;\n    }\n\n    return this._private__paneInvalidationMask(this._internal_paneForSource(source), invalidateType);\n  }\n  _private__invalidate(mask) {\n    if (this._private__invalidateHandler) {\n      this._private__invalidateHandler(mask);\n    }\n    this._private__panes.forEach(pane => pane._internal_grid()._internal_paneView()._internal_update());\n  }\n  _private__createSeries(options, seriesType, pane) {\n    const series = new Series(this, options, seriesType);\n    const targetScaleId = options.priceScaleId !== undefined ? options.priceScaleId : this._internal_defaultVisiblePriceScaleId();\n    pane._internal_addDataSource(series, targetScaleId);\n    if (!isDefaultPriceScale(targetScaleId)) {\n      // let's apply that options again to apply margins\n      series._internal_applyOptions(options);\n    }\n    return series;\n  }\n  _private__getBackgroundColor(side) {\n    const layoutOptions = this._private__options.layout;\n    if (layoutOptions.background.type === \"gradient\" /* ColorType.VerticalGradient */) {\n      return side === 0 /* BackgroundColorSide.Top */ ? layoutOptions.background.topColor : layoutOptions.background.bottomColor;\n    }\n    return layoutOptions.background.color;\n  }\n}\nfunction fillUpDownCandlesticksColors(options) {\n  if (options.borderColor !== undefined) {\n    options.borderUpColor = options.borderColor;\n    options.borderDownColor = options.borderColor;\n  }\n  if (options.wickColor !== undefined) {\n    options.wickUpColor = options.wickColor;\n    options.wickDownColor = options.wickColor;\n  }\n}\n/**\n * Represents the type of the last price animation for series such as area or line.\n */\nvar LastPriceAnimationMode;\n(function (LastPriceAnimationMode) {\n  /**\n   * Animation is always disabled\n   */\n  LastPriceAnimationMode[LastPriceAnimationMode[\"Disabled\"] = 0] = \"Disabled\";\n  /**\n   * Animation is always enabled.\n   */\n  LastPriceAnimationMode[LastPriceAnimationMode[\"Continuous\"] = 1] = \"Continuous\";\n  /**\n   * Animation is active after new data.\n   */\n  LastPriceAnimationMode[LastPriceAnimationMode[\"OnDataUpdate\"] = 2] = \"OnDataUpdate\";\n})(LastPriceAnimationMode || (LastPriceAnimationMode = {}));\nfunction precisionByMinMove(minMove) {\n  if (minMove >= 1) {\n    return 0;\n  }\n  let i = 0;\n  for (; i < 8; i++) {\n    const intPart = Math.round(minMove);\n    const fractPart = Math.abs(intPart - minMove);\n    if (fractPart < 1e-8) {\n      return i;\n    }\n    minMove = minMove * 10;\n  }\n  return i;\n}\n/**\n * Represents the source of data to be used for the horizontal price line.\n */\nvar PriceLineSource;\n(function (PriceLineSource) {\n  /**\n   * Use the last bar data.\n   */\n  PriceLineSource[PriceLineSource[\"LastBar\"] = 0] = \"LastBar\";\n  /**\n   * Use the last visible data of the chart viewport.\n   */\n  PriceLineSource[PriceLineSource[\"LastVisible\"] = 1] = \"LastVisible\";\n})(PriceLineSource || (PriceLineSource = {}));\n\n/**\n * Represents a type of color.\n */\nvar ColorType;\n(function (ColorType) {\n  /** Solid color */\n  ColorType[\"Solid\"] = \"solid\";\n  /** Vertical gradient color */\n  ColorType[\"VerticalGradient\"] = \"gradient\";\n})(ColorType || (ColorType = {}));\n\n/**\n * Check if a time value is a business day object.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link BusinessDay} object, false otherwise.\n */\nfunction isBusinessDay(time) {\n  return !isNumber(time) && !isString(time);\n}\n/**\n * Check if a time value is a UTC timestamp number.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link UTCTimestamp} number, false otherwise.\n */\nfunction isUTCTimestamp(time) {\n  return isNumber(time);\n}\nfunction isWhitespaceData(data) {\n  return data.open === undefined && data.value === undefined;\n}\nfunction isFulfilledData(data) {\n  return data.open !== undefined || data.value !== undefined;\n}\n\n/**\n * When you're trying to use the library in server-side context (for instance in SSR)\n * you don't have some browser-specific variables like navigator or window\n * and if the library will use them on the top level of the library\n * the import will fail due ReferenceError\n * thus, this allows use the navigator on the top level and being imported in server-side context as well\n * See issue #446\n */\n// eslint-disable-next-line @typescript-eslint/tslint/config\nconst isRunningOnClientSide = typeof window !== 'undefined';\nfunction isFF() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  return window.navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n}\nfunction isIOS() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  // eslint-disable-next-line deprecation/deprecation\n  return /iPhone|iPad|iPod/.test(window.navigator.platform);\n}\nfunction isChrome() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  return window.chrome !== undefined;\n}\n// Determine whether the browser is running on windows.\nfunction isWindows() {\n  var _a;\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  // more accurate if available\n  if ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.userAgentData) === null || _a === void 0 ? void 0 : _a.platform) {\n    return navigator.userAgentData.platform === 'Windows';\n  }\n  return navigator.userAgent.toLowerCase().indexOf('win') >= 0;\n}\n// Determine whether the browser is Chromium based.\nfunction isChromiumBased() {\n  if (!isRunningOnClientSide) {\n    return false;\n  }\n  if (!navigator.userAgentData) {\n    return false;\n  }\n  return navigator.userAgentData.brands.some(brand => {\n    return brand.brand.includes('Chromium');\n  });\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction warn(msg) {\n  {\n    // eslint-disable-next-line no-console\n    console.warn(msg);\n  }\n}\n\n// on Hi-DPI CSS size * Device Pixel Ratio should be integer to avoid smoothing\n// For chart widget we decrease the size because we must be inside container.\n// For time axis this is not important, since it just affects space for pane widgets\nfunction suggestChartSize(originalSize) {\n  const integerWidth = Math.floor(originalSize.width);\n  const integerHeight = Math.floor(originalSize.height);\n  const width = integerWidth - integerWidth % 2;\n  const height = integerHeight - integerHeight % 2;\n  return size$1({\n    width,\n    height\n  });\n}\nfunction suggestTimeScaleHeight(originalHeight) {\n  return originalHeight + originalHeight % 2;\n}\nfunction suggestPriceScaleWidth(originalWidth) {\n  return originalWidth + originalWidth % 2;\n}\nfunction distanceBetweenPoints(pos1, pos2) {\n  return pos1._internal_position - pos2._internal_position;\n}\nfunction speedPxPerMSec(pos1, pos2, maxSpeed) {\n  const speed = (pos1._internal_position - pos2._internal_position) / (pos1._internal_time - pos2._internal_time);\n  return Math.sign(speed) * Math.min(Math.abs(speed), maxSpeed);\n}\nfunction durationMSec(speed, dumpingCoeff) {\n  const lnDumpingCoeff = Math.log(dumpingCoeff);\n  return Math.log(1 /* Constants.EpsilonDistance */ * lnDumpingCoeff / -speed) / lnDumpingCoeff;\n}\nclass KineticAnimation {\n  constructor(minSpeed, maxSpeed, dumpingCoeff, minMove) {\n    this._private__position1 = null;\n    this._private__position2 = null;\n    this._private__position3 = null;\n    this._private__position4 = null;\n    this._private__animationStartPosition = null;\n    this._private__durationMsecs = 0;\n    this._private__speedPxPerMsec = 0;\n    this._private__minSpeed = minSpeed;\n    this._private__maxSpeed = maxSpeed;\n    this._private__dumpingCoeff = dumpingCoeff;\n    this._private__minMove = minMove;\n  }\n  _internal_addPosition(position, time) {\n    if (this._private__position1 !== null) {\n      if (this._private__position1._internal_time === time) {\n        this._private__position1._internal_position = position;\n        return;\n      }\n      if (Math.abs(this._private__position1._internal_position - position) < this._private__minMove) {\n        return;\n      }\n    }\n    this._private__position4 = this._private__position3;\n    this._private__position3 = this._private__position2;\n    this._private__position2 = this._private__position1;\n    this._private__position1 = {\n      _internal_time: time,\n      _internal_position: position\n    };\n  }\n  _internal_start(position, time) {\n    if (this._private__position1 === null || this._private__position2 === null) {\n      return;\n    }\n    if (time - this._private__position1._internal_time > 50 /* Constants.MaxStartDelay */) {\n      return;\n    }\n    // To calculate all the rest parameters we should calculate the speed af first\n    let totalDistance = 0;\n    const speed1 = speedPxPerMSec(this._private__position1, this._private__position2, this._private__maxSpeed);\n    const distance1 = distanceBetweenPoints(this._private__position1, this._private__position2);\n    // We're calculating weighted average speed\n    // Than more distance for a segment, than more its weight\n    const speedItems = [speed1];\n    const distanceItems = [distance1];\n    totalDistance += distance1;\n    if (this._private__position3 !== null) {\n      const speed2 = speedPxPerMSec(this._private__position2, this._private__position3, this._private__maxSpeed);\n      // stop at this moment if direction of the segment is opposite\n      if (Math.sign(speed2) === Math.sign(speed1)) {\n        const distance2 = distanceBetweenPoints(this._private__position2, this._private__position3);\n        speedItems.push(speed2);\n        distanceItems.push(distance2);\n        totalDistance += distance2;\n        if (this._private__position4 !== null) {\n          const speed3 = speedPxPerMSec(this._private__position3, this._private__position4, this._private__maxSpeed);\n          if (Math.sign(speed3) === Math.sign(speed1)) {\n            const distance3 = distanceBetweenPoints(this._private__position3, this._private__position4);\n            speedItems.push(speed3);\n            distanceItems.push(distance3);\n            totalDistance += distance3;\n          }\n        }\n      }\n    }\n    let resultSpeed = 0;\n    for (let i = 0; i < speedItems.length; ++i) {\n      resultSpeed += distanceItems[i] / totalDistance * speedItems[i];\n    }\n    if (Math.abs(resultSpeed) < this._private__minSpeed) {\n      return;\n    }\n    this._private__animationStartPosition = {\n      _internal_position: position,\n      _internal_time: time\n    };\n    this._private__speedPxPerMsec = resultSpeed;\n    this._private__durationMsecs = durationMSec(Math.abs(resultSpeed), this._private__dumpingCoeff);\n  }\n  _internal_getPosition(time) {\n    const startPosition = ensureNotNull(this._private__animationStartPosition);\n    const durationMsecs = time - startPosition._internal_time;\n    return startPosition._internal_position + this._private__speedPxPerMsec * (Math.pow(this._private__dumpingCoeff, durationMsecs) - 1) / Math.log(this._private__dumpingCoeff);\n  }\n  _internal_finished(time) {\n    return this._private__animationStartPosition === null || this._private__progressDuration(time) === this._private__durationMsecs;\n  }\n  _private__progressDuration(time) {\n    const startPosition = ensureNotNull(this._private__animationStartPosition);\n    const progress = time - startPosition._internal_time;\n    return Math.min(progress, this._private__durationMsecs);\n  }\n}\nfunction createBoundCanvas(parentElement, size) {\n  const doc = ensureNotNull(parentElement.ownerDocument);\n  const canvas = doc.createElement('canvas');\n  parentElement.appendChild(canvas);\n  const binding = bindCanvasElementBitmapSizeTo(canvas, {\n    type: 'device-pixel-content-box',\n    options: {\n      allowResizeObserver: false\n    },\n    transform: (bitmapSize, canvasElementClientSize) => ({\n      width: Math.max(bitmapSize.width, canvasElementClientSize.width),\n      height: Math.max(bitmapSize.height, canvasElementClientSize.height)\n    })\n  });\n  binding.resizeCanvasElement(size);\n  return binding;\n}\nfunction preventScrollByWheelClick(el) {\n  if (!isChrome()) {\n    return;\n  }\n  el.addEventListener('mousedown', e => {\n    if (e.button === 1 /* MouseEventButton.Middle */) {\n      // prevent incorrect scrolling event\n      e.preventDefault();\n      return false;\n    }\n    return undefined;\n  });\n}\n\n// TODO: get rid of a lot of boolean flags, probably we should replace it with some enum\nclass MouseEventHandler {\n  constructor(target, handler, options) {\n    this._private__clickCount = 0;\n    this._private__clickTimeoutId = null;\n    this._private__clickPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n    this._private__tapCount = 0;\n    this._private__tapTimeoutId = null;\n    this._private__tapPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n    this._private__longTapTimeoutId = null;\n    this._private__longTapActive = false;\n    this._private__mouseMoveStartPosition = null;\n    this._private__touchMoveStartPosition = null;\n    this._private__touchMoveExceededManhattanDistance = false;\n    this._private__cancelClick = false;\n    this._private__cancelTap = false;\n    this._private__unsubscribeOutsideMouseEvents = null;\n    this._private__unsubscribeOutsideTouchEvents = null;\n    this._private__unsubscribeMobileSafariEvents = null;\n    this._private__unsubscribeMousemove = null;\n    this._private__unsubscribeRootMouseEvents = null;\n    this._private__unsubscribeRootTouchEvents = null;\n    this._private__startPinchMiddlePoint = null;\n    this._private__startPinchDistance = 0;\n    this._private__pinchPrevented = false;\n    this._private__preventTouchDragProcess = false;\n    this._private__mousePressed = false;\n    this._private__lastTouchEventTimeStamp = 0;\n    // for touchstart/touchmove/touchend events we handle only first touch\n    // i.e. we don't support several active touches at the same time (except pinch event)\n    this._private__activeTouchId = null;\n    // accept all mouse leave events if it's not an iOS device\n    // see _mouseEnterHandler, _mouseMoveHandler, _mouseLeaveHandler\n    this._private__acceptMouseLeave = !isIOS();\n    /**\n     * In Firefox mouse events dont't fire if the mouse position is outside of the browser's border.\n     * To prevent the mouse from hanging while pressed we're subscribing on the mouseleave event of the document element.\n     * We're subscribing on mouseleave, but this event is actually fired on mouseup outside of the browser's border.\n     */\n    this._private__onFirefoxOutsideMouseUp = mouseUpEvent => {\n      this._private__mouseUpHandler(mouseUpEvent);\n    };\n    /**\n     * Safari doesn't fire touchstart/mousedown events on double tap since iOS 13.\n     * There are two possible solutions:\n     * 1) Call preventDefault in touchEnd handler. But it also prevents click event from firing.\n     * 2) Add listener on dblclick event that fires with the preceding mousedown/mouseup.\n     * https://developer.apple.com/forums/thread/125073\n     */\n    this._private__onMobileSafariDoubleClick = dblClickEvent => {\n      if (this._private__firesTouchEvents(dblClickEvent)) {\n        const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n        ++this._private__tapCount;\n        if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n          const {\n            _internal_manhattanDistance: manhattanDistance\n          } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__tapPosition);\n          if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n            this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n          }\n          this._private__resetTapTimeout();\n        }\n      } else {\n        const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n        ++this._private__clickCount;\n        if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n          const {\n            _internal_manhattanDistance: manhattanDistance\n          } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__clickPosition);\n          if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n            this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n          }\n          this._private__resetClickTimeout();\n        }\n      }\n    };\n    this._private__target = target;\n    this._private__handler = handler;\n    this._private__options = options;\n    this._private__init();\n  }\n  _internal_destroy() {\n    if (this._private__unsubscribeOutsideMouseEvents !== null) {\n      this._private__unsubscribeOutsideMouseEvents();\n      this._private__unsubscribeOutsideMouseEvents = null;\n    }\n    if (this._private__unsubscribeOutsideTouchEvents !== null) {\n      this._private__unsubscribeOutsideTouchEvents();\n      this._private__unsubscribeOutsideTouchEvents = null;\n    }\n    if (this._private__unsubscribeMousemove !== null) {\n      this._private__unsubscribeMousemove();\n      this._private__unsubscribeMousemove = null;\n    }\n    if (this._private__unsubscribeRootMouseEvents !== null) {\n      this._private__unsubscribeRootMouseEvents();\n      this._private__unsubscribeRootMouseEvents = null;\n    }\n    if (this._private__unsubscribeRootTouchEvents !== null) {\n      this._private__unsubscribeRootTouchEvents();\n      this._private__unsubscribeRootTouchEvents = null;\n    }\n    if (this._private__unsubscribeMobileSafariEvents !== null) {\n      this._private__unsubscribeMobileSafariEvents();\n      this._private__unsubscribeMobileSafariEvents = null;\n    }\n    this._private__clearLongTapTimeout();\n    this._private__resetClickTimeout();\n  }\n  _private__mouseEnterHandler(enterEvent) {\n    if (this._private__unsubscribeMousemove) {\n      this._private__unsubscribeMousemove();\n    }\n    const boundMouseMoveHandler = this._private__mouseMoveHandler.bind(this);\n    this._private__unsubscribeMousemove = () => {\n      this._private__target.removeEventListener('mousemove', boundMouseMoveHandler);\n    };\n    this._private__target.addEventListener('mousemove', boundMouseMoveHandler);\n    if (this._private__firesTouchEvents(enterEvent)) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(enterEvent);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseEnterEvent);\n    this._private__acceptMouseLeave = true;\n  }\n  _private__resetClickTimeout() {\n    if (this._private__clickTimeoutId !== null) {\n      clearTimeout(this._private__clickTimeoutId);\n    }\n    this._private__clickCount = 0;\n    this._private__clickTimeoutId = null;\n    this._private__clickPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n  }\n  _private__resetTapTimeout() {\n    if (this._private__tapTimeoutId !== null) {\n      clearTimeout(this._private__tapTimeoutId);\n    }\n    this._private__tapCount = 0;\n    this._private__tapTimeoutId = null;\n    this._private__tapPosition = {\n      _internal_x: Number.NEGATIVE_INFINITY,\n      _internal_y: Number.POSITIVE_INFINITY\n    };\n  }\n  _private__mouseMoveHandler(moveEvent) {\n    if (this._private__mousePressed || this._private__touchMoveStartPosition !== null) {\n      return;\n    }\n    if (this._private__firesTouchEvents(moveEvent)) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(moveEvent);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseMoveEvent);\n    this._private__acceptMouseLeave = true;\n  }\n  _private__touchMoveHandler(moveEvent) {\n    const touch = touchWithId(moveEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n    if (touch === null) {\n      return;\n    }\n    this._private__lastTouchEventTimeStamp = eventTimeStamp(moveEvent);\n    if (this._private__startPinchMiddlePoint !== null) {\n      return;\n    }\n    if (this._private__preventTouchDragProcess) {\n      return;\n    }\n    // prevent pinch if move event comes faster than the second touch\n    this._private__pinchPrevented = true;\n    const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(touch), ensureNotNull(this._private__touchMoveStartPosition));\n    const {\n      _internal_xOffset: xOffset,\n      _internal_yOffset: yOffset,\n      _internal_manhattanDistance: manhattanDistance\n    } = moveInfo;\n    if (!this._private__touchMoveExceededManhattanDistance && manhattanDistance < 5 /* Constants.CancelTapManhattanDistance */) {\n      return;\n    }\n    if (!this._private__touchMoveExceededManhattanDistance) {\n      // first time when current position exceeded manhattan distance\n      // vertical drag is more important than horizontal drag\n      // because we scroll the page vertically often than horizontally\n      const correctedXOffset = xOffset * 0.5;\n      // a drag can be only if touch page scroll isn't allowed\n      const isVertDrag = yOffset >= correctedXOffset && !this._private__options._internal_treatVertTouchDragAsPageScroll();\n      const isHorzDrag = correctedXOffset > yOffset && !this._private__options._internal_treatHorzTouchDragAsPageScroll();\n      // if drag event happened then we should revert preventDefault state to original one\n      // and try to process the drag event\n      // else we shouldn't prevent default of the event and ignore processing the drag event\n      if (!isVertDrag && !isHorzDrag) {\n        this._private__preventTouchDragProcess = true;\n      }\n      this._private__touchMoveExceededManhattanDistance = true;\n      // if manhattan distance is more that 5 - we should cancel tap event\n      this._private__cancelTap = true;\n      this._private__clearLongTapTimeout();\n      this._private__resetTapTimeout();\n    }\n    if (!this._private__preventTouchDragProcess) {\n      const compatEvent = this._private__makeCompatEvent(moveEvent, touch);\n      this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchMoveEvent);\n      // we should prevent default in case of touch only\n      // to prevent scroll of the page\n      preventDefault(moveEvent);\n    }\n  }\n  _private__mouseMoveWithDownHandler(moveEvent) {\n    if (moveEvent.button !== 0 /* MouseEventButton.Left */) {\n      return;\n    }\n    const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(moveEvent), ensureNotNull(this._private__mouseMoveStartPosition));\n    const {\n      _internal_manhattanDistance: manhattanDistance\n    } = moveInfo;\n    if (manhattanDistance >= 5 /* Constants.CancelClickManhattanDistance */) {\n      // if manhattan distance is more that 5 - we should cancel click event\n      this._private__cancelClick = true;\n      this._private__resetClickTimeout();\n    }\n    if (this._private__cancelClick) {\n      // if this._cancelClick is true, that means that minimum manhattan distance is already exceeded\n      const compatEvent = this._private__makeCompatEvent(moveEvent);\n      this._private__processMouseEvent(compatEvent, this._private__handler._internal_pressedMouseMoveEvent);\n    }\n  }\n  _private__touchMouseMoveWithDownInfo(currentPosition, startPosition) {\n    const xOffset = Math.abs(startPosition._internal_x - currentPosition._internal_x);\n    const yOffset = Math.abs(startPosition._internal_y - currentPosition._internal_y);\n    const manhattanDistance = xOffset + yOffset;\n    return {\n      _internal_xOffset: xOffset,\n      _internal_yOffset: yOffset,\n      _internal_manhattanDistance: manhattanDistance\n    };\n  }\n  // eslint-disable-next-line complexity\n  _private__touchEndHandler(touchEndEvent) {\n    let touch = touchWithId(touchEndEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n    if (touch === null && touchEndEvent.touches.length === 0) {\n      // something went wrong, somehow we missed the required touchend event\n      // probably the browser has not sent this event\n      touch = touchEndEvent.changedTouches[0];\n    }\n    if (touch === null) {\n      return;\n    }\n    this._private__activeTouchId = null;\n    this._private__lastTouchEventTimeStamp = eventTimeStamp(touchEndEvent);\n    this._private__clearLongTapTimeout();\n    this._private__touchMoveStartPosition = null;\n    if (this._private__unsubscribeRootTouchEvents) {\n      this._private__unsubscribeRootTouchEvents();\n      this._private__unsubscribeRootTouchEvents = null;\n    }\n    const compatEvent = this._private__makeCompatEvent(touchEndEvent, touch);\n    this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchEndEvent);\n    ++this._private__tapCount;\n    if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n      // check that both clicks are near enough\n      const {\n        _internal_manhattanDistance: manhattanDistance\n      } = this._private__touchMouseMoveWithDownInfo(getPosition(touch), this._private__tapPosition);\n      if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n      }\n      this._private__resetTapTimeout();\n    } else {\n      if (!this._private__cancelTap) {\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_tapEvent);\n        // do not fire mouse events if tap handler was executed\n        // prevent click event on new dom element (who appeared after tap)\n        if (this._private__handler._internal_tapEvent) {\n          preventDefault(touchEndEvent);\n        }\n      }\n    }\n    // prevent, for example, safari's dblclick-to-zoom or fast-click after long-tap\n    // we handle mouseDoubleClickEvent here ourselves\n    if (this._private__tapCount === 0) {\n      preventDefault(touchEndEvent);\n    }\n    if (touchEndEvent.touches.length === 0) {\n      if (this._private__longTapActive) {\n        this._private__longTapActive = false;\n        // prevent native click event\n        preventDefault(touchEndEvent);\n      }\n    }\n  }\n  _private__mouseUpHandler(mouseUpEvent) {\n    if (mouseUpEvent.button !== 0 /* MouseEventButton.Left */) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(mouseUpEvent);\n    this._private__mouseMoveStartPosition = null;\n    this._private__mousePressed = false;\n    if (this._private__unsubscribeRootMouseEvents) {\n      this._private__unsubscribeRootMouseEvents();\n      this._private__unsubscribeRootMouseEvents = null;\n    }\n    if (isFF()) {\n      const rootElement = this._private__target.ownerDocument.documentElement;\n      rootElement.removeEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n    }\n    if (this._private__firesTouchEvents(mouseUpEvent)) {\n      return;\n    }\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseUpEvent);\n    ++this._private__clickCount;\n    if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n      // check that both clicks are near enough\n      const {\n        _internal_manhattanDistance: manhattanDistance\n      } = this._private__touchMouseMoveWithDownInfo(getPosition(mouseUpEvent), this._private__clickPosition);\n      if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n      }\n      this._private__resetClickTimeout();\n    } else {\n      if (!this._private__cancelClick) {\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseClickEvent);\n      }\n    }\n  }\n  _private__clearLongTapTimeout() {\n    if (this._private__longTapTimeoutId === null) {\n      return;\n    }\n    clearTimeout(this._private__longTapTimeoutId);\n    this._private__longTapTimeoutId = null;\n  }\n  _private__touchStartHandler(downEvent) {\n    if (this._private__activeTouchId !== null) {\n      return;\n    }\n    const touch = downEvent.changedTouches[0];\n    this._private__activeTouchId = touch.identifier;\n    this._private__lastTouchEventTimeStamp = eventTimeStamp(downEvent);\n    const rootElement = this._private__target.ownerDocument.documentElement;\n    this._private__cancelTap = false;\n    this._private__touchMoveExceededManhattanDistance = false;\n    this._private__preventTouchDragProcess = false;\n    this._private__touchMoveStartPosition = getPosition(touch);\n    if (this._private__unsubscribeRootTouchEvents) {\n      this._private__unsubscribeRootTouchEvents();\n      this._private__unsubscribeRootTouchEvents = null;\n    }\n    {\n      const boundTouchMoveWithDownHandler = this._private__touchMoveHandler.bind(this);\n      const boundTouchEndHandler = this._private__touchEndHandler.bind(this);\n      this._private__unsubscribeRootTouchEvents = () => {\n        rootElement.removeEventListener('touchmove', boundTouchMoveWithDownHandler);\n        rootElement.removeEventListener('touchend', boundTouchEndHandler);\n      };\n      rootElement.addEventListener('touchmove', boundTouchMoveWithDownHandler, {\n        passive: false\n      });\n      rootElement.addEventListener('touchend', boundTouchEndHandler, {\n        passive: false\n      });\n      this._private__clearLongTapTimeout();\n      this._private__longTapTimeoutId = setTimeout(this._private__longTapHandler.bind(this, downEvent), 240 /* Delay.LongTap */);\n    }\n\n    const compatEvent = this._private__makeCompatEvent(downEvent, touch);\n    this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchStartEvent);\n    if (!this._private__tapTimeoutId) {\n      this._private__tapCount = 0;\n      this._private__tapTimeoutId = setTimeout(this._private__resetTapTimeout.bind(this), 500 /* Delay.ResetClick */);\n      this._private__tapPosition = getPosition(touch);\n    }\n  }\n  _private__mouseDownHandler(downEvent) {\n    if (downEvent.button !== 0 /* MouseEventButton.Left */) {\n      return;\n    }\n    const rootElement = this._private__target.ownerDocument.documentElement;\n    if (isFF()) {\n      rootElement.addEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n    }\n    this._private__cancelClick = false;\n    this._private__mouseMoveStartPosition = getPosition(downEvent);\n    if (this._private__unsubscribeRootMouseEvents) {\n      this._private__unsubscribeRootMouseEvents();\n      this._private__unsubscribeRootMouseEvents = null;\n    }\n    {\n      const boundMouseMoveWithDownHandler = this._private__mouseMoveWithDownHandler.bind(this);\n      const boundMouseUpHandler = this._private__mouseUpHandler.bind(this);\n      this._private__unsubscribeRootMouseEvents = () => {\n        rootElement.removeEventListener('mousemove', boundMouseMoveWithDownHandler);\n        rootElement.removeEventListener('mouseup', boundMouseUpHandler);\n      };\n      rootElement.addEventListener('mousemove', boundMouseMoveWithDownHandler);\n      rootElement.addEventListener('mouseup', boundMouseUpHandler);\n    }\n    this._private__mousePressed = true;\n    if (this._private__firesTouchEvents(downEvent)) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(downEvent);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDownEvent);\n    if (!this._private__clickTimeoutId) {\n      this._private__clickCount = 0;\n      this._private__clickTimeoutId = setTimeout(this._private__resetClickTimeout.bind(this), 500 /* Delay.ResetClick */);\n      this._private__clickPosition = getPosition(downEvent);\n    }\n  }\n  _private__init() {\n    this._private__target.addEventListener('mouseenter', this._private__mouseEnterHandler.bind(this));\n    // Do not show context menu when something went wrong\n    this._private__target.addEventListener('touchcancel', this._private__clearLongTapTimeout.bind(this));\n    {\n      const doc = this._private__target.ownerDocument;\n      const outsideHandler = event => {\n        if (!this._private__handler._internal_mouseDownOutsideEvent) {\n          return;\n        }\n        if (event.composed && this._private__target.contains(event.composedPath()[0])) {\n          return;\n        }\n        if (event.target && this._private__target.contains(event.target)) {\n          return;\n        }\n        this._private__handler._internal_mouseDownOutsideEvent();\n      };\n      this._private__unsubscribeOutsideTouchEvents = () => {\n        doc.removeEventListener('touchstart', outsideHandler);\n      };\n      this._private__unsubscribeOutsideMouseEvents = () => {\n        doc.removeEventListener('mousedown', outsideHandler);\n      };\n      doc.addEventListener('mousedown', outsideHandler);\n      doc.addEventListener('touchstart', outsideHandler, {\n        passive: true\n      });\n    }\n    if (isIOS()) {\n      this._private__unsubscribeMobileSafariEvents = () => {\n        this._private__target.removeEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n      };\n      this._private__target.addEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n    }\n    this._private__target.addEventListener('mouseleave', this._private__mouseLeaveHandler.bind(this));\n    this._private__target.addEventListener('touchstart', this._private__touchStartHandler.bind(this), {\n      passive: true\n    });\n    preventScrollByWheelClick(this._private__target);\n    this._private__target.addEventListener('mousedown', this._private__mouseDownHandler.bind(this));\n    this._private__initPinch();\n    // Hey mobile Safari, what's up?\n    // If mobile Safari doesn't have any touchmove handler with passive=false\n    // it treats a touchstart and the following touchmove events as cancelable=false,\n    // so we can't prevent them (as soon we subscribe on touchmove inside touchstart's handler).\n    // And we'll get scroll of the page along with chart's one instead of only chart's scroll.\n    this._private__target.addEventListener('touchmove', () => {}, {\n      passive: false\n    });\n  }\n  _private__initPinch() {\n    if (this._private__handler._internal_pinchStartEvent === undefined && this._private__handler._internal_pinchEvent === undefined && this._private__handler._internal_pinchEndEvent === undefined) {\n      return;\n    }\n    this._private__target.addEventListener('touchstart', event => this._private__checkPinchState(event.touches), {\n      passive: true\n    });\n    this._private__target.addEventListener('touchmove', event => {\n      if (event.touches.length !== 2 || this._private__startPinchMiddlePoint === null) {\n        return;\n      }\n      if (this._private__handler._internal_pinchEvent !== undefined) {\n        const currentDistance = getDistance(event.touches[0], event.touches[1]);\n        const scale = currentDistance / this._private__startPinchDistance;\n        this._private__handler._internal_pinchEvent(this._private__startPinchMiddlePoint, scale);\n        preventDefault(event);\n      }\n    }, {\n      passive: false\n    });\n    this._private__target.addEventListener('touchend', event => {\n      this._private__checkPinchState(event.touches);\n    });\n  }\n  _private__checkPinchState(touches) {\n    if (touches.length === 1) {\n      this._private__pinchPrevented = false;\n    }\n    if (touches.length !== 2 || this._private__pinchPrevented || this._private__longTapActive) {\n      this._private__stopPinch();\n    } else {\n      this._private__startPinch(touches);\n    }\n  }\n  _private__startPinch(touches) {\n    const box = getBoundingClientRect(this._private__target);\n    this._private__startPinchMiddlePoint = {\n      _internal_x: (touches[0].clientX - box.left + (touches[1].clientX - box.left)) / 2,\n      _internal_y: (touches[0].clientY - box.top + (touches[1].clientY - box.top)) / 2\n    };\n    this._private__startPinchDistance = getDistance(touches[0], touches[1]);\n    if (this._private__handler._internal_pinchStartEvent !== undefined) {\n      this._private__handler._internal_pinchStartEvent();\n    }\n    this._private__clearLongTapTimeout();\n  }\n  _private__stopPinch() {\n    if (this._private__startPinchMiddlePoint === null) {\n      return;\n    }\n    this._private__startPinchMiddlePoint = null;\n    if (this._private__handler._internal_pinchEndEvent !== undefined) {\n      this._private__handler._internal_pinchEndEvent();\n    }\n  }\n  _private__mouseLeaveHandler(event) {\n    if (this._private__unsubscribeMousemove) {\n      this._private__unsubscribeMousemove();\n    }\n    if (this._private__firesTouchEvents(event)) {\n      return;\n    }\n    if (!this._private__acceptMouseLeave) {\n      // mobile Safari sometimes emits mouse leave event for no reason, there is no way to handle it in other way\n      // just ignore this event if there was no mouse move or mouse enter events\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(event);\n    this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseLeaveEvent);\n    // accept all mouse leave events if it's not an iOS device\n    this._private__acceptMouseLeave = !isIOS();\n  }\n  _private__longTapHandler(event) {\n    const touch = touchWithId(event.touches, ensureNotNull(this._private__activeTouchId));\n    if (touch === null) {\n      return;\n    }\n    const compatEvent = this._private__makeCompatEvent(event, touch);\n    this._private__processTouchEvent(compatEvent, this._private__handler._internal_longTapEvent);\n    this._private__cancelTap = true;\n    // long tap is active until touchend event with 0 touches occurred\n    this._private__longTapActive = true;\n  }\n  _private__firesTouchEvents(e) {\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents !== undefined) {\n      return e.sourceCapabilities.firesTouchEvents;\n    }\n    return eventTimeStamp(e) < this._private__lastTouchEventTimeStamp + 500 /* Delay.PreventFiresTouchEvents */;\n  }\n\n  _private__processTouchEvent(event, callback) {\n    if (callback) {\n      callback.call(this._private__handler, event);\n    }\n  }\n  _private__processMouseEvent(event, callback) {\n    if (!callback) {\n      return;\n    }\n    callback.call(this._private__handler, event);\n  }\n  _private__makeCompatEvent(event, touch) {\n    // TouchEvent has no clientX/Y coordinates:\n    // We have to use the last Touch instead\n    const eventLike = touch || event;\n    const box = this._private__target.getBoundingClientRect() || {\n      left: 0,\n      top: 0\n    };\n    return {\n      clientX: eventLike.clientX,\n      clientY: eventLike.clientY,\n      pageX: eventLike.pageX,\n      pageY: eventLike.pageY,\n      screenX: eventLike.screenX,\n      screenY: eventLike.screenY,\n      localX: eventLike.clientX - box.left,\n      localY: eventLike.clientY - box.top,\n      ctrlKey: event.ctrlKey,\n      altKey: event.altKey,\n      shiftKey: event.shiftKey,\n      metaKey: event.metaKey,\n      _internal_isTouch: !event.type.startsWith('mouse') && event.type !== 'contextmenu' && event.type !== 'click',\n      _internal_srcType: event.type,\n      _internal_target: eventLike.target,\n      _internal_view: event.view,\n      _internal_preventDefault: () => {\n        if (event.type !== 'touchstart') {\n          // touchstart is passive and cannot be prevented\n          preventDefault(event);\n        }\n      }\n    };\n  }\n}\nfunction getBoundingClientRect(element) {\n  return element.getBoundingClientRect() || {\n    left: 0,\n    top: 0\n  };\n}\nfunction getDistance(p1, p2) {\n  const xDiff = p1.clientX - p2.clientX;\n  const yDiff = p1.clientY - p2.clientY;\n  return Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\nfunction preventDefault(event) {\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n}\nfunction getPosition(eventLike) {\n  return {\n    _internal_x: eventLike.pageX,\n    _internal_y: eventLike.pageY\n  };\n}\nfunction eventTimeStamp(e) {\n  // for some reason e.timestamp is always 0 on iPad with magic mouse, so we use performance.now() as a fallback\n  return e.timeStamp || performance.now();\n}\nfunction touchWithId(touches, id) {\n  for (let i = 0; i < touches.length; ++i) {\n    if (touches[i].identifier === id) {\n      return touches[i];\n    }\n  }\n  return null;\n}\nclass PriceAxisWidget {\n  constructor(pane, options, rendererOptionsProvider, side) {\n    this._private__priceScale = null;\n    this._private__size = null;\n    this._private__mousedown = false;\n    this._private__widthCache = new TextWidthCache(200);\n    this._private__font = null;\n    this._private__prevOptimalWidth = 0;\n    this._private__isSettingSize = false;\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize) {\n        return;\n      }\n      this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n    };\n    this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize) {\n        return;\n      }\n      this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n    };\n    this._private__pane = pane;\n    this._private__options = options;\n    this._private__layoutOptions = options.layout;\n    this._private__rendererOptionsProvider = rendererOptionsProvider;\n    this._private__isLeft = side === 'left';\n    this._private__cell = document.createElement('div');\n    this._private__cell.style.height = '100%';\n    this._private__cell.style.overflow = 'hidden';\n    this._private__cell.style.width = '25px';\n    this._private__cell.style.left = '0';\n    this._private__cell.style.position = 'relative';\n    this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    const canvas = this._private__canvasBinding.canvasElement;\n    canvas.style.position = 'absolute';\n    canvas.style.zIndex = '1';\n    canvas.style.left = '0';\n    canvas.style.top = '0';\n    this._private__topCanvasBinding = createBoundCanvas(this._private__cell, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    const topCanvas = this._private__topCanvasBinding.canvasElement;\n    topCanvas.style.position = 'absolute';\n    topCanvas.style.zIndex = '2';\n    topCanvas.style.left = '0';\n    topCanvas.style.top = '0';\n    const handler = {\n      _internal_mouseDownEvent: this._private__mouseDownEvent.bind(this),\n      _internal_touchStartEvent: this._private__mouseDownEvent.bind(this),\n      _internal_pressedMouseMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n      _internal_touchMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n      _internal_mouseDownOutsideEvent: this._private__mouseDownOutsideEvent.bind(this),\n      _internal_mouseUpEvent: this._private__mouseUpEvent.bind(this),\n      _internal_touchEndEvent: this._private__mouseUpEvent.bind(this),\n      _internal_mouseDoubleClickEvent: this._private__mouseDoubleClickEvent.bind(this),\n      _internal_doubleTapEvent: this._private__mouseDoubleClickEvent.bind(this),\n      _internal_mouseEnterEvent: this._private__mouseEnterEvent.bind(this),\n      _internal_mouseLeaveEvent: this._private__mouseLeaveEvent.bind(this)\n    };\n    this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, handler, {\n      _internal_treatVertTouchDragAsPageScroll: () => false,\n      _internal_treatHorzTouchDragAsPageScroll: () => true\n    });\n  }\n  _internal_destroy() {\n    this._private__mouseEventHandler._internal_destroy();\n    this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    this._private__topCanvasBinding.dispose();\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    this._private__canvasBinding.dispose();\n    if (this._private__priceScale !== null) {\n      this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n    }\n    this._private__priceScale = null;\n  }\n  _internal_getElement() {\n    return this._private__cell;\n  }\n  _internal_fontSize() {\n    return this._private__layoutOptions.fontSize;\n  }\n  _internal_rendererOptions() {\n    const options = this._private__rendererOptionsProvider._internal_options();\n    const isFontChanged = this._private__font !== options._internal_font;\n    if (isFontChanged) {\n      this._private__widthCache._internal_reset();\n      this._private__font = options._internal_font;\n    }\n    return options;\n  }\n  _internal_optimalWidth() {\n    if (this._private__priceScale === null) {\n      return 0;\n    }\n    let tickMarkMaxWidth = 0;\n    const rendererOptions = this._internal_rendererOptions();\n    const ctx = ensureNotNull(this._private__canvasBinding.canvasElement.getContext('2d'));\n    ctx.save();\n    const tickMarks = this._private__priceScale._internal_marks();\n    ctx.font = this._private__baseFont();\n    if (tickMarks.length > 0) {\n      tickMarkMaxWidth = Math.max(this._private__widthCache._internal_measureText(ctx, tickMarks[0]._internal_label), this._private__widthCache._internal_measureText(ctx, tickMarks[tickMarks.length - 1]._internal_label));\n    }\n    const views = this._private__backLabels();\n    for (let j = views.length; j--;) {\n      const width = this._private__widthCache._internal_measureText(ctx, views[j]._internal_text());\n      if (width > tickMarkMaxWidth) {\n        tickMarkMaxWidth = width;\n      }\n    }\n    const firstValue = this._private__priceScale._internal_firstValue();\n    if (firstValue !== null && this._private__size !== null) {\n      const topValue = this._private__priceScale._internal_coordinateToPrice(1, firstValue);\n      const bottomValue = this._private__priceScale._internal_coordinateToPrice(this._private__size.height - 2, firstValue);\n      tickMarkMaxWidth = Math.max(tickMarkMaxWidth, this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.floor(Math.min(topValue, bottomValue)) + 0.11111111111111, firstValue)), this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.ceil(Math.max(topValue, bottomValue)) - 0.11111111111111, firstValue)));\n    }\n    ctx.restore();\n    const resultTickMarksMaxWidth = tickMarkMaxWidth || 34 /* Constants.DefaultOptimalWidth */;\n    const res = Math.ceil(rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingInner + rendererOptions._internal_paddingOuter + 5 /* Constants.LabelOffset */ + resultTickMarksMaxWidth);\n    // make it even, remove this after migration to perfect fancy canvas\n    return suggestPriceScaleWidth(res);\n  }\n  _internal_setSize(newSize) {\n    if (this._private__size === null || !equalSizes(this._private__size, newSize)) {\n      this._private__size = newSize;\n      this._private__isSettingSize = true;\n      this._private__canvasBinding.resizeCanvasElement(newSize);\n      this._private__topCanvasBinding.resizeCanvasElement(newSize);\n      this._private__isSettingSize = false;\n      this._private__cell.style.width = `${newSize.width}px`;\n      this._private__cell.style.height = `${newSize.height}px`;\n    }\n  }\n  _internal_getWidth() {\n    return ensureNotNull(this._private__size).width;\n  }\n  _internal_setPriceScale(priceScale) {\n    if (this._private__priceScale === priceScale) {\n      return;\n    }\n    if (this._private__priceScale !== null) {\n      this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n    }\n    this._private__priceScale = priceScale;\n    priceScale._internal_onMarksChanged()._internal_subscribe(this._private__onMarksChanged.bind(this), this);\n  }\n  _internal_priceScale() {\n    return this._private__priceScale;\n  }\n  _internal_reset() {\n    const pane = this._private__pane._internal_state();\n    const model = this._private__pane._internal_chart()._internal_model();\n    model._internal_resetPriceScale(pane, ensureNotNull(this._internal_priceScale()));\n  }\n  _internal_paint(type) {\n    if (this._private__size === null) {\n      return;\n    }\n    if (type !== 1 /* InvalidationLevel.Cursor */) {\n      this._private__alignLabels();\n      this._private__canvasBinding.applySuggestedBitmapSize();\n      const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n      if (target !== null) {\n        target.useBitmapCoordinateSpace(scope => {\n          this._private__drawBackground(scope);\n          this._private__drawBorder(scope);\n        });\n        this._private__drawTickMarks(target);\n        this._private__drawBackLabels(target);\n      }\n    }\n    this._private__topCanvasBinding.applySuggestedBitmapSize();\n    const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n    if (topTarget !== null) {\n      topTarget.useBitmapCoordinateSpace(({\n        context: ctx,\n        bitmapSize\n      }) => {\n        ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n      });\n      this._private__drawCrosshairLabel(topTarget);\n    }\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _internal_update() {\n    var _a;\n    // this call has side-effect - it regenerates marks on the price scale\n    (_a = this._private__priceScale) === null || _a === void 0 ? void 0 : _a._internal_marks();\n  }\n  _private__mouseDownEvent(e) {\n    if (this._private__priceScale === null || this._private__priceScale._internal_isEmpty() || !this._private__options.handleScale.axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    this._private__mousedown = true;\n    model._internal_startScalePrice(pane, this._private__priceScale, e.localY);\n  }\n  _private__pressedMouseMoveEvent(e) {\n    if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    const priceScale = this._private__priceScale;\n    model._internal_scalePriceTo(pane, priceScale, e.localY);\n  }\n  _private__mouseDownOutsideEvent() {\n    if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    const priceScale = this._private__priceScale;\n    if (this._private__mousedown) {\n      this._private__mousedown = false;\n      model._internal_endScalePrice(pane, priceScale);\n    }\n  }\n  _private__mouseUpEvent(e) {\n    if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const pane = this._private__pane._internal_state();\n    this._private__mousedown = false;\n    model._internal_endScalePrice(pane, this._private__priceScale);\n  }\n  _private__mouseDoubleClickEvent(e) {\n    if (this._private__options.handleScale.axisDoubleClickReset.price) {\n      this._internal_reset();\n    }\n  }\n  _private__mouseEnterEvent(e) {\n    if (this._private__priceScale === null) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    if (model._internal_options().handleScale.axisPressedMouseMove.price && !this._private__priceScale._internal_isPercentage() && !this._private__priceScale._internal_isIndexedTo100()) {\n      this._private__setCursor(1 /* CursorType.NsResize */);\n    }\n  }\n\n  _private__mouseLeaveEvent(e) {\n    this._private__setCursor(0 /* CursorType.Default */);\n  }\n\n  _private__backLabels() {\n    const res = [];\n    const priceScale = this._private__priceScale === null ? undefined : this._private__priceScale;\n    const addViewsForSources = sources => {\n      for (let i = 0; i < sources.length; ++i) {\n        const source = sources[i];\n        const views = source._internal_priceAxisViews(this._private__pane._internal_state(), priceScale);\n        for (let j = 0; j < views.length; j++) {\n          res.push(views[j]);\n        }\n      }\n    };\n    // calculate max and min coordinates for views on selection\n    // crosshair individually\n    addViewsForSources(this._private__pane._internal_state()._internal_orderedSources());\n    return res;\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    const {\n      width,\n      height\n    } = bitmapSize;\n    const model = this._private__pane._internal_state()._internal_model();\n    const topColor = model._internal_backgroundTopColor();\n    const bottomColor = model._internal_backgroundBottomColor();\n    if (topColor === bottomColor) {\n      clearRect(ctx, 0, 0, width, height, topColor);\n    } else {\n      clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n    }\n  }\n  _private__drawBorder({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio\n  }) {\n    if (this._private__size === null || this._private__priceScale === null || !this._private__priceScale._internal_options().borderVisible) {\n      return;\n    }\n    ctx.fillStyle = this._private__priceScale._internal_options().borderColor;\n    const borderSize = Math.max(1, Math.floor(this._internal_rendererOptions()._internal_borderSize * horizontalPixelRatio));\n    let left;\n    if (this._private__isLeft) {\n      left = bitmapSize.width - borderSize;\n    } else {\n      left = 0;\n    }\n    ctx.fillRect(left, 0, borderSize, bitmapSize.height);\n  }\n  _private__drawTickMarks(target) {\n    if (this._private__size === null || this._private__priceScale === null) {\n      return;\n    }\n    const tickMarks = this._private__priceScale._internal_marks();\n    const priceScaleOptions = this._private__priceScale._internal_options();\n    const rendererOptions = this._internal_rendererOptions();\n    const tickMarkLeftX = this._private__isLeft ? this._private__size.width - rendererOptions._internal_tickLength : 0;\n    if (priceScaleOptions.borderVisible && priceScaleOptions.ticksVisible) {\n      target.useBitmapCoordinateSpace(({\n        context: ctx,\n        horizontalPixelRatio,\n        verticalPixelRatio\n      }) => {\n        ctx.fillStyle = priceScaleOptions.borderColor;\n        const tickHeight = Math.max(1, Math.floor(verticalPixelRatio));\n        const tickOffset = Math.floor(verticalPixelRatio * 0.5);\n        const tickLength = Math.round(rendererOptions._internal_tickLength * horizontalPixelRatio);\n        ctx.beginPath();\n        for (const tickMark of tickMarks) {\n          ctx.rect(Math.floor(tickMarkLeftX * horizontalPixelRatio), Math.round(tickMark._internal_coord * verticalPixelRatio) - tickOffset, tickLength, tickHeight);\n        }\n        ctx.fill();\n      });\n    }\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      var _a;\n      ctx.font = this._private__baseFont();\n      ctx.fillStyle = (_a = priceScaleOptions.textColor) !== null && _a !== void 0 ? _a : this._private__layoutOptions.textColor;\n      ctx.textAlign = this._private__isLeft ? 'right' : 'left';\n      ctx.textBaseline = 'middle';\n      const textLeftX = this._private__isLeft ? Math.round(tickMarkLeftX - rendererOptions._internal_paddingInner) : Math.round(tickMarkLeftX + rendererOptions._internal_tickLength + rendererOptions._internal_paddingInner);\n      const yMidCorrections = tickMarks.map(mark => this._private__widthCache._internal_yMidCorrection(ctx, mark._internal_label));\n      for (let i = tickMarks.length; i--;) {\n        const tickMark = tickMarks[i];\n        ctx.fillText(tickMark._internal_label, textLeftX, tickMark._internal_coord + yMidCorrections[i]);\n      }\n    });\n  }\n  _private__alignLabels() {\n    if (this._private__size === null || this._private__priceScale === null) {\n      return;\n    }\n    let center = this._private__size.height / 2;\n    const views = [];\n    const orderedSources = this._private__priceScale._internal_orderedSources().slice(); // Copy of array\n    const pane = this._private__pane;\n    const paneState = pane._internal_state();\n    const rendererOptions = this._internal_rendererOptions();\n    // if we are default price scale, append labels from no-scale\n    const isDefault = this._private__priceScale === paneState._internal_defaultVisiblePriceScale();\n    if (isDefault) {\n      this._private__pane._internal_state()._internal_orderedSources().forEach(source => {\n        if (paneState._internal_isOverlay(source)) {\n          orderedSources.push(source);\n        }\n      });\n    }\n    // we can use any, but let's use the first source as \"center\" one\n    const centerSource = this._private__priceScale._internal_dataSources()[0];\n    const priceScale = this._private__priceScale;\n    const updateForSources = sources => {\n      sources.forEach(source => {\n        const sourceViews = source._internal_priceAxisViews(paneState, priceScale);\n        // never align selected sources\n        sourceViews.forEach(view => {\n          view._internal_setFixedCoordinate(null);\n          if (view._internal_isVisible()) {\n            views.push(view);\n          }\n        });\n        if (centerSource === source && sourceViews.length > 0) {\n          center = sourceViews[0]._internal_coordinate();\n        }\n      });\n    };\n    // crosshair individually\n    updateForSources(orderedSources);\n    views.forEach(view => view._internal_setFixedCoordinate(view._internal_coordinate()));\n    const options = this._private__priceScale._internal_options();\n    if (!options.alignLabels) {\n      return;\n    }\n    this._private__fixLabelOverlap(views, rendererOptions, center);\n  }\n  _private__fixLabelOverlap(views, rendererOptions, center) {\n    if (this._private__size === null) {\n      return;\n    }\n    // split into two parts\n    const top = views.filter(view => view._internal_coordinate() <= center);\n    const bottom = views.filter(view => view._internal_coordinate() > center);\n    // sort top from center to top\n    top.sort((l, r) => r._internal_coordinate() - l._internal_coordinate());\n    // share center label\n    if (top.length && bottom.length) {\n      bottom.push(top[0]);\n    }\n    bottom.sort((l, r) => l._internal_coordinate() - r._internal_coordinate());\n    for (const view of views) {\n      const halfHeight = Math.floor(view._internal_height(rendererOptions) / 2);\n      const coordinate = view._internal_coordinate();\n      if (coordinate > -halfHeight && coordinate < halfHeight) {\n        view._internal_setFixedCoordinate(halfHeight);\n      }\n      if (coordinate > this._private__size.height - halfHeight && coordinate < this._private__size.height + halfHeight) {\n        view._internal_setFixedCoordinate(this._private__size.height - halfHeight);\n      }\n    }\n    for (let i = 1; i < top.length; i++) {\n      const view = top[i];\n      const prev = top[i - 1];\n      const height = prev._internal_height(rendererOptions, false);\n      const coordinate = view._internal_coordinate();\n      const prevFixedCoordinate = prev._internal_getFixedCoordinate();\n      if (coordinate > prevFixedCoordinate - height) {\n        view._internal_setFixedCoordinate(prevFixedCoordinate - height);\n      }\n    }\n    for (let j = 1; j < bottom.length; j++) {\n      const view = bottom[j];\n      const prev = bottom[j - 1];\n      const height = prev._internal_height(rendererOptions, true);\n      const coordinate = view._internal_coordinate();\n      const prevFixedCoordinate = prev._internal_getFixedCoordinate();\n      if (coordinate < prevFixedCoordinate + height) {\n        view._internal_setFixedCoordinate(prevFixedCoordinate + height);\n      }\n    }\n  }\n  _private__drawBackLabels(target) {\n    if (this._private__size === null) {\n      return;\n    }\n    const views = this._private__backLabels();\n    const rendererOptions = this._internal_rendererOptions();\n    const align = this._private__isLeft ? 'right' : 'left';\n    views.forEach(view => {\n      if (view._internal_isAxisLabelVisible()) {\n        const renderer = view._internal_renderer(ensureNotNull(this._private__priceScale));\n        renderer._internal_draw(target, rendererOptions, this._private__widthCache, align);\n      }\n    });\n  }\n  _private__drawCrosshairLabel(target) {\n    if (this._private__size === null || this._private__priceScale === null) {\n      return;\n    }\n    const model = this._private__pane._internal_chart()._internal_model();\n    const views = []; // array of arrays\n    const pane = this._private__pane._internal_state();\n    const v = model._internal_crosshairSource()._internal_priceAxisViews(pane, this._private__priceScale);\n    if (v.length) {\n      views.push(v);\n    }\n    const ro = this._internal_rendererOptions();\n    const align = this._private__isLeft ? 'right' : 'left';\n    views.forEach(arr => {\n      arr.forEach(view => {\n        view._internal_renderer(ensureNotNull(this._private__priceScale))._internal_draw(target, ro, this._private__widthCache, align);\n      });\n    });\n  }\n  _private__setCursor(type) {\n    this._private__cell.style.cursor = type === 1 /* CursorType.NsResize */ ? 'ns-resize' : 'default';\n  }\n  _private__onMarksChanged() {\n    const width = this._internal_optimalWidth();\n    // avoid price scale is shrunk\n    // using < instead !== to avoid infinite changes\n    if (this._private__prevOptimalWidth < width) {\n      this._private__pane._internal_chart()._internal_model()._internal_fullUpdate();\n    }\n    this._private__prevOptimalWidth = width;\n  }\n  _private__baseFont() {\n    return makeFont(this._private__layoutOptions.fontSize, this._private__layoutOptions.fontFamily);\n  }\n}\nfunction drawBackground(renderer, target, isHovered, hitTestData) {\n  if (renderer._internal_drawBackground) {\n    renderer._internal_drawBackground(target, isHovered, hitTestData);\n  }\n}\nfunction drawForeground(renderer, target, isHovered, hitTestData) {\n  renderer._internal_draw(target, isHovered, hitTestData);\n}\nfunction sourcePaneViews(source, pane) {\n  return source._internal_paneViews(pane);\n}\nfunction sourceLabelPaneViews(source, pane) {\n  return source._internal_labelPaneViews(pane);\n}\nfunction sourceTopPaneViews(source, pane) {\n  return source._internal_topPaneViews !== undefined ? source._internal_topPaneViews(pane) : [];\n}\nclass PaneWidget {\n  constructor(chart, state) {\n    this._private__size = size$1({\n      width: 0,\n      height: 0\n    });\n    this._private__leftPriceAxisWidget = null;\n    this._private__rightPriceAxisWidget = null;\n    this._private__startScrollingPos = null;\n    this._private__isScrolling = false;\n    this._private__clicked = new Delegate();\n    this._private__prevPinchScale = 0;\n    this._private__longTap = false;\n    this._private__startTrackPoint = null;\n    this._private__exitTrackingModeOnNextTry = false;\n    this._private__initCrosshairPosition = null;\n    this._private__scrollXAnimation = null;\n    this._private__isSettingSize = false;\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize || this._private__state === null) {\n        return;\n      }\n      this._private__model()._internal_lightUpdate();\n    };\n    this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n      if (this._private__isSettingSize || this._private__state === null) {\n        return;\n      }\n      this._private__model()._internal_lightUpdate();\n    };\n    this._private__chart = chart;\n    this._private__state = state;\n    this._private__state._internal_onDestroyed()._internal_subscribe(this._private__onStateDestroyed.bind(this), this, true);\n    this._private__paneCell = document.createElement('td');\n    this._private__paneCell.style.padding = '0';\n    this._private__paneCell.style.position = 'relative';\n    const paneWrapper = document.createElement('div');\n    paneWrapper.style.width = '100%';\n    paneWrapper.style.height = '100%';\n    paneWrapper.style.position = 'relative';\n    paneWrapper.style.overflow = 'hidden';\n    this._private__leftAxisCell = document.createElement('td');\n    this._private__leftAxisCell.style.padding = '0';\n    this._private__rightAxisCell = document.createElement('td');\n    this._private__rightAxisCell.style.padding = '0';\n    this._private__paneCell.appendChild(paneWrapper);\n    this._private__canvasBinding = createBoundCanvas(paneWrapper, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    const canvas = this._private__canvasBinding.canvasElement;\n    canvas.style.position = 'absolute';\n    canvas.style.zIndex = '1';\n    canvas.style.left = '0';\n    canvas.style.top = '0';\n    this._private__topCanvasBinding = createBoundCanvas(paneWrapper, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    const topCanvas = this._private__topCanvasBinding.canvasElement;\n    topCanvas.style.position = 'absolute';\n    topCanvas.style.zIndex = '2';\n    topCanvas.style.left = '0';\n    topCanvas.style.top = '0';\n    this._private__rowElement = document.createElement('tr');\n    this._private__rowElement.appendChild(this._private__leftAxisCell);\n    this._private__rowElement.appendChild(this._private__paneCell);\n    this._private__rowElement.appendChild(this._private__rightAxisCell);\n    this._internal_updatePriceAxisWidgetsStates();\n    this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n      _internal_treatVertTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options().handleScroll.vertTouchDrag,\n      _internal_treatHorzTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options().handleScroll.horzTouchDrag\n    });\n  }\n  _internal_destroy() {\n    if (this._private__leftPriceAxisWidget !== null) {\n      this._private__leftPriceAxisWidget._internal_destroy();\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      this._private__rightPriceAxisWidget._internal_destroy();\n    }\n    this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    this._private__topCanvasBinding.dispose();\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    this._private__canvasBinding.dispose();\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n    }\n    this._private__mouseEventHandler._internal_destroy();\n  }\n  _internal_state() {\n    return ensureNotNull(this._private__state);\n  }\n  _internal_setState(pane) {\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n    }\n    this._private__state = pane;\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_subscribe(PaneWidget.prototype._private__onStateDestroyed.bind(this), this, true);\n    }\n    this._internal_updatePriceAxisWidgetsStates();\n  }\n  _internal_chart() {\n    return this._private__chart;\n  }\n  _internal_getElement() {\n    return this._private__rowElement;\n  }\n  _internal_updatePriceAxisWidgetsStates() {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__recreatePriceAxisWidgets();\n    if (this._private__model()._internal_serieses().length === 0) {\n      return;\n    }\n    if (this._private__leftPriceAxisWidget !== null) {\n      const leftPriceScale = this._private__state._internal_leftPriceScale();\n      this._private__leftPriceAxisWidget._internal_setPriceScale(ensureNotNull(leftPriceScale));\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      const rightPriceScale = this._private__state._internal_rightPriceScale();\n      this._private__rightPriceAxisWidget._internal_setPriceScale(ensureNotNull(rightPriceScale));\n    }\n  }\n  _internal_updatePriceAxisWidgets() {\n    if (this._private__leftPriceAxisWidget !== null) {\n      this._private__leftPriceAxisWidget._internal_update();\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      this._private__rightPriceAxisWidget._internal_update();\n    }\n  }\n  _internal_stretchFactor() {\n    return this._private__state !== null ? this._private__state._internal_stretchFactor() : 0;\n  }\n  _internal_setStretchFactor(stretchFactor) {\n    if (this._private__state) {\n      this._private__state._internal_setStretchFactor(stretchFactor);\n    }\n  }\n  _internal_mouseEnterEvent(event) {\n    if (!this._private__state) {\n      return;\n    }\n    this._private__onMouseEvent();\n    const x = event.localX;\n    const y = event.localY;\n    this._private__setCrosshairPosition(x, y, event);\n  }\n  _internal_mouseDownEvent(event) {\n    this._private__onMouseEvent();\n    this._private__mouseTouchDownEvent();\n    this._private__setCrosshairPosition(event.localX, event.localY, event);\n  }\n  _internal_mouseMoveEvent(event) {\n    if (!this._private__state) {\n      return;\n    }\n    this._private__onMouseEvent();\n    const x = event.localX;\n    const y = event.localY;\n    this._private__setCrosshairPosition(x, y, event);\n    const hitTest = this._internal_hitTest(x, y);\n    this._private__model()._internal_setHoveredSource(hitTest && {\n      _internal_source: hitTest._internal_source,\n      _internal_object: hitTest._internal_object\n    });\n  }\n  _internal_mouseClickEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__onMouseEvent();\n    this._private__fireClickedDelegate(event);\n  }\n  _internal_pressedMouseMoveEvent(event) {\n    this._private__onMouseEvent();\n    this._private__pressedMouseTouchMoveEvent(event);\n    this._private__setCrosshairPosition(event.localX, event.localY, event);\n  }\n  _internal_mouseUpEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__onMouseEvent();\n    this._private__longTap = false;\n    this._private__endScroll(event);\n  }\n  _internal_tapEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__fireClickedDelegate(event);\n  }\n  _internal_longTapEvent(event) {\n    this._private__longTap = true;\n    if (this._private__startTrackPoint === null) {\n      const point = {\n        x: event.localX,\n        y: event.localY\n      };\n      this._private__startTrackingMode(point, point, event);\n    }\n  }\n  _internal_mouseLeaveEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    this._private__onMouseEvent();\n    this._private__state._internal_model()._internal_setHoveredSource(null);\n    this._private__clearCrosshairPosition();\n  }\n  _internal_clicked() {\n    return this._private__clicked;\n  }\n  _internal_pinchStartEvent() {\n    this._private__prevPinchScale = 1;\n    this._private__model()._internal_stopTimeScaleAnimation();\n  }\n  _internal_pinchEvent(middlePoint, scale) {\n    if (!this._private__chart._internal_options().handleScale.pinch) {\n      return;\n    }\n    const zoomScale = (scale - this._private__prevPinchScale) * 5;\n    this._private__prevPinchScale = scale;\n    this._private__model()._internal_zoomTime(middlePoint._internal_x, zoomScale);\n  }\n  _internal_touchStartEvent(event) {\n    this._private__longTap = false;\n    this._private__exitTrackingModeOnNextTry = this._private__startTrackPoint !== null;\n    this._private__mouseTouchDownEvent();\n    if (this._private__startTrackPoint !== null) {\n      const crosshair = this._private__model()._internal_crosshairSource();\n      this._private__initCrosshairPosition = {\n        x: crosshair._internal_appliedX(),\n        y: crosshair._internal_appliedY()\n      };\n      this._private__startTrackPoint = {\n        x: event.localX,\n        y: event.localY\n      };\n    }\n  }\n  _internal_touchMoveEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    const x = event.localX;\n    const y = event.localY;\n    if (this._private__startTrackPoint !== null) {\n      // tracking mode: move crosshair\n      this._private__exitTrackingModeOnNextTry = false;\n      const origPoint = ensureNotNull(this._private__initCrosshairPosition);\n      const newX = origPoint.x + (x - this._private__startTrackPoint.x);\n      const newY = origPoint.y + (y - this._private__startTrackPoint.y);\n      this._private__setCrosshairPosition(newX, newY, event);\n      return;\n    }\n    this._private__pressedMouseTouchMoveEvent(event);\n  }\n  _internal_touchEndEvent(event) {\n    if (this._internal_chart()._internal_options().trackingMode.exitMode === 0 /* TrackingModeExitMode.OnTouchEnd */) {\n      this._private__exitTrackingModeOnNextTry = true;\n    }\n    this._private__tryExitTrackingMode();\n    this._private__endScroll(event);\n  }\n  _internal_hitTest(x, y) {\n    const state = this._private__state;\n    if (state === null) {\n      return null;\n    }\n    const sources = state._internal_orderedSources();\n    for (const source of sources) {\n      const sourceResult = this._private__hitTestPaneView(source._internal_paneViews(state), x, y);\n      if (sourceResult !== null) {\n        return {\n          _internal_source: source,\n          _internal_view: sourceResult._internal_view,\n          _internal_object: sourceResult._internal_object\n        };\n      }\n    }\n    return null;\n  }\n  _internal_setPriceAxisSize(width, position) {\n    const priceAxisWidget = position === 'left' ? this._private__leftPriceAxisWidget : this._private__rightPriceAxisWidget;\n    ensureNotNull(priceAxisWidget)._internal_setSize(size$1({\n      width,\n      height: this._private__size.height\n    }));\n  }\n  _internal_getSize() {\n    return this._private__size;\n  }\n  _internal_setSize(newSize) {\n    if (equalSizes(this._private__size, newSize)) {\n      return;\n    }\n    this._private__size = newSize;\n    this._private__isSettingSize = true;\n    this._private__canvasBinding.resizeCanvasElement(newSize);\n    this._private__topCanvasBinding.resizeCanvasElement(newSize);\n    this._private__isSettingSize = false;\n    this._private__paneCell.style.width = newSize.width + 'px';\n    this._private__paneCell.style.height = newSize.height + 'px';\n  }\n  _internal_recalculatePriceScales() {\n    const pane = ensureNotNull(this._private__state);\n    pane._internal_recalculatePriceScale(pane._internal_leftPriceScale());\n    pane._internal_recalculatePriceScale(pane._internal_rightPriceScale());\n    for (const source of pane._internal_dataSources()) {\n      if (pane._internal_isOverlay(source)) {\n        const priceScale = source._internal_priceScale();\n        if (priceScale !== null) {\n          pane._internal_recalculatePriceScale(priceScale);\n        }\n        // for overlay drawings price scale is owner's price scale\n        // however owner's price scale could not contain ds\n        source._internal_updateAllViews();\n      }\n    }\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _internal_paint(type) {\n    if (type === 0 /* InvalidationLevel.None */) {\n      return;\n    }\n    if (this._private__state === null) {\n      return;\n    }\n    if (type > 1 /* InvalidationLevel.Cursor */) {\n      this._internal_recalculatePriceScales();\n    }\n    if (this._private__leftPriceAxisWidget !== null) {\n      this._private__leftPriceAxisWidget._internal_paint(type);\n    }\n    if (this._private__rightPriceAxisWidget !== null) {\n      this._private__rightPriceAxisWidget._internal_paint(type);\n    }\n    if (type !== 1 /* InvalidationLevel.Cursor */) {\n      this._private__canvasBinding.applySuggestedBitmapSize();\n      const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n      if (target !== null) {\n        target.useBitmapCoordinateSpace(scope => {\n          this._private__drawBackground(scope);\n        });\n        if (this._private__state) {\n          this._private__drawGrid(target);\n          this._private__drawWatermark(target);\n          this._private__drawSources(target, sourcePaneViews);\n          this._private__drawSources(target, sourceLabelPaneViews);\n        }\n      }\n    }\n    this._private__topCanvasBinding.applySuggestedBitmapSize();\n    const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n    if (topTarget !== null) {\n      topTarget.useBitmapCoordinateSpace(({\n        context: ctx,\n        bitmapSize\n      }) => {\n        ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n      });\n      this._private__drawSources(topTarget, sourceTopPaneViews);\n      this._private__drawCrosshair(topTarget);\n    }\n  }\n  _internal_leftPriceAxisWidget() {\n    return this._private__leftPriceAxisWidget;\n  }\n  _internal_rightPriceAxisWidget() {\n    return this._private__rightPriceAxisWidget;\n  }\n  _private__onStateDestroyed() {\n    if (this._private__state !== null) {\n      this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n    }\n    this._private__state = null;\n  }\n  _private__fireClickedDelegate(event) {\n    const x = event.localX;\n    const y = event.localY;\n    if (this._private__clicked._internal_hasListeners()) {\n      this._private__clicked._internal_fire(this._private__model()._internal_timeScale()._internal_coordinateToIndex(x), {\n        x,\n        y\n      }, event);\n    }\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    const {\n      width,\n      height\n    } = bitmapSize;\n    const model = this._private__model();\n    const topColor = model._internal_backgroundTopColor();\n    const bottomColor = model._internal_backgroundBottomColor();\n    if (topColor === bottomColor) {\n      clearRect(ctx, 0, 0, width, height, bottomColor);\n    } else {\n      clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n    }\n  }\n  _private__drawGrid(target) {\n    const state = ensureNotNull(this._private__state);\n    const paneView = state._internal_grid()._internal_paneView();\n    const renderer = paneView._internal_renderer();\n    if (renderer !== null) {\n      renderer._internal_draw(target, false);\n    }\n  }\n  _private__drawWatermark(target) {\n    const source = this._private__model()._internal_watermarkSource();\n    this._private__drawSourceImpl(target, sourcePaneViews, drawBackground, source);\n    this._private__drawSourceImpl(target, sourcePaneViews, drawForeground, source);\n  }\n  _private__drawCrosshair(target) {\n    this._private__drawSourceImpl(target, sourcePaneViews, drawForeground, this._private__model()._internal_crosshairSource());\n  }\n  _private__drawSources(target, paneViewsGetter) {\n    const state = ensureNotNull(this._private__state);\n    const sources = state._internal_orderedSources();\n    for (const source of sources) {\n      this._private__drawSourceImpl(target, paneViewsGetter, drawBackground, source);\n    }\n    for (const source of sources) {\n      this._private__drawSourceImpl(target, paneViewsGetter, drawForeground, source);\n    }\n  }\n  _private__drawSourceImpl(target, paneViewsGetter, drawFn, source) {\n    const state = ensureNotNull(this._private__state);\n    const paneViews = paneViewsGetter(source, state);\n    const hoveredSource = state._internal_model()._internal_hoveredSource();\n    const isHovered = hoveredSource !== null && hoveredSource._internal_source === source;\n    const objecId = hoveredSource !== null && isHovered && hoveredSource._internal_object !== undefined ? hoveredSource._internal_object._internal_hitTestData : undefined;\n    for (const paneView of paneViews) {\n      const renderer = paneView._internal_renderer();\n      if (renderer !== null) {\n        drawFn(renderer, target, isHovered, objecId);\n      }\n    }\n  }\n  _private__hitTestPaneView(paneViews, x, y) {\n    for (const paneView of paneViews) {\n      const renderer = paneView._internal_renderer();\n      if (renderer !== null && renderer._internal_hitTest) {\n        const result = renderer._internal_hitTest(x, y);\n        if (result !== null) {\n          return {\n            _internal_view: paneView,\n            _internal_object: result\n          };\n        }\n      }\n    }\n    return null;\n  }\n  _private__recreatePriceAxisWidgets() {\n    if (this._private__state === null) {\n      return;\n    }\n    const chart = this._private__chart;\n    const leftAxisVisible = this._private__state._internal_leftPriceScale()._internal_options().visible;\n    const rightAxisVisible = this._private__state._internal_rightPriceScale()._internal_options().visible;\n    if (!leftAxisVisible && this._private__leftPriceAxisWidget !== null) {\n      this._private__leftAxisCell.removeChild(this._private__leftPriceAxisWidget._internal_getElement());\n      this._private__leftPriceAxisWidget._internal_destroy();\n      this._private__leftPriceAxisWidget = null;\n    }\n    if (!rightAxisVisible && this._private__rightPriceAxisWidget !== null) {\n      this._private__rightAxisCell.removeChild(this._private__rightPriceAxisWidget._internal_getElement());\n      this._private__rightPriceAxisWidget._internal_destroy();\n      this._private__rightPriceAxisWidget = null;\n    }\n    const rendererOptionsProvider = chart._internal_model()._internal_rendererOptionsProvider();\n    if (leftAxisVisible && this._private__leftPriceAxisWidget === null) {\n      this._private__leftPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'left');\n      this._private__leftAxisCell.appendChild(this._private__leftPriceAxisWidget._internal_getElement());\n    }\n    if (rightAxisVisible && this._private__rightPriceAxisWidget === null) {\n      this._private__rightPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'right');\n      this._private__rightAxisCell.appendChild(this._private__rightPriceAxisWidget._internal_getElement());\n    }\n  }\n  _private__preventScroll(event) {\n    return event._internal_isTouch && this._private__longTap || this._private__startTrackPoint !== null;\n  }\n  _private__correctXCoord(x) {\n    return Math.max(0, Math.min(x, this._private__size.width - 1));\n  }\n  _private__correctYCoord(y) {\n    return Math.max(0, Math.min(y, this._private__size.height - 1));\n  }\n  _private__setCrosshairPosition(x, y, event) {\n    this._private__model()._internal_setAndSaveCurrentPosition(this._private__correctXCoord(x), this._private__correctYCoord(y), event, ensureNotNull(this._private__state));\n  }\n  _private__clearCrosshairPosition() {\n    this._private__model()._internal_clearCurrentPosition();\n  }\n  _private__tryExitTrackingMode() {\n    if (this._private__exitTrackingModeOnNextTry) {\n      this._private__startTrackPoint = null;\n      this._private__clearCrosshairPosition();\n    }\n  }\n  _private__startTrackingMode(startTrackPoint, crossHairPosition, event) {\n    this._private__startTrackPoint = startTrackPoint;\n    this._private__exitTrackingModeOnNextTry = false;\n    this._private__setCrosshairPosition(crossHairPosition.x, crossHairPosition.y, event);\n    const crosshair = this._private__model()._internal_crosshairSource();\n    this._private__initCrosshairPosition = {\n      x: crosshair._internal_appliedX(),\n      y: crosshair._internal_appliedY()\n    };\n  }\n  _private__model() {\n    return this._private__chart._internal_model();\n  }\n  _private__endScroll(event) {\n    if (!this._private__isScrolling) {\n      return;\n    }\n    const model = this._private__model();\n    const state = this._internal_state();\n    model._internal_endScrollPrice(state, state._internal_defaultPriceScale());\n    this._private__startScrollingPos = null;\n    this._private__isScrolling = false;\n    model._internal_endScrollTime();\n    if (this._private__scrollXAnimation !== null) {\n      const startAnimationTime = performance.now();\n      const timeScale = model._internal_timeScale();\n      this._private__scrollXAnimation._internal_start(timeScale._internal_rightOffset(), startAnimationTime);\n      if (!this._private__scrollXAnimation._internal_finished(startAnimationTime)) {\n        model._internal_setTimeScaleAnimation(this._private__scrollXAnimation);\n      }\n    }\n  }\n  _private__onMouseEvent() {\n    this._private__startTrackPoint = null;\n  }\n  _private__mouseTouchDownEvent() {\n    if (!this._private__state) {\n      return;\n    }\n    this._private__model()._internal_stopTimeScaleAnimation();\n    if (document.activeElement !== document.body && document.activeElement !== document.documentElement) {\n      // If any focusable element except the page itself is focused, remove the focus\n      ensureNotNull(document.activeElement).blur();\n    } else {\n      // Clear selection\n      const selection = document.getSelection();\n      if (selection !== null) {\n        selection.removeAllRanges();\n      }\n    }\n    const priceScale = this._private__state._internal_defaultPriceScale();\n    if (priceScale._internal_isEmpty() || this._private__model()._internal_timeScale()._internal_isEmpty()) {\n      return;\n    }\n  }\n  // eslint-disable-next-line complexity\n  _private__pressedMouseTouchMoveEvent(event) {\n    if (this._private__state === null) {\n      return;\n    }\n    const model = this._private__model();\n    const timeScale = model._internal_timeScale();\n    if (timeScale._internal_isEmpty()) {\n      return;\n    }\n    const chartOptions = this._private__chart._internal_options();\n    const scrollOptions = chartOptions.handleScroll;\n    const kineticScrollOptions = chartOptions.kineticScroll;\n    if ((!scrollOptions.pressedMouseMove || event._internal_isTouch) && (!scrollOptions.horzTouchDrag && !scrollOptions.vertTouchDrag || !event._internal_isTouch)) {\n      return;\n    }\n    const priceScale = this._private__state._internal_defaultPriceScale();\n    const now = performance.now();\n    if (this._private__startScrollingPos === null && !this._private__preventScroll(event)) {\n      this._private__startScrollingPos = {\n        x: event.clientX,\n        y: event.clientY,\n        _internal_timestamp: now,\n        _internal_localX: event.localX,\n        _internal_localY: event.localY\n      };\n    }\n    if (this._private__startScrollingPos !== null && !this._private__isScrolling && (this._private__startScrollingPos.x !== event.clientX || this._private__startScrollingPos.y !== event.clientY)) {\n      if (event._internal_isTouch && kineticScrollOptions.touch || !event._internal_isTouch && kineticScrollOptions.mouse) {\n        const barSpacing = timeScale._internal_barSpacing();\n        this._private__scrollXAnimation = new KineticAnimation(0.2 /* KineticScrollConstants.MinScrollSpeed */ / barSpacing, 7 /* KineticScrollConstants.MaxScrollSpeed */ / barSpacing, 0.997 /* KineticScrollConstants.DumpingCoeff */, 15 /* KineticScrollConstants.ScrollMinMove */ / barSpacing);\n        this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), this._private__startScrollingPos._internal_timestamp);\n      } else {\n        this._private__scrollXAnimation = null;\n      }\n      if (!priceScale._internal_isEmpty()) {\n        model._internal_startScrollPrice(this._private__state, priceScale, event.localY);\n      }\n      model._internal_startScrollTime(event.localX);\n      this._private__isScrolling = true;\n    }\n    if (this._private__isScrolling) {\n      // this allows scrolling not default price scales\n      if (!priceScale._internal_isEmpty()) {\n        model._internal_scrollPriceTo(this._private__state, priceScale, event.localY);\n      }\n      model._internal_scrollTimeTo(event.localX);\n      if (this._private__scrollXAnimation !== null) {\n        this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), now);\n      }\n    }\n  }\n}\nclass PriceAxisStub {\n  constructor(side, options, params, borderVisible, bottomColor) {\n    this._private__invalidated = true;\n    this._private__size = size$1({\n      width: 0,\n      height: 0\n    });\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => this._internal_paint(3 /* InvalidationLevel.Full */);\n    this._private__isLeft = side === 'left';\n    this._private__rendererOptionsProvider = params._internal_rendererOptionsProvider;\n    this._private__options = options;\n    this._private__borderVisible = borderVisible;\n    this._private__bottomColor = bottomColor;\n    this._private__cell = document.createElement('div');\n    this._private__cell.style.width = '25px';\n    this._private__cell.style.height = '100%';\n    this._private__cell.style.overflow = 'hidden';\n    this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n  }\n  _internal_destroy() {\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    this._private__canvasBinding.dispose();\n  }\n  _internal_getElement() {\n    return this._private__cell;\n  }\n  _internal_getSize() {\n    return this._private__size;\n  }\n  _internal_setSize(newSize) {\n    if (!equalSizes(this._private__size, newSize)) {\n      this._private__size = newSize;\n      this._private__canvasBinding.resizeCanvasElement(newSize);\n      this._private__cell.style.width = `${newSize.width}px`;\n      this._private__cell.style.height = `${newSize.height}px`;\n      this._private__invalidated = true;\n    }\n  }\n  _internal_paint(type) {\n    if (type < 3 /* InvalidationLevel.Full */ && !this._private__invalidated) {\n      return;\n    }\n    if (this._private__size.width === 0 || this._private__size.height === 0) {\n      return;\n    }\n    this._private__invalidated = false;\n    this._private__canvasBinding.applySuggestedBitmapSize();\n    const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n    if (target !== null) {\n      target.useBitmapCoordinateSpace(scope => {\n        this._private__drawBackground(scope);\n        this._private__drawBorder(scope);\n      });\n    }\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _private__drawBorder({\n    context: ctx,\n    bitmapSize,\n    horizontalPixelRatio,\n    verticalPixelRatio\n  }) {\n    if (!this._private__borderVisible()) {\n      return;\n    }\n    ctx.fillStyle = this._private__options.timeScale.borderColor;\n    const horzBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * horizontalPixelRatio);\n    const vertBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * verticalPixelRatio);\n    const left = this._private__isLeft ? bitmapSize.width - horzBorderSize : 0;\n    ctx.fillRect(left, 0, horzBorderSize, vertBorderSize);\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__bottomColor());\n  }\n}\nfunction markWithGreaterWeight(a, b) {\n  return a._internal_weight > b._internal_weight ? a : b;\n}\nclass TimeAxisWidget {\n  constructor(chartWidget) {\n    this._private__leftStub = null;\n    this._private__rightStub = null;\n    this._private__rendererOptions = null;\n    this._private__mouseDown = false;\n    this._private__size = size$1({\n      width: 0,\n      height: 0\n    });\n    this._private__sizeChanged = new Delegate();\n    this._private__widthCache = new TextWidthCache(5);\n    this._private__isSettingSize = false;\n    this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n      if (!this._private__isSettingSize) {\n        this._private__chart._internal_model()._internal_lightUpdate();\n      }\n    };\n    this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n      if (!this._private__isSettingSize) {\n        this._private__chart._internal_model()._internal_lightUpdate();\n      }\n    };\n    this._private__chart = chartWidget;\n    this._private__options = chartWidget._internal_options().layout;\n    this._private__element = document.createElement('tr');\n    this._private__leftStubCell = document.createElement('td');\n    this._private__leftStubCell.style.padding = '0';\n    this._private__rightStubCell = document.createElement('td');\n    this._private__rightStubCell.style.padding = '0';\n    this._private__cell = document.createElement('td');\n    this._private__cell.style.height = '25px';\n    this._private__cell.style.padding = '0';\n    this._private__dv = document.createElement('div');\n    this._private__dv.style.width = '100%';\n    this._private__dv.style.height = '100%';\n    this._private__dv.style.position = 'relative';\n    this._private__dv.style.overflow = 'hidden';\n    this._private__cell.appendChild(this._private__dv);\n    this._private__canvasBinding = createBoundCanvas(this._private__dv, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    const canvas = this._private__canvasBinding.canvasElement;\n    canvas.style.position = 'absolute';\n    canvas.style.zIndex = '1';\n    canvas.style.left = '0';\n    canvas.style.top = '0';\n    this._private__topCanvasBinding = createBoundCanvas(this._private__dv, size$1({\n      width: 16,\n      height: 16\n    }));\n    this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    const topCanvas = this._private__topCanvasBinding.canvasElement;\n    topCanvas.style.position = 'absolute';\n    topCanvas.style.zIndex = '2';\n    topCanvas.style.left = '0';\n    topCanvas.style.top = '0';\n    this._private__element.appendChild(this._private__leftStubCell);\n    this._private__element.appendChild(this._private__cell);\n    this._private__element.appendChild(this._private__rightStubCell);\n    this._private__recreateStubs();\n    this._private__chart._internal_model()._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__recreateStubs.bind(this), this);\n    this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n      _internal_treatVertTouchDragAsPageScroll: () => true,\n      _internal_treatHorzTouchDragAsPageScroll: () => false\n    });\n  }\n  _internal_destroy() {\n    this._private__mouseEventHandler._internal_destroy();\n    if (this._private__leftStub !== null) {\n      this._private__leftStub._internal_destroy();\n    }\n    if (this._private__rightStub !== null) {\n      this._private__rightStub._internal_destroy();\n    }\n    this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n    this._private__topCanvasBinding.dispose();\n    this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    this._private__canvasBinding.dispose();\n  }\n  _internal_getElement() {\n    return this._private__element;\n  }\n  _internal_leftStub() {\n    return this._private__leftStub;\n  }\n  _internal_rightStub() {\n    return this._private__rightStub;\n  }\n  _internal_mouseDownEvent(event) {\n    if (this._private__mouseDown) {\n      return;\n    }\n    this._private__mouseDown = true;\n    const model = this._private__chart._internal_model();\n    if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n      return;\n    }\n    model._internal_startScaleTime(event.localX);\n  }\n  _internal_touchStartEvent(event) {\n    this._internal_mouseDownEvent(event);\n  }\n  _internal_mouseDownOutsideEvent() {\n    const model = this._private__chart._internal_model();\n    if (!model._internal_timeScale()._internal_isEmpty() && this._private__mouseDown) {\n      this._private__mouseDown = false;\n      if (this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n        model._internal_endScaleTime();\n      }\n    }\n  }\n  _internal_pressedMouseMoveEvent(event) {\n    const model = this._private__chart._internal_model();\n    if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n      return;\n    }\n    model._internal_scaleTimeTo(event.localX);\n  }\n  _internal_touchMoveEvent(event) {\n    this._internal_pressedMouseMoveEvent(event);\n  }\n  _internal_mouseUpEvent() {\n    this._private__mouseDown = false;\n    const model = this._private__chart._internal_model();\n    if (model._internal_timeScale()._internal_isEmpty() && !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n      return;\n    }\n    model._internal_endScaleTime();\n  }\n  _internal_touchEndEvent() {\n    this._internal_mouseUpEvent();\n  }\n  _internal_mouseDoubleClickEvent() {\n    if (this._private__chart._internal_options().handleScale.axisDoubleClickReset.time) {\n      this._private__chart._internal_model()._internal_resetTimeScale();\n    }\n  }\n  _internal_doubleTapEvent() {\n    this._internal_mouseDoubleClickEvent();\n  }\n  _internal_mouseEnterEvent() {\n    if (this._private__chart._internal_model()._internal_options().handleScale.axisPressedMouseMove.time) {\n      this._private__setCursor(1 /* CursorType.EwResize */);\n    }\n  }\n\n  _internal_mouseLeaveEvent() {\n    this._private__setCursor(0 /* CursorType.Default */);\n  }\n\n  _internal_getSize() {\n    return this._private__size;\n  }\n  _internal_sizeChanged() {\n    return this._private__sizeChanged;\n  }\n  _internal_setSizes(timeAxisSize, leftStubWidth, rightStubWidth) {\n    if (!equalSizes(this._private__size, timeAxisSize)) {\n      this._private__size = timeAxisSize;\n      this._private__isSettingSize = true;\n      this._private__canvasBinding.resizeCanvasElement(timeAxisSize);\n      this._private__topCanvasBinding.resizeCanvasElement(timeAxisSize);\n      this._private__isSettingSize = false;\n      this._private__cell.style.width = `${timeAxisSize.width}px`;\n      this._private__cell.style.height = `${timeAxisSize.height}px`;\n      this._private__sizeChanged._internal_fire(timeAxisSize);\n    }\n    if (this._private__leftStub !== null) {\n      this._private__leftStub._internal_setSize(size$1({\n        width: leftStubWidth,\n        height: timeAxisSize.height\n      }));\n    }\n    if (this._private__rightStub !== null) {\n      this._private__rightStub._internal_setSize(size$1({\n        width: rightStubWidth,\n        height: timeAxisSize.height\n      }));\n    }\n  }\n  _internal_optimalHeight() {\n    const rendererOptions = this._private__getRendererOptions();\n    return Math.ceil(\n    // rendererOptions.offsetSize +\n    rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_fontSize + rendererOptions._internal_paddingTop + rendererOptions._internal_paddingBottom + rendererOptions._internal_labelBottomOffset);\n  }\n  _internal_update() {\n    // this call has side-effect - it regenerates marks on the time scale\n    this._private__chart._internal_model()._internal_timeScale()._internal_marks();\n  }\n  _internal_getBitmapSize() {\n    return this._private__canvasBinding.bitmapSize;\n  }\n  _internal_drawBitmap(ctx, x, y) {\n    const bitmapSize = this._internal_getBitmapSize();\n    if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n      ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n    }\n  }\n  _internal_paint(type) {\n    if (type === 0 /* InvalidationLevel.None */) {\n      return;\n    }\n    if (type !== 1 /* InvalidationLevel.Cursor */) {\n      this._private__canvasBinding.applySuggestedBitmapSize();\n      const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n      if (target !== null) {\n        target.useBitmapCoordinateSpace(scope => {\n          this._private__drawBackground(scope);\n          this._private__drawBorder(scope);\n        });\n        this._private__drawTickMarks(target);\n        // atm we don't have sources to be drawn on time axis except crosshair which is rendered on top level canvas\n        // so let's don't call this code at all for now\n        // this._drawLabels(this._chart.model().dataSources(), target);\n      }\n\n      if (this._private__leftStub !== null) {\n        this._private__leftStub._internal_paint(type);\n      }\n      if (this._private__rightStub !== null) {\n        this._private__rightStub._internal_paint(type);\n      }\n    }\n    this._private__topCanvasBinding.applySuggestedBitmapSize();\n    const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n    if (topTarget !== null) {\n      topTarget.useBitmapCoordinateSpace(({\n        context: ctx,\n        bitmapSize\n      }) => {\n        ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n      });\n      this._private__drawLabels([this._private__chart._internal_model()._internal_crosshairSource()], topTarget);\n    }\n  }\n  _private__drawBackground({\n    context: ctx,\n    bitmapSize\n  }) {\n    clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__chart._internal_model()._internal_backgroundBottomColor());\n  }\n  _private__drawBorder({\n    context: ctx,\n    bitmapSize,\n    verticalPixelRatio\n  }) {\n    if (this._private__chart._internal_options().timeScale.borderVisible) {\n      ctx.fillStyle = this._private__lineColor();\n      const borderSize = Math.max(1, Math.floor(this._private__getRendererOptions()._internal_borderSize * verticalPixelRatio));\n      ctx.fillRect(0, 0, bitmapSize.width, borderSize);\n    }\n  }\n  _private__drawTickMarks(target) {\n    const timeScale = this._private__chart._internal_model()._internal_timeScale();\n    const tickMarks = timeScale._internal_marks();\n    if (!tickMarks || tickMarks.length === 0) {\n      return;\n    }\n    let maxWeight = tickMarks.reduce(markWithGreaterWeight, tickMarks[0])._internal_weight;\n    // special case: it looks strange if 15:00 is bold but 14:00 is not\n    // so if maxWeight > TickMarkWeight.Hour1 and < TickMarkWeight.Day reduce it to TickMarkWeight.Hour1\n    if (maxWeight > 30 /* TickMarkWeight.Hour1 */ && maxWeight < 50 /* TickMarkWeight.Day */) {\n      maxWeight = 30 /* TickMarkWeight.Hour1 */;\n    }\n\n    const rendererOptions = this._private__getRendererOptions();\n    const options = timeScale._internal_options();\n    if (options.borderVisible && options.ticksVisible) {\n      target.useBitmapCoordinateSpace(({\n        context: ctx,\n        horizontalPixelRatio,\n        verticalPixelRatio\n      }) => {\n        ctx.strokeStyle = this._private__lineColor();\n        ctx.fillStyle = this._private__lineColor();\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n        ctx.beginPath();\n        const tickLen = Math.round(rendererOptions._internal_tickLength * verticalPixelRatio);\n        for (let index = tickMarks.length; index--;) {\n          const x = Math.round(tickMarks[index]._internal_coord * horizontalPixelRatio);\n          ctx.rect(x - tickOffset, 0, tickWidth, tickLen);\n        }\n        ctx.fill();\n      });\n    }\n    target.useMediaCoordinateSpace(({\n      context: ctx\n    }) => {\n      const yText = rendererOptions._internal_borderSize + rendererOptions._internal_tickLength + rendererOptions._internal_paddingTop + rendererOptions._internal_fontSize / 2;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = this._private__textColor();\n      // draw base marks\n      ctx.font = this._private__baseFont();\n      for (const tickMark of tickMarks) {\n        if (tickMark._internal_weight < maxWeight) {\n          const coordinate = tickMark._internal_needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark._internal_coord, tickMark._internal_label) : tickMark._internal_coord;\n          ctx.fillText(tickMark._internal_label, coordinate, yText);\n        }\n      }\n      ctx.font = this._private__baseBoldFont();\n      for (const tickMark of tickMarks) {\n        if (tickMark._internal_weight >= maxWeight) {\n          const coordinate = tickMark._internal_needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark._internal_coord, tickMark._internal_label) : tickMark._internal_coord;\n          ctx.fillText(tickMark._internal_label, coordinate, yText);\n        }\n      }\n    });\n  }\n  _private__alignTickMarkLabelCoordinate(ctx, coordinate, labelText) {\n    const labelWidth = this._private__widthCache._internal_measureText(ctx, labelText);\n    const labelWidthHalf = labelWidth / 2;\n    const leftTextCoordinate = Math.floor(coordinate - labelWidthHalf) + 0.5;\n    if (leftTextCoordinate < 0) {\n      coordinate = coordinate + Math.abs(0 - leftTextCoordinate);\n    } else if (leftTextCoordinate + labelWidth > this._private__size.width) {\n      coordinate = coordinate - Math.abs(this._private__size.width - (leftTextCoordinate + labelWidth));\n    }\n    return coordinate;\n  }\n  _private__drawLabels(sources, target) {\n    const rendererOptions = this._private__getRendererOptions();\n    for (const source of sources) {\n      for (const view of source._internal_timeAxisViews()) {\n        view._internal_renderer()._internal_draw(target, rendererOptions);\n      }\n    }\n  }\n  _private__lineColor() {\n    return this._private__chart._internal_options().timeScale.borderColor;\n  }\n  _private__textColor() {\n    return this._private__options.textColor;\n  }\n  _private__fontSize() {\n    return this._private__options.fontSize;\n  }\n  _private__baseFont() {\n    return makeFont(this._private__fontSize(), this._private__options.fontFamily);\n  }\n  _private__baseBoldFont() {\n    return makeFont(this._private__fontSize(), this._private__options.fontFamily, 'bold');\n  }\n  _private__getRendererOptions() {\n    if (this._private__rendererOptions === null) {\n      this._private__rendererOptions = {\n        _internal_borderSize: 1 /* Constants.BorderSize */,\n        _internal_baselineOffset: NaN,\n        _internal_paddingTop: NaN,\n        _internal_paddingBottom: NaN,\n        _internal_paddingHorizontal: NaN,\n        _internal_tickLength: 5 /* Constants.TickLength */,\n        _internal_fontSize: NaN,\n        _internal_font: '',\n        _internal_widthCache: new TextWidthCache(),\n        _internal_labelBottomOffset: 0\n      };\n    }\n    const rendererOptions = this._private__rendererOptions;\n    const newFont = this._private__baseFont();\n    if (rendererOptions._internal_font !== newFont) {\n      const fontSize = this._private__fontSize();\n      rendererOptions._internal_fontSize = fontSize;\n      rendererOptions._internal_font = newFont;\n      rendererOptions._internal_paddingTop = 3 * fontSize / 12;\n      rendererOptions._internal_paddingBottom = 3 * fontSize / 12;\n      rendererOptions._internal_paddingHorizontal = 9 * fontSize / 12;\n      rendererOptions._internal_baselineOffset = 0;\n      rendererOptions._internal_labelBottomOffset = 4 * fontSize / 12;\n      rendererOptions._internal_widthCache._internal_reset();\n    }\n    return this._private__rendererOptions;\n  }\n  _private__setCursor(type) {\n    this._private__cell.style.cursor = type === 1 /* CursorType.EwResize */ ? 'ew-resize' : 'default';\n  }\n  _private__recreateStubs() {\n    const model = this._private__chart._internal_model();\n    const options = model._internal_options();\n    if (!options.leftPriceScale.visible && this._private__leftStub !== null) {\n      this._private__leftStubCell.removeChild(this._private__leftStub._internal_getElement());\n      this._private__leftStub._internal_destroy();\n      this._private__leftStub = null;\n    }\n    if (!options.rightPriceScale.visible && this._private__rightStub !== null) {\n      this._private__rightStubCell.removeChild(this._private__rightStub._internal_getElement());\n      this._private__rightStub._internal_destroy();\n      this._private__rightStub = null;\n    }\n    const rendererOptionsProvider = this._private__chart._internal_model()._internal_rendererOptionsProvider();\n    const params = {\n      _internal_rendererOptionsProvider: rendererOptionsProvider\n    };\n    const borderVisibleGetter = () => {\n      return options.leftPriceScale.borderVisible && model._internal_timeScale()._internal_options().borderVisible;\n    };\n    const bottomColorGetter = () => model._internal_backgroundBottomColor();\n    if (options.leftPriceScale.visible && this._private__leftStub === null) {\n      this._private__leftStub = new PriceAxisStub('left', options, params, borderVisibleGetter, bottomColorGetter);\n      this._private__leftStubCell.appendChild(this._private__leftStub._internal_getElement());\n    }\n    if (options.rightPriceScale.visible && this._private__rightStub === null) {\n      this._private__rightStub = new PriceAxisStub('right', options, params, borderVisibleGetter, bottomColorGetter);\n      this._private__rightStubCell.appendChild(this._private__rightStub._internal_getElement());\n    }\n  }\n}\nconst windowsChrome = isChromiumBased() && isWindows();\nclass ChartWidget {\n  constructor(container, options) {\n    this._private__paneWidgets = [];\n    this._private__drawRafId = 0;\n    this._private__height = 0;\n    this._private__width = 0;\n    this._private__leftPriceAxisWidth = 0;\n    this._private__rightPriceAxisWidth = 0;\n    this._private__invalidateMask = null;\n    this._private__drawPlanned = false;\n    this._private__clicked = new Delegate();\n    this._private__crosshairMoved = new Delegate();\n    this._private__observer = null;\n    this._private__container = container;\n    this._private__options = options;\n    this._private__element = document.createElement('div');\n    this._private__element.classList.add('tv-lightweight-charts');\n    this._private__element.style.overflow = 'hidden';\n    this._private__element.style.width = '100%';\n    this._private__element.style.height = '100%';\n    disableSelection(this._private__element);\n    this._private__tableElement = document.createElement('table');\n    this._private__tableElement.setAttribute('cellspacing', '0');\n    this._private__element.appendChild(this._private__tableElement);\n    this._private__onWheelBound = this._private__onMousewheel.bind(this);\n    if (shouldSubscribeMouseWheel(this._private__options)) {\n      this._private__setMouseWheelEventListener(true);\n    }\n    this._private__model = new ChartModel(this._private__invalidateHandler.bind(this), this._private__options);\n    this._internal_model()._internal_crosshairMoved()._internal_subscribe(this._private__onPaneWidgetCrosshairMoved.bind(this), this);\n    this._private__timeAxisWidget = new TimeAxisWidget(this);\n    this._private__tableElement.appendChild(this._private__timeAxisWidget._internal_getElement());\n    const usedObserver = options.autoSize && this._private__installObserver();\n    // observer could not fire event immediately for some cases\n    // so we have to set initial size manually\n    let width = this._private__options.width;\n    let height = this._private__options.height;\n    // ignore width/height options if observer has actually been used\n    // however respect options if installing resize observer failed\n    if (usedObserver || width === 0 || height === 0) {\n      const containerRect = container.getBoundingClientRect();\n      width = width || containerRect.width;\n      height = height || containerRect.height;\n    }\n    // BEWARE: resize must be called BEFORE _syncGuiWithModel (in constructor only)\n    // or after but with adjustSize to properly update time scale\n    this._internal_resize(width, height);\n    this._private__syncGuiWithModel();\n    container.appendChild(this._private__element);\n    this._private__updateTimeAxisVisibility();\n    this._private__model._internal_timeScale()._internal_optionsApplied()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n    this._private__model._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n  }\n  _internal_model() {\n    return this._private__model;\n  }\n  _internal_options() {\n    return this._private__options;\n  }\n  _internal_paneWidgets() {\n    return this._private__paneWidgets;\n  }\n  _internal_timeAxisWidget() {\n    return this._private__timeAxisWidget;\n  }\n  _internal_destroy() {\n    this._private__setMouseWheelEventListener(false);\n    if (this._private__drawRafId !== 0) {\n      window.cancelAnimationFrame(this._private__drawRafId);\n    }\n    this._private__model._internal_crosshairMoved()._internal_unsubscribeAll(this);\n    this._private__model._internal_timeScale()._internal_optionsApplied()._internal_unsubscribeAll(this);\n    this._private__model._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n    this._private__model._internal_destroy();\n    for (const paneWidget of this._private__paneWidgets) {\n      this._private__tableElement.removeChild(paneWidget._internal_getElement());\n      paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n      paneWidget._internal_destroy();\n    }\n    this._private__paneWidgets = [];\n    // for (const paneSeparator of this._paneSeparators) {\n    // \tthis._destroySeparator(paneSeparator);\n    // }\n    // this._paneSeparators = [];\n    ensureNotNull(this._private__timeAxisWidget)._internal_destroy();\n    if (this._private__element.parentElement !== null) {\n      this._private__element.parentElement.removeChild(this._private__element);\n    }\n    this._private__crosshairMoved._internal_destroy();\n    this._private__clicked._internal_destroy();\n    this._private__uninstallObserver();\n  }\n  _internal_resize(width, height, forceRepaint = false) {\n    if (this._private__height === height && this._private__width === width) {\n      return;\n    }\n    const sizeHint = suggestChartSize(size$1({\n      width,\n      height\n    }));\n    this._private__height = sizeHint.height;\n    this._private__width = sizeHint.width;\n    const heightStr = this._private__height + 'px';\n    const widthStr = this._private__width + 'px';\n    ensureNotNull(this._private__element).style.height = heightStr;\n    ensureNotNull(this._private__element).style.width = widthStr;\n    this._private__tableElement.style.height = heightStr;\n    this._private__tableElement.style.width = widthStr;\n    if (forceRepaint) {\n      this._private__drawImpl(InvalidateMask._internal_full(), performance.now());\n    } else {\n      this._private__model._internal_fullUpdate();\n    }\n  }\n  _internal_paint(invalidateMask) {\n    if (invalidateMask === undefined) {\n      invalidateMask = InvalidateMask._internal_full();\n    }\n    for (let i = 0; i < this._private__paneWidgets.length; i++) {\n      this._private__paneWidgets[i]._internal_paint(invalidateMask._internal_invalidateForPane(i)._internal_level);\n    }\n    if (this._private__options.timeScale.visible) {\n      this._private__timeAxisWidget._internal_paint(invalidateMask._internal_fullInvalidation());\n    }\n  }\n  _internal_applyOptions(options) {\n    const currentlyHasMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n    // we don't need to merge options here because it's done in chart model\n    // and since both model and widget share the same object it will be done automatically for widget as well\n    // not ideal solution for sure, but it work's for now Â¯\\_(ãƒ„)_/Â¯\n    this._private__model._internal_applyOptions(options);\n    const shouldHaveMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n    if (shouldHaveMouseWheelListener !== currentlyHasMouseWheelListener) {\n      this._private__setMouseWheelEventListener(shouldHaveMouseWheelListener);\n    }\n    this._private__updateTimeAxisVisibility();\n    this._private__applyAutoSizeOptions(options);\n  }\n  _internal_clicked() {\n    return this._private__clicked;\n  }\n  _internal_crosshairMoved() {\n    return this._private__crosshairMoved;\n  }\n  _internal_takeScreenshot() {\n    if (this._private__invalidateMask !== null) {\n      this._private__drawImpl(this._private__invalidateMask, performance.now());\n      this._private__invalidateMask = null;\n    }\n    const screeshotBitmapSize = this._private__traverseLayout(null);\n    const screenshotCanvas = document.createElement('canvas');\n    screenshotCanvas.width = screeshotBitmapSize.width;\n    screenshotCanvas.height = screeshotBitmapSize.height;\n    const ctx = ensureNotNull(screenshotCanvas.getContext('2d'));\n    this._private__traverseLayout(ctx);\n    return screenshotCanvas;\n  }\n  _internal_getPriceAxisWidth(position) {\n    if (position === 'left' && !this._private__isLeftAxisVisible()) {\n      return 0;\n    }\n    if (position === 'right' && !this._private__isRightAxisVisible()) {\n      return 0;\n    }\n    if (this._private__paneWidgets.length === 0) {\n      return 0;\n    }\n    // we don't need to worry about exactly pane widget here\n    // because all pane widgets have the same width of price axis widget\n    // see _adjustSizeImpl\n    const priceAxisWidget = position === 'left' ? this._private__paneWidgets[0]._internal_leftPriceAxisWidget() : this._private__paneWidgets[0]._internal_rightPriceAxisWidget();\n    return ensureNotNull(priceAxisWidget)._internal_getWidth();\n  }\n  _internal_autoSizeActive() {\n    return this._private__options.autoSize && this._private__observer !== null;\n  }\n  // eslint-disable-next-line complexity\n  _private__applyAutoSizeOptions(options) {\n    if (options.autoSize === undefined && this._private__observer && (options.width !== undefined || options.height !== undefined)) {\n      warn(`You should turn autoSize off explicitly before specifying sizes; try adding options.autoSize: false to new options`);\n      return;\n    }\n    if (options.autoSize && !this._private__observer) {\n      // installing observer will override resize if successful\n      this._private__installObserver();\n    }\n    if (options.autoSize === false && this._private__observer !== null) {\n      this._private__uninstallObserver();\n    }\n    if (!options.autoSize && (options.width !== undefined || options.height !== undefined)) {\n      this._internal_resize(options.width || this._private__width, options.height || this._private__height);\n    }\n  }\n  /**\n   * Traverses the widget's layout (pane and axis child widgets),\n   * draws the screenshot (if rendering context is passed) and returns the screenshot bitmap size\n   *\n   * @param ctx - if passed, used to draw the screenshot of widget\n   * @returns screenshot bitmap size\n   */\n  _private__traverseLayout(ctx) {\n    let totalWidth = 0;\n    let totalHeight = 0;\n    const firstPane = this._private__paneWidgets[0];\n    const drawPriceAxises = (position, targetX) => {\n      let targetY = 0;\n      for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n        const paneWidget = this._private__paneWidgets[paneIndex];\n        const priceAxisWidget = ensureNotNull(position === 'left' ? paneWidget._internal_leftPriceAxisWidget() : paneWidget._internal_rightPriceAxisWidget());\n        const bitmapSize = priceAxisWidget._internal_getBitmapSize();\n        if (ctx !== null) {\n          priceAxisWidget._internal_drawBitmap(ctx, targetX, targetY);\n        }\n        targetY += bitmapSize.height;\n        // if (paneIndex < this._paneWidgets.length - 1) {\n        // \tconst separator = this._paneSeparators[paneIndex];\n        // \tconst separatorBitmapSize = separator.getBitmapSize();\n        // \tif (ctx !== null) {\n        // \t\tseparator.drawBitmap(ctx, targetX, targetY);\n        // \t}\n        // \ttargetY += separatorBitmapSize.height;\n        // }\n      }\n    };\n    // draw left price scale if exists\n    if (this._private__isLeftAxisVisible()) {\n      drawPriceAxises('left', 0);\n      const leftAxisBitmapWidth = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n      totalWidth += leftAxisBitmapWidth;\n    }\n    for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n      const paneWidget = this._private__paneWidgets[paneIndex];\n      const bitmapSize = paneWidget._internal_getBitmapSize();\n      if (ctx !== null) {\n        paneWidget._internal_drawBitmap(ctx, totalWidth, totalHeight);\n      }\n      totalHeight += bitmapSize.height;\n      // if (paneIndex < this._paneWidgets.length - 1) {\n      // \tconst separator = this._paneSeparators[paneIndex];\n      // \tconst separatorBitmapSize = separator.getBitmapSize();\n      // \tif (ctx !== null) {\n      // \t\tseparator.drawBitmap(ctx, totalWidth, totalHeight);\n      // \t}\n      // \ttotalHeight += separatorBitmapSize.height;\n      // }\n    }\n\n    const firstPaneBitmapWidth = firstPane._internal_getBitmapSize().width;\n    totalWidth += firstPaneBitmapWidth;\n    // draw right price scale if exists\n    if (this._private__isRightAxisVisible()) {\n      drawPriceAxises('right', totalWidth);\n      const rightAxisBitmapWidth = ensureNotNull(firstPane._internal_rightPriceAxisWidget())._internal_getBitmapSize().width;\n      totalWidth += rightAxisBitmapWidth;\n    }\n    const drawStub = (position, targetX, targetY) => {\n      const stub = ensureNotNull(position === 'left' ? this._private__timeAxisWidget._internal_leftStub() : this._private__timeAxisWidget._internal_rightStub());\n      stub._internal_drawBitmap(ensureNotNull(ctx), targetX, targetY);\n    };\n    // draw time scale and stubs\n    if (this._private__options.timeScale.visible) {\n      const timeAxisBitmapSize = this._private__timeAxisWidget._internal_getBitmapSize();\n      if (ctx !== null) {\n        let targetX = 0;\n        if (this._private__isLeftAxisVisible()) {\n          drawStub('left', targetX, totalHeight);\n          targetX = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n        }\n        this._private__timeAxisWidget._internal_drawBitmap(ctx, targetX, totalHeight);\n        targetX += timeAxisBitmapSize.width;\n        if (this._private__isRightAxisVisible()) {\n          drawStub('right', targetX, totalHeight);\n        }\n      }\n      totalHeight += timeAxisBitmapSize.height;\n    }\n    return size$1({\n      width: totalWidth,\n      height: totalHeight\n    });\n  }\n  // eslint-disable-next-line complexity\n  _private__adjustSizeImpl() {\n    let totalStretch = 0;\n    let leftPriceAxisWidth = 0;\n    let rightPriceAxisWidth = 0;\n    for (const paneWidget of this._private__paneWidgets) {\n      if (this._private__isLeftAxisVisible()) {\n        leftPriceAxisWidth = Math.max(leftPriceAxisWidth, ensureNotNull(paneWidget._internal_leftPriceAxisWidget())._internal_optimalWidth());\n      }\n      if (this._private__isRightAxisVisible()) {\n        rightPriceAxisWidth = Math.max(rightPriceAxisWidth, ensureNotNull(paneWidget._internal_rightPriceAxisWidget())._internal_optimalWidth());\n      }\n      totalStretch += paneWidget._internal_stretchFactor();\n    }\n    leftPriceAxisWidth = suggestPriceScaleWidth(leftPriceAxisWidth);\n    rightPriceAxisWidth = suggestPriceScaleWidth(rightPriceAxisWidth);\n    const width = this._private__width;\n    const height = this._private__height;\n    const paneWidth = Math.max(width - leftPriceAxisWidth - rightPriceAxisWidth, 0);\n    // const separatorCount = this._paneSeparators.length;\n    // const separatorHeight = SEPARATOR_HEIGHT;\n    const separatorsHeight = 0; // separatorHeight * separatorCount;\n    const timeAxisVisible = this._private__options.timeScale.visible;\n    let timeAxisHeight = timeAxisVisible ? this._private__timeAxisWidget._internal_optimalHeight() : 0;\n    timeAxisHeight = suggestTimeScaleHeight(timeAxisHeight);\n    const otherWidgetHeight = separatorsHeight + timeAxisHeight;\n    const totalPaneHeight = height < otherWidgetHeight ? 0 : height - otherWidgetHeight;\n    const stretchPixels = totalPaneHeight / totalStretch;\n    let accumulatedHeight = 0;\n    for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; ++paneIndex) {\n      const paneWidget = this._private__paneWidgets[paneIndex];\n      paneWidget._internal_setState(this._private__model._internal_panes()[paneIndex]);\n      let paneHeight = 0;\n      let calculatePaneHeight = 0;\n      if (paneIndex === this._private__paneWidgets.length - 1) {\n        calculatePaneHeight = totalPaneHeight - accumulatedHeight;\n      } else {\n        calculatePaneHeight = Math.round(paneWidget._internal_stretchFactor() * stretchPixels);\n      }\n      paneHeight = Math.max(calculatePaneHeight, 2);\n      accumulatedHeight += paneHeight;\n      paneWidget._internal_setSize(size$1({\n        width: paneWidth,\n        height: paneHeight\n      }));\n      if (this._private__isLeftAxisVisible()) {\n        paneWidget._internal_setPriceAxisSize(leftPriceAxisWidth, 'left');\n      }\n      if (this._private__isRightAxisVisible()) {\n        paneWidget._internal_setPriceAxisSize(rightPriceAxisWidth, 'right');\n      }\n      if (paneWidget._internal_state()) {\n        this._private__model._internal_setPaneHeight(paneWidget._internal_state(), paneHeight);\n      }\n    }\n    this._private__timeAxisWidget._internal_setSizes(size$1({\n      width: timeAxisVisible ? paneWidth : 0,\n      height: timeAxisHeight\n    }), timeAxisVisible ? leftPriceAxisWidth : 0, timeAxisVisible ? rightPriceAxisWidth : 0);\n    this._private__model._internal_setWidth(paneWidth);\n    if (this._private__leftPriceAxisWidth !== leftPriceAxisWidth) {\n      this._private__leftPriceAxisWidth = leftPriceAxisWidth;\n    }\n    if (this._private__rightPriceAxisWidth !== rightPriceAxisWidth) {\n      this._private__rightPriceAxisWidth = rightPriceAxisWidth;\n    }\n  }\n  _private__setMouseWheelEventListener(add) {\n    if (add) {\n      this._private__element.addEventListener('wheel', this._private__onWheelBound, {\n        passive: false\n      });\n      return;\n    }\n    this._private__element.removeEventListener('wheel', this._private__onWheelBound);\n  }\n  _private__determineWheelSpeedAdjustment(event) {\n    switch (event.deltaMode) {\n      case event.DOM_DELTA_PAGE:\n        // one screen at time scroll mode\n        return 120;\n      case event.DOM_DELTA_LINE:\n        // one line at time scroll mode\n        return 32;\n    }\n    if (!windowsChrome) {\n      return 1;\n    }\n    // Chromium on Windows has a bug where the scroll speed isn't correctly\n    // adjusted for high density displays. We need to correct for this so that\n    // scroll speed is consistent between browsers.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1001735\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1207308\n    return 1 / window.devicePixelRatio;\n  }\n  _private__onMousewheel(event) {\n    if ((event.deltaX === 0 || !this._private__options.handleScroll.mouseWheel) && (event.deltaY === 0 || !this._private__options.handleScale.mouseWheel)) {\n      return;\n    }\n    const scrollSpeedAdjustment = this._private__determineWheelSpeedAdjustment(event);\n    const deltaX = scrollSpeedAdjustment * event.deltaX / 100;\n    const deltaY = -(scrollSpeedAdjustment * event.deltaY / 100);\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    if (deltaY !== 0 && this._private__options.handleScale.mouseWheel) {\n      const zoomScale = Math.sign(deltaY) * Math.min(1, Math.abs(deltaY));\n      const scrollPosition = event.clientX - this._private__element.getBoundingClientRect().left;\n      this._internal_model()._internal_zoomTime(scrollPosition, zoomScale);\n    }\n    if (deltaX !== 0 && this._private__options.handleScroll.mouseWheel) {\n      this._internal_model()._internal_scrollChart(deltaX * -80); // 80 is a made up coefficient, and minus is for the \"natural\" scroll\n    }\n  }\n\n  _private__drawImpl(invalidateMask, time) {\n    var _a;\n    const invalidationType = invalidateMask._internal_fullInvalidation();\n    // actions for full invalidation ONLY (not shared with light)\n    if (invalidationType === 3 /* InvalidationLevel.Full */) {\n      this._private__updateGui();\n    }\n    // light or full invalidate actions\n    if (invalidationType === 3 /* InvalidationLevel.Full */ || invalidationType === 2 /* InvalidationLevel.Light */) {\n      this._private__applyMomentaryAutoScale(invalidateMask);\n      this._private__applyTimeScaleInvalidations(invalidateMask, time);\n      this._private__timeAxisWidget._internal_update();\n      this._private__paneWidgets.forEach(pane => {\n        pane._internal_updatePriceAxisWidgets();\n      });\n      // In the case a full invalidation has been postponed during the draw, reapply\n      // the timescale invalidations. A full invalidation would mean there is a change\n      // in the timescale width (caused by price scale changes) that needs to be drawn\n      // right away to avoid flickering.\n      if (((_a = this._private__invalidateMask) === null || _a === void 0 ? void 0 : _a._internal_fullInvalidation()) === 3 /* InvalidationLevel.Full */) {\n        this._private__invalidateMask._internal_merge(invalidateMask);\n        this._private__updateGui();\n        this._private__applyMomentaryAutoScale(this._private__invalidateMask);\n        this._private__applyTimeScaleInvalidations(this._private__invalidateMask, time);\n        invalidateMask = this._private__invalidateMask;\n        this._private__invalidateMask = null;\n      }\n    }\n    this._internal_paint(invalidateMask);\n  }\n  _private__applyTimeScaleInvalidations(invalidateMask, time) {\n    for (const tsInvalidation of invalidateMask._internal_timeScaleInvalidations()) {\n      this._private__applyTimeScaleInvalidation(tsInvalidation, time);\n    }\n  }\n  _private__applyMomentaryAutoScale(invalidateMask) {\n    const panes = this._private__model._internal_panes();\n    for (let i = 0; i < panes.length; i++) {\n      if (invalidateMask._internal_invalidateForPane(i)._internal_autoScale) {\n        panes[i]._internal_momentaryAutoScale();\n      }\n    }\n  }\n  _private__applyTimeScaleInvalidation(invalidation, time) {\n    const timeScale = this._private__model._internal_timeScale();\n    switch (invalidation._internal_type) {\n      case 0 /* TimeScaleInvalidationType.FitContent */:\n        timeScale._internal_fitContent();\n        break;\n      case 1 /* TimeScaleInvalidationType.ApplyRange */:\n        timeScale._internal_setLogicalRange(invalidation._internal_value);\n        break;\n      case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n        timeScale._internal_setBarSpacing(invalidation._internal_value);\n        break;\n      case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n        timeScale._internal_setRightOffset(invalidation._internal_value);\n        break;\n      case 4 /* TimeScaleInvalidationType.Reset */:\n        timeScale._internal_restoreDefault();\n        break;\n      case 5 /* TimeScaleInvalidationType.Animation */:\n        if (!invalidation._internal_value._internal_finished(time)) {\n          timeScale._internal_setRightOffset(invalidation._internal_value._internal_getPosition(time));\n        }\n        break;\n    }\n  }\n  _private__invalidateHandler(invalidateMask) {\n    if (this._private__invalidateMask !== null) {\n      this._private__invalidateMask._internal_merge(invalidateMask);\n    } else {\n      this._private__invalidateMask = invalidateMask;\n    }\n    if (!this._private__drawPlanned) {\n      this._private__drawPlanned = true;\n      this._private__drawRafId = window.requestAnimationFrame(time => {\n        this._private__drawPlanned = false;\n        this._private__drawRafId = 0;\n        if (this._private__invalidateMask !== null) {\n          const mask = this._private__invalidateMask;\n          this._private__invalidateMask = null;\n          this._private__drawImpl(mask, time);\n          for (const tsInvalidation of mask._internal_timeScaleInvalidations()) {\n            if (tsInvalidation._internal_type === 5 /* TimeScaleInvalidationType.Animation */ && !tsInvalidation._internal_value._internal_finished(time)) {\n              this._internal_model()._internal_setTimeScaleAnimation(tsInvalidation._internal_value);\n              break;\n            }\n          }\n        }\n      });\n    }\n  }\n  _private__updateGui() {\n    this._private__syncGuiWithModel();\n  }\n  // private _destroySeparator(separator: PaneSeparator): void {\n  // \tthis._tableElement.removeChild(separator.getElement());\n  // \tseparator.destroy();\n  // }\n  _private__syncGuiWithModel() {\n    const panes = this._private__model._internal_panes();\n    const targetPaneWidgetsCount = panes.length;\n    const actualPaneWidgetsCount = this._private__paneWidgets.length;\n    // Remove (if needed) pane widgets and separators\n    for (let i = targetPaneWidgetsCount; i < actualPaneWidgetsCount; i++) {\n      const paneWidget = ensureDefined(this._private__paneWidgets.pop());\n      this._private__tableElement.removeChild(paneWidget._internal_getElement());\n      paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n      paneWidget._internal_destroy();\n      // const paneSeparator = this._paneSeparators.pop();\n      // if (paneSeparator !== undefined) {\n      // \tthis._destroySeparator(paneSeparator);\n      // }\n    }\n    // Create (if needed) new pane widgets and separators\n    for (let i = actualPaneWidgetsCount; i < targetPaneWidgetsCount; i++) {\n      const paneWidget = new PaneWidget(this, panes[i]);\n      paneWidget._internal_clicked()._internal_subscribe(this._private__onPaneWidgetClicked.bind(this), this);\n      this._private__paneWidgets.push(paneWidget);\n      // create and insert separator\n      // if (i > 1) {\n      // \tconst paneSeparator = new PaneSeparator(this, i - 1, i, true);\n      // \tthis._paneSeparators.push(paneSeparator);\n      // \tthis._tableElement.insertBefore(paneSeparator.getElement(), this._timeAxisWidget.getElement());\n      // }\n      // insert paneWidget\n      this._private__tableElement.insertBefore(paneWidget._internal_getElement(), this._private__timeAxisWidget._internal_getElement());\n    }\n    for (let i = 0; i < targetPaneWidgetsCount; i++) {\n      const state = panes[i];\n      const paneWidget = this._private__paneWidgets[i];\n      if (paneWidget._internal_state() !== state) {\n        paneWidget._internal_setState(state);\n      } else {\n        paneWidget._internal_updatePriceAxisWidgetsStates();\n      }\n    }\n    this._private__updateTimeAxisVisibility();\n    this._private__adjustSizeImpl();\n  }\n  _private__getMouseEventParamsImpl(index, point, event) {\n    var _a;\n    const seriesData = new Map();\n    if (index !== null) {\n      const serieses = this._private__model._internal_serieses();\n      serieses.forEach(s => {\n        // TODO: replace with search left\n        const data = s._internal_bars()._internal_search(index);\n        if (data !== null) {\n          seriesData.set(s, data);\n        }\n      });\n    }\n    let clientTime;\n    if (index !== null) {\n      const timePoint = (_a = this._private__model._internal_timeScale()._internal_indexToTimeScalePoint(index)) === null || _a === void 0 ? void 0 : _a._internal_originalTime;\n      if (timePoint !== undefined) {\n        clientTime = timePoint;\n      }\n    }\n    const hoveredSource = this._internal_model()._internal_hoveredSource();\n    const hoveredSeries = hoveredSource !== null && hoveredSource._internal_source instanceof Series ? hoveredSource._internal_source : undefined;\n    const hoveredObject = hoveredSource !== null && hoveredSource._internal_object !== undefined ? hoveredSource._internal_object._internal_externalId : undefined;\n    return {\n      _internal_time: clientTime,\n      _internal_index: index !== null && index !== void 0 ? index : undefined,\n      _internal_point: point !== null && point !== void 0 ? point : undefined,\n      _internal_hoveredSeries: hoveredSeries,\n      _internal_seriesData: seriesData,\n      _internal_hoveredObject: hoveredObject,\n      _internal_touchMouseEventData: event !== null && event !== void 0 ? event : undefined\n    };\n  }\n  _private__onPaneWidgetClicked(time, point, event) {\n    this._private__clicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n  }\n  _private__onPaneWidgetCrosshairMoved(time, point, event) {\n    this._private__crosshairMoved._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n  }\n  _private__updateTimeAxisVisibility() {\n    const display = this._private__options.timeScale.visible ? '' : 'none';\n    this._private__timeAxisWidget._internal_getElement().style.display = display;\n  }\n  _private__isLeftAxisVisible() {\n    return this._private__paneWidgets[0]._internal_state()._internal_leftPriceScale()._internal_options().visible;\n  }\n  _private__isRightAxisVisible() {\n    return this._private__paneWidgets[0]._internal_state()._internal_rightPriceScale()._internal_options().visible;\n  }\n  _private__installObserver() {\n    // eslint-disable-next-line no-restricted-syntax\n    if (!('ResizeObserver' in window)) {\n      warn('Options contains \"autoSize\" flag, but the browser does not support ResizeObserver feature. Please provide polyfill.');\n      return false;\n    } else {\n      this._private__observer = new ResizeObserver(entries => {\n        const containerEntry = entries.find(entry => entry.target === this._private__container);\n        if (!containerEntry) {\n          return;\n        }\n        this._internal_resize(containerEntry.contentRect.width, containerEntry.contentRect.height);\n      });\n      this._private__observer.observe(this._private__container, {\n        box: 'border-box'\n      });\n      return true;\n    }\n  }\n  _private__uninstallObserver() {\n    if (this._private__observer !== null) {\n      this._private__observer.disconnect();\n    }\n  }\n}\nfunction disableSelection(element) {\n  element.style.userSelect = 'none';\n  // eslint-disable-next-line deprecation/deprecation\n  element.style.webkitUserSelect = 'none';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n  element.style.msUserSelect = 'none';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n  element.style.MozUserSelect = 'none';\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n  element.style.webkitTapHighlightColor = 'transparent';\n}\nfunction shouldSubscribeMouseWheel(options) {\n  return Boolean(options.handleScroll.mouseWheel || options.handleScale.mouseWheel);\n}\nfunction getColoredLineBasedSeriesPlotRow(time, index, item, originalTime) {\n  const val = item.value;\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [val, val, val, val],\n    _internal_originalTime: originalTime\n  };\n  if (item.color !== undefined) {\n    res._internal_color = item.color;\n  }\n  return res;\n}\nfunction getAreaSeriesPlotRow(time, index, item, originalTime) {\n  const val = item.value;\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [val, val, val, val],\n    _internal_originalTime: originalTime\n  };\n  if (item.lineColor !== undefined) {\n    res._internal_lineColor = item.lineColor;\n  }\n  if (item.topColor !== undefined) {\n    res._internal_topColor = item.topColor;\n  }\n  if (item.bottomColor !== undefined) {\n    res._internal_bottomColor = item.bottomColor;\n  }\n  return res;\n}\nfunction getBaselineSeriesPlotRow(time, index, item, originalTime) {\n  const val = item.value;\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [val, val, val, val],\n    _internal_originalTime: originalTime\n  };\n  if (item.topLineColor !== undefined) {\n    res._internal_topLineColor = item.topLineColor;\n  }\n  if (item.bottomLineColor !== undefined) {\n    res._internal_bottomLineColor = item.bottomLineColor;\n  }\n  if (item.topFillColor1 !== undefined) {\n    res._internal_topFillColor1 = item.topFillColor1;\n  }\n  if (item.topFillColor2 !== undefined) {\n    res._internal_topFillColor2 = item.topFillColor2;\n  }\n  if (item.bottomFillColor1 !== undefined) {\n    res._internal_bottomFillColor1 = item.bottomFillColor1;\n  }\n  if (item.bottomFillColor2 !== undefined) {\n    res._internal_bottomFillColor2 = item.bottomFillColor2;\n  }\n  return res;\n}\nfunction getBarSeriesPlotRow(time, index, item, originalTime) {\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [item.open, item.high, item.low, item.close],\n    _internal_originalTime: originalTime\n  };\n  if (item.color !== undefined) {\n    res._internal_color = item.color;\n  }\n  return res;\n}\nfunction getCandlestickSeriesPlotRow(time, index, item, originalTime) {\n  const res = {\n    _internal_index: index,\n    _internal_time: time,\n    _internal_value: [item.open, item.high, item.low, item.close],\n    _internal_originalTime: originalTime\n  };\n  if (item.color !== undefined) {\n    res._internal_color = item.color;\n  }\n  if (item.borderColor !== undefined) {\n    res._internal_borderColor = item.borderColor;\n  }\n  if (item.wickColor !== undefined) {\n    res._internal_wickColor = item.wickColor;\n  }\n  return res;\n}\nfunction isSeriesPlotRow(row) {\n  return row._internal_value !== undefined;\n}\nfunction wrapWhitespaceData(createPlotRowFn) {\n  return (time, index, bar, originalTime) => {\n    if (isWhitespaceData(bar)) {\n      return {\n        _internal_time: time,\n        _internal_index: index,\n        _internal_originalTime: originalTime\n      };\n    }\n    return createPlotRowFn(time, index, bar, originalTime);\n  };\n}\nconst seriesPlotRowFnMap = {\n  Candlestick: wrapWhitespaceData(getCandlestickSeriesPlotRow),\n  Bar: wrapWhitespaceData(getBarSeriesPlotRow),\n  Area: wrapWhitespaceData(getAreaSeriesPlotRow),\n  Baseline: wrapWhitespaceData(getBaselineSeriesPlotRow),\n  Histogram: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n  Line: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow)\n};\nfunction getSeriesPlotRowCreator(seriesType) {\n  return seriesPlotRowFnMap[seriesType];\n}\nfunction hours(count) {\n  return count * 60 * 60 * 1000;\n}\nfunction minutes(count) {\n  return count * 60 * 1000;\n}\nfunction seconds(count) {\n  return count * 1000;\n}\nconst intradayWeightDivisors = [{\n  _internal_divisor: seconds(1),\n  _internal_weight: 10 /* TickMarkWeight.Second */\n}, {\n  _internal_divisor: minutes(1),\n  _internal_weight: 20 /* TickMarkWeight.Minute1 */\n}, {\n  _internal_divisor: minutes(5),\n  _internal_weight: 21 /* TickMarkWeight.Minute5 */\n}, {\n  _internal_divisor: minutes(30),\n  _internal_weight: 22 /* TickMarkWeight.Minute30 */\n}, {\n  _internal_divisor: hours(1),\n  _internal_weight: 30 /* TickMarkWeight.Hour1 */\n}, {\n  _internal_divisor: hours(3),\n  _internal_weight: 31 /* TickMarkWeight.Hour3 */\n}, {\n  _internal_divisor: hours(6),\n  _internal_weight: 32 /* TickMarkWeight.Hour6 */\n}, {\n  _internal_divisor: hours(12),\n  _internal_weight: 33 /* TickMarkWeight.Hour12 */\n}];\n\nfunction weightByTime(currentDate, prevDate) {\n  if (currentDate.getUTCFullYear() !== prevDate.getUTCFullYear()) {\n    return 70 /* TickMarkWeight.Year */;\n  } else if (currentDate.getUTCMonth() !== prevDate.getUTCMonth()) {\n    return 60 /* TickMarkWeight.Month */;\n  } else if (currentDate.getUTCDate() !== prevDate.getUTCDate()) {\n    return 50 /* TickMarkWeight.Day */;\n  }\n\n  for (let i = intradayWeightDivisors.length - 1; i >= 0; --i) {\n    if (Math.floor(prevDate.getTime() / intradayWeightDivisors[i]._internal_divisor) !== Math.floor(currentDate.getTime() / intradayWeightDivisors[i]._internal_divisor)) {\n      return intradayWeightDivisors[i]._internal_weight;\n    }\n  }\n  return 0 /* TickMarkWeight.LessThanSecond */;\n}\n\nfunction fillWeightsForPoints(sortedTimePoints, startIndex = 0) {\n  if (sortedTimePoints.length === 0) {\n    return;\n  }\n  let prevTime = startIndex === 0 ? null : sortedTimePoints[startIndex - 1]._internal_time._internal_timestamp;\n  let prevDate = prevTime !== null ? new Date(prevTime * 1000) : null;\n  let totalTimeDiff = 0;\n  for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n    const currentPoint = sortedTimePoints[index];\n    const currentDate = new Date(currentPoint._internal_time._internal_timestamp * 1000);\n    if (prevDate !== null) {\n      currentPoint._internal_timeWeight = weightByTime(currentDate, prevDate);\n    }\n    totalTimeDiff += currentPoint._internal_time._internal_timestamp - (prevTime || currentPoint._internal_time._internal_timestamp);\n    prevTime = currentPoint._internal_time._internal_timestamp;\n    prevDate = currentDate;\n  }\n  if (startIndex === 0 && sortedTimePoints.length > 1) {\n    // let's guess a weight for the first point\n    // let's say the previous point was average time back in the history\n    const averageTimeDiff = Math.ceil(totalTimeDiff / (sortedTimePoints.length - 1));\n    const approxPrevDate = new Date((sortedTimePoints[0]._internal_time._internal_timestamp - averageTimeDiff) * 1000);\n    sortedTimePoints[0]._internal_timeWeight = weightByTime(new Date(sortedTimePoints[0]._internal_time._internal_timestamp * 1000), approxPrevDate);\n  }\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction businessDayConverter(time) {\n  if (!isBusinessDay(time)) {\n    throw new Error('time must be of type BusinessDay');\n  }\n  const date = new Date(Date.UTC(time.year, time.month - 1, time.day, 0, 0, 0, 0));\n  return {\n    _internal_timestamp: Math.round(date.getTime() / 1000),\n    _internal_businessDay: time\n  };\n}\nfunction timestampConverter(time) {\n  if (!isUTCTimestamp(time)) {\n    throw new Error('time must be of type isUTCTimestamp');\n  }\n  return {\n    _internal_timestamp: time\n  };\n}\nfunction selectTimeConverter(data) {\n  if (data.length === 0) {\n    return null;\n  }\n  if (isBusinessDay(data[0].time)) {\n    return businessDayConverter;\n  }\n  return timestampConverter;\n}\nfunction convertTime(time) {\n  if (isUTCTimestamp(time)) {\n    return timestampConverter(time);\n  }\n  if (!isBusinessDay(time)) {\n    return businessDayConverter(stringToBusinessDay(time));\n  }\n  return businessDayConverter(time);\n}\nconst validDateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\nfunction stringToBusinessDay(value) {\n  {\n    // in some browsers (I look at your Chrome) the Date constructor may accept invalid date string\n    // but parses them in \"implementation specific\" way\n    // for example 2019-1-1 isn't the same as 2019-01-01 (for Chrome both are \"valid\" date strings)\n    // see https://bugs.chromium.org/p/chromium/issues/detail?id=968939\n    // so, we need to be sure that date has valid format to avoid strange behavior and hours of debugging\n    // but let's do this in development build only because of perf\n    if (!validDateRegex.test(value)) {\n      throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n    }\n  }\n  const d = new Date(value);\n  if (isNaN(d.getTime())) {\n    throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n  }\n  return {\n    day: d.getUTCDate(),\n    month: d.getUTCMonth() + 1,\n    year: d.getUTCFullYear()\n  };\n}\nfunction convertStringToBusinessDay(value) {\n  if (isString(value.time)) {\n    value.time = stringToBusinessDay(value.time);\n  }\n}\nfunction convertStringsToBusinessDays(data) {\n  return data.forEach(convertStringToBusinessDay);\n}\nfunction createEmptyTimePointData(timePoint) {\n  return {\n    _internal_index: 0,\n    _internal_mapping: new Map(),\n    _internal_timePoint: timePoint\n  };\n}\nfunction seriesRowsFirsAndLastTime(seriesRows) {\n  if (seriesRows === undefined || seriesRows.length === 0) {\n    return undefined;\n  }\n  return {\n    _internal_firstTime: seriesRows[0]._internal_time._internal_timestamp,\n    _internal_lastTime: seriesRows[seriesRows.length - 1]._internal_time._internal_timestamp\n  };\n}\nfunction seriesUpdateInfo(seriesRows, prevSeriesRows) {\n  const firstAndLastTime = seriesRowsFirsAndLastTime(seriesRows);\n  const prevFirstAndLastTime = seriesRowsFirsAndLastTime(prevSeriesRows);\n  if (firstAndLastTime !== undefined && prevFirstAndLastTime !== undefined) {\n    return {\n      _internal_lastBarUpdatedOrNewBarsAddedToTheRight: firstAndLastTime._internal_lastTime >= prevFirstAndLastTime._internal_lastTime && firstAndLastTime._internal_firstTime >= prevFirstAndLastTime._internal_firstTime\n    };\n  }\n  return undefined;\n}\nfunction timeScalePointTime(mergedPointData) {\n  let result;\n  mergedPointData.forEach(v => {\n    if (result === undefined) {\n      result = v._internal_originalTime;\n    }\n  });\n  return ensureDefined(result);\n}\nfunction saveOriginalTime(data) {\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  if (data._internal_originalTime === undefined) {\n    data._internal_originalTime = data.time;\n  }\n}\nclass DataLayer {\n  constructor() {\n    // note that _pointDataByTimePoint and _seriesRowsBySeries shares THE SAME objects in their values between each other\n    // it's just different kind of maps to make usages/perf better\n    this._private__pointDataByTimePoint = new Map();\n    this._private__seriesRowsBySeries = new Map();\n    this._private__seriesLastTimePoint = new Map();\n    // this is kind of \"dest\" values (in opposite to \"source\" ones) - we don't need to modify it manually, the only by calling _updateTimeScalePoints or updateSeriesData methods\n    this._private__sortedTimePoints = [];\n  }\n  _internal_destroy() {\n    this._private__pointDataByTimePoint.clear();\n    this._private__seriesRowsBySeries.clear();\n    this._private__seriesLastTimePoint.clear();\n    this._private__sortedTimePoints = [];\n  }\n  _internal_setSeriesData(series, data) {\n    let needCleanupPoints = this._private__pointDataByTimePoint.size !== 0;\n    let isTimeScaleAffected = false;\n    // save previous series rows data before it's replaced inside this._setRowsToSeries\n    const prevSeriesRows = this._private__seriesRowsBySeries.get(series);\n    if (prevSeriesRows !== undefined) {\n      if (this._private__seriesRowsBySeries.size === 1) {\n        needCleanupPoints = false;\n        isTimeScaleAffected = true;\n        // perf optimization - if there is only 1 series, then we can just clear and fill everything from scratch\n        this._private__pointDataByTimePoint.clear();\n      } else {\n        // perf optimization - actually we have to use this._pointDataByTimePoint for going through here\n        // but as soon as this._sortedTimePoints is just a different form of _pointDataByTimePoint we can use it as well\n        for (const point of this._private__sortedTimePoints) {\n          if (point.pointData._internal_mapping.delete(series)) {\n            isTimeScaleAffected = true;\n          }\n        }\n      }\n    }\n    let seriesRows = [];\n    if (data.length !== 0) {\n      const extendedData = data;\n      extendedData.forEach(i => saveOriginalTime(i));\n      convertStringsToBusinessDays(data);\n      const timeConverter = ensureNotNull(selectTimeConverter(data));\n      const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n      seriesRows = extendedData.map(item => {\n        const time = timeConverter(item.time);\n        let timePointData = this._private__pointDataByTimePoint.get(time._internal_timestamp);\n        if (timePointData === undefined) {\n          // the indexes will be sync later\n          timePointData = createEmptyTimePointData(time);\n          this._private__pointDataByTimePoint.set(time._internal_timestamp, timePointData);\n          isTimeScaleAffected = true;\n        }\n        const row = createPlotRow(time, timePointData._internal_index, item, item._internal_originalTime);\n        timePointData._internal_mapping.set(series, row);\n        return row;\n      });\n    }\n    if (needCleanupPoints) {\n      // we deleted the old data from mapping and added the new ones\n      // so there might be empty points now, let's remove them first\n      this._private__cleanupPointsData();\n    }\n    this._private__setRowsToSeries(series, seriesRows);\n    let firstChangedPointIndex = -1;\n    if (isTimeScaleAffected) {\n      // then generate the time scale points\n      // timeWeight will be updates in _updateTimeScalePoints later\n      const newTimeScalePoints = [];\n      this._private__pointDataByTimePoint.forEach(pointData => {\n        newTimeScalePoints.push({\n          _internal_timeWeight: 0,\n          _internal_time: pointData._internal_timePoint,\n          pointData,\n          _internal_originalTime: timeScalePointTime(pointData._internal_mapping)\n        });\n      });\n      newTimeScalePoints.sort((t1, t2) => t1._internal_time._internal_timestamp - t2._internal_time._internal_timestamp);\n      firstChangedPointIndex = this._private__replaceTimeScalePoints(newTimeScalePoints);\n    }\n    return this._private__getUpdateResponse(series, firstChangedPointIndex, seriesUpdateInfo(this._private__seriesRowsBySeries.get(series), prevSeriesRows));\n  }\n  _internal_removeSeries(series) {\n    return this._internal_setSeriesData(series, []);\n  }\n  _internal_updateSeriesData(series, data) {\n    const extendedData = data;\n    saveOriginalTime(extendedData);\n    convertStringToBusinessDay(data);\n    const time = ensureNotNull(selectTimeConverter([data]))(data.time);\n    const lastSeriesTime = this._private__seriesLastTimePoint.get(series);\n    if (lastSeriesTime !== undefined && time._internal_timestamp < lastSeriesTime._internal_timestamp) {\n      throw new Error(`Cannot update oldest data, last time=${lastSeriesTime._internal_timestamp}, new time=${time._internal_timestamp}`);\n    }\n    let pointDataAtTime = this._private__pointDataByTimePoint.get(time._internal_timestamp);\n    // if no point data found for the new data item\n    // that means that we need to update scale\n    const affectsTimeScale = pointDataAtTime === undefined;\n    if (pointDataAtTime === undefined) {\n      // the indexes will be sync later\n      pointDataAtTime = createEmptyTimePointData(time);\n      this._private__pointDataByTimePoint.set(time._internal_timestamp, pointDataAtTime);\n    }\n    const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n    const plotRow = createPlotRow(time, pointDataAtTime._internal_index, data, extendedData._internal_originalTime);\n    pointDataAtTime._internal_mapping.set(series, plotRow);\n    this._private__updateLastSeriesRow(series, plotRow);\n    const info = {\n      _internal_lastBarUpdatedOrNewBarsAddedToTheRight: isSeriesPlotRow(plotRow)\n    };\n    // if point already exist on the time scale - we don't need to make a full update and just make an incremental one\n    if (!affectsTimeScale) {\n      return this._private__getUpdateResponse(series, -1, info);\n    }\n    const newPoint = {\n      _internal_timeWeight: 0,\n      _internal_time: pointDataAtTime._internal_timePoint,\n      pointData: pointDataAtTime,\n      _internal_originalTime: timeScalePointTime(pointDataAtTime._internal_mapping)\n    };\n    const insertIndex = lowerbound(this._private__sortedTimePoints, newPoint._internal_time._internal_timestamp, (a, b) => a._internal_time._internal_timestamp < b);\n    // yes, I know that this array is readonly and this change is intended to make it performative\n    // we marked _sortedTimePoints array as readonly to avoid modifying this array anywhere else\n    // but this place is exceptional case due performance reasons, sorry\n    this._private__sortedTimePoints.splice(insertIndex, 0, newPoint);\n    for (let index = insertIndex; index < this._private__sortedTimePoints.length; ++index) {\n      assignIndexToPointData(this._private__sortedTimePoints[index].pointData, index);\n    }\n    fillWeightsForPoints(this._private__sortedTimePoints, insertIndex);\n    return this._private__getUpdateResponse(series, insertIndex, info);\n  }\n  _private__updateLastSeriesRow(series, plotRow) {\n    let seriesData = this._private__seriesRowsBySeries.get(series);\n    if (seriesData === undefined) {\n      seriesData = [];\n      this._private__seriesRowsBySeries.set(series, seriesData);\n    }\n    const lastSeriesRow = seriesData.length !== 0 ? seriesData[seriesData.length - 1] : null;\n    if (lastSeriesRow === null || plotRow._internal_time._internal_timestamp > lastSeriesRow._internal_time._internal_timestamp) {\n      if (isSeriesPlotRow(plotRow)) {\n        seriesData.push(plotRow);\n      }\n    } else {\n      if (isSeriesPlotRow(plotRow)) {\n        seriesData[seriesData.length - 1] = plotRow;\n      } else {\n        seriesData.splice(-1, 1);\n      }\n    }\n    this._private__seriesLastTimePoint.set(series, plotRow._internal_time);\n  }\n  _private__setRowsToSeries(series, seriesRows) {\n    if (seriesRows.length !== 0) {\n      this._private__seriesRowsBySeries.set(series, seriesRows.filter(isSeriesPlotRow));\n      this._private__seriesLastTimePoint.set(series, seriesRows[seriesRows.length - 1]._internal_time);\n    } else {\n      this._private__seriesRowsBySeries.delete(series);\n      this._private__seriesLastTimePoint.delete(series);\n    }\n  }\n  _private__cleanupPointsData() {\n    // let's treat all current points as \"potentially removed\"\n    // we could create an array with actually potentially removed points\n    // but most likely this array will be similar to _sortedTimePoints so let's avoid using additional memory\n    // note that we can use _sortedTimePoints here since a point might be removed only it was here previously\n    for (const point of this._private__sortedTimePoints) {\n      if (point.pointData._internal_mapping.size === 0) {\n        this._private__pointDataByTimePoint.delete(point._internal_time._internal_timestamp);\n      }\n    }\n  }\n  /**\n   * Sets new time scale and make indexes valid for all series\n   *\n   * @returns The index of the first changed point or `-1` if there is no change.\n   */\n  _private__replaceTimeScalePoints(newTimePoints) {\n    let firstChangedPointIndex = -1;\n    // search the first different point and \"syncing\" time weight by the way\n    for (let index = 0; index < this._private__sortedTimePoints.length && index < newTimePoints.length; ++index) {\n      const oldPoint = this._private__sortedTimePoints[index];\n      const newPoint = newTimePoints[index];\n      if (oldPoint._internal_time._internal_timestamp !== newPoint._internal_time._internal_timestamp) {\n        firstChangedPointIndex = index;\n        break;\n      }\n      // re-assign point's time weight for points if time is the same (and all prior times was the same)\n      newPoint._internal_timeWeight = oldPoint._internal_timeWeight;\n      assignIndexToPointData(newPoint.pointData, index);\n    }\n    if (firstChangedPointIndex === -1 && this._private__sortedTimePoints.length !== newTimePoints.length) {\n      // the common part of the prev and the new points are the same\n      // so the first changed point is the next after the common part\n      firstChangedPointIndex = Math.min(this._private__sortedTimePoints.length, newTimePoints.length);\n    }\n    if (firstChangedPointIndex === -1) {\n      // if no time scale changed, then do nothing\n      return -1;\n    }\n    // if time scale points are changed that means that we need to make full update to all series (with clearing points)\n    // but first we need to synchronize indexes and re-fill time weights\n    for (let index = firstChangedPointIndex; index < newTimePoints.length; ++index) {\n      assignIndexToPointData(newTimePoints[index].pointData, index);\n    }\n    // re-fill time weights for point after the first changed one\n    fillWeightsForPoints(newTimePoints, firstChangedPointIndex);\n    this._private__sortedTimePoints = newTimePoints;\n    return firstChangedPointIndex;\n  }\n  _private__getBaseIndex() {\n    if (this._private__seriesRowsBySeries.size === 0) {\n      // if we have no data then 'reset' the base index to null\n      return null;\n    }\n    let baseIndex = 0;\n    this._private__seriesRowsBySeries.forEach(data => {\n      if (data.length !== 0) {\n        baseIndex = Math.max(baseIndex, data[data.length - 1]._internal_index);\n      }\n    });\n    return baseIndex;\n  }\n  _private__getUpdateResponse(updatedSeries, firstChangedPointIndex, info) {\n    const dataUpdateResponse = {\n      _internal_series: new Map(),\n      _internal_timeScale: {\n        _internal_baseIndex: this._private__getBaseIndex()\n      }\n    };\n    if (firstChangedPointIndex !== -1) {\n      // TODO: it's possible to make perf improvements by checking what series has data after firstChangedPointIndex\n      // but let's skip for now\n      this._private__seriesRowsBySeries.forEach((data, s) => {\n        dataUpdateResponse._internal_series.set(s, {\n          _internal_data: data,\n          _internal_info: s === updatedSeries ? info : undefined\n        });\n      });\n      // if the series data was set to [] it will have already been removed from _seriesRowBySeries\n      // meaning the forEach above won't add the series to the data update response\n      // so we handle that case here\n      if (!this._private__seriesRowsBySeries.has(updatedSeries)) {\n        dataUpdateResponse._internal_series.set(updatedSeries, {\n          _internal_data: [],\n          _internal_info: info\n        });\n      }\n      dataUpdateResponse._internal_timeScale._internal_points = this._private__sortedTimePoints;\n      dataUpdateResponse._internal_timeScale._internal_firstChangedPointIndex = firstChangedPointIndex;\n    } else {\n      const seriesData = this._private__seriesRowsBySeries.get(updatedSeries);\n      // if no seriesData found that means that we just removed the series\n      dataUpdateResponse._internal_series.set(updatedSeries, {\n        _internal_data: seriesData || [],\n        _internal_info: info\n      });\n    }\n    return dataUpdateResponse;\n  }\n}\nfunction assignIndexToPointData(pointData, index) {\n  // first, nevertheless update index of point data (\"make it valid\")\n  pointData._internal_index = index;\n  // and then we need to sync indexes for all series\n  pointData._internal_mapping.forEach(seriesRow => {\n    seriesRow._internal_index = index;\n  });\n}\nfunction singleValueData(plotRow) {\n  return {\n    value: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n    time: plotRow._internal_originalTime\n  };\n}\nfunction lineData(plotRow) {\n  const result = singleValueData(plotRow);\n  if (plotRow._internal_color !== undefined) {\n    result.color = plotRow._internal_color;\n  }\n  return result;\n}\nfunction areaData(plotRow) {\n  const result = singleValueData(plotRow);\n  if (plotRow._internal_lineColor !== undefined) {\n    result.lineColor = plotRow._internal_lineColor;\n  }\n  if (plotRow._internal_topColor !== undefined) {\n    result.topColor = plotRow._internal_topColor;\n  }\n  if (plotRow._internal_bottomColor !== undefined) {\n    result.bottomColor = plotRow._internal_bottomColor;\n  }\n  return result;\n}\nfunction baselineData(plotRow) {\n  const result = singleValueData(plotRow);\n  if (plotRow._internal_topLineColor !== undefined) {\n    result.topLineColor = plotRow._internal_topLineColor;\n  }\n  if (plotRow._internal_bottomLineColor !== undefined) {\n    result.bottomLineColor = plotRow._internal_bottomLineColor;\n  }\n  if (plotRow._internal_topFillColor1 !== undefined) {\n    result.topFillColor1 = plotRow._internal_topFillColor1;\n  }\n  if (plotRow._internal_topFillColor2 !== undefined) {\n    result.topFillColor2 = plotRow._internal_topFillColor2;\n  }\n  if (plotRow._internal_bottomFillColor1 !== undefined) {\n    result.bottomFillColor1 = plotRow._internal_bottomFillColor1;\n  }\n  if (plotRow._internal_bottomFillColor2 !== undefined) {\n    result.bottomFillColor2 = plotRow._internal_bottomFillColor2;\n  }\n  return result;\n}\nfunction ohlcData(plotRow) {\n  return {\n    open: plotRow._internal_value[0 /* PlotRowValueIndex.Open */],\n    high: plotRow._internal_value[1 /* PlotRowValueIndex.High */],\n    low: plotRow._internal_value[2 /* PlotRowValueIndex.Low */],\n    close: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n    time: plotRow._internal_originalTime\n  };\n}\nfunction barData(plotRow) {\n  const result = ohlcData(plotRow);\n  if (plotRow._internal_color !== undefined) {\n    result.color = plotRow._internal_color;\n  }\n  return result;\n}\nfunction candlestickData(plotRow) {\n  const result = ohlcData(plotRow);\n  const {\n    _internal_color: color,\n    _internal_borderColor: borderColor,\n    _internal_wickColor: wickColor\n  } = plotRow;\n  if (color !== undefined) {\n    result.color = color;\n  }\n  if (borderColor !== undefined) {\n    result.borderColor = borderColor;\n  }\n  if (wickColor !== undefined) {\n    result.wickColor = wickColor;\n  }\n  return result;\n}\nconst seriesPlotRowToDataMap = {\n  Area: areaData,\n  Line: lineData,\n  Baseline: baselineData,\n  Histogram: lineData,\n  Bar: barData,\n  Candlestick: candlestickData\n};\nfunction getSeriesDataCreator(seriesType) {\n  return seriesPlotRowToDataMap[seriesType];\n}\nconst crosshairOptionsDefaults = {\n  vertLine: {\n    color: '#9598A1',\n    width: 1,\n    style: 3 /* LineStyle.LargeDashed */,\n    visible: true,\n    labelVisible: true,\n    labelBackgroundColor: '#131722'\n  },\n  horzLine: {\n    color: '#9598A1',\n    width: 1,\n    style: 3 /* LineStyle.LargeDashed */,\n    visible: true,\n    labelVisible: true,\n    labelBackgroundColor: '#131722'\n  },\n  mode: 1 /* CrosshairMode.Magnet */\n};\n\nconst gridOptionsDefaults = {\n  vertLines: {\n    color: '#D6DCDE',\n    style: 0 /* LineStyle.Solid */,\n    visible: true\n  },\n  horzLines: {\n    color: '#D6DCDE',\n    style: 0 /* LineStyle.Solid */,\n    visible: true\n  }\n};\nconst layoutOptionsDefaults = {\n  background: {\n    type: \"solid\" /* ColorType.Solid */,\n    color: '#FFFFFF'\n  },\n  textColor: '#191919',\n  fontSize: 12,\n  fontFamily: defaultFontFamily\n};\nconst priceScaleOptionsDefaults = {\n  autoScale: true,\n  mode: 0 /* PriceScaleMode.Normal */,\n  invertScale: false,\n  alignLabels: true,\n  borderVisible: true,\n  borderColor: '#2B2B43',\n  entireTextOnly: false,\n  visible: false,\n  ticksVisible: false,\n  scaleMargins: {\n    bottom: 0.1,\n    top: 0.2\n  }\n};\nconst timeScaleOptionsDefaults = {\n  rightOffset: 0,\n  barSpacing: 6,\n  minBarSpacing: 0.5,\n  fixLeftEdge: false,\n  fixRightEdge: false,\n  lockVisibleTimeRangeOnResize: false,\n  rightBarStaysOnScroll: false,\n  borderVisible: true,\n  borderColor: '#2B2B43',\n  visible: true,\n  timeVisible: false,\n  secondsVisible: true,\n  shiftVisibleRangeOnNewBar: true,\n  ticksVisible: false\n};\nconst watermarkOptionsDefaults = {\n  color: 'rgba(0, 0, 0, 0)',\n  visible: false,\n  fontSize: 48,\n  fontFamily: defaultFontFamily,\n  fontStyle: '',\n  text: '',\n  horzAlign: 'center',\n  vertAlign: 'center'\n};\nconst chartOptionsDefaults = {\n  width: 0,\n  height: 0,\n  autoSize: false,\n  layout: layoutOptionsDefaults,\n  crosshair: crosshairOptionsDefaults,\n  grid: gridOptionsDefaults,\n  overlayPriceScales: Object.assign({}, priceScaleOptionsDefaults),\n  leftPriceScale: Object.assign(Object.assign({}, priceScaleOptionsDefaults), {\n    visible: false\n  }),\n  rightPriceScale: Object.assign(Object.assign({}, priceScaleOptionsDefaults), {\n    visible: true\n  }),\n  timeScale: timeScaleOptionsDefaults,\n  watermark: watermarkOptionsDefaults,\n  localization: {\n    locale: isRunningOnClientSide ? navigator.language : '',\n    dateFormat: 'dd MMM \\'yy'\n  },\n  handleScroll: {\n    mouseWheel: true,\n    pressedMouseMove: true,\n    horzTouchDrag: true,\n    vertTouchDrag: true\n  },\n  handleScale: {\n    axisPressedMouseMove: {\n      time: true,\n      price: true\n    },\n    axisDoubleClickReset: {\n      time: true,\n      price: true\n    },\n    mouseWheel: true,\n    pinch: true\n  },\n  kineticScroll: {\n    mouse: false,\n    touch: true\n  },\n  trackingMode: {\n    exitMode: 1 /* TrackingModeExitMode.OnNextTap */\n  }\n};\n\nconst candlestickStyleDefaults = {\n  upColor: '#26a69a',\n  downColor: '#ef5350',\n  wickVisible: true,\n  borderVisible: true,\n  borderColor: '#378658',\n  borderUpColor: '#26a69a',\n  borderDownColor: '#ef5350',\n  wickColor: '#737375',\n  wickUpColor: '#26a69a',\n  wickDownColor: '#ef5350'\n};\nconst barStyleDefaults = {\n  upColor: '#26a69a',\n  downColor: '#ef5350',\n  openVisible: true,\n  thinBars: true\n};\nconst lineStyleDefaults = {\n  color: '#2196f3',\n  lineStyle: 0 /* LineStyle.Solid */,\n  lineWidth: 3,\n  lineType: 0 /* LineType.Simple */,\n  crosshairMarkerVisible: true,\n  crosshairMarkerRadius: 4,\n  crosshairMarkerBorderColor: '',\n  crosshairMarkerBorderWidth: 2,\n  crosshairMarkerBackgroundColor: '',\n  lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */\n};\n\nconst areaStyleDefaults = {\n  topColor: 'rgba( 46, 220, 135, 0.4)',\n  bottomColor: 'rgba( 40, 221, 100, 0)',\n  invertFilledArea: false,\n  lineColor: '#33D778',\n  lineStyle: 0 /* LineStyle.Solid */,\n  lineWidth: 3,\n  lineType: 0 /* LineType.Simple */,\n  crosshairMarkerVisible: true,\n  crosshairMarkerRadius: 4,\n  crosshairMarkerBorderColor: '',\n  crosshairMarkerBorderWidth: 2,\n  crosshairMarkerBackgroundColor: '',\n  lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */\n};\n\nconst baselineStyleDefaults = {\n  baseValue: {\n    type: 'price',\n    price: 0\n  },\n  topFillColor1: 'rgba(38, 166, 154, 0.28)',\n  topFillColor2: 'rgba(38, 166, 154, 0.05)',\n  topLineColor: 'rgba(38, 166, 154, 1)',\n  bottomFillColor1: 'rgba(239, 83, 80, 0.05)',\n  bottomFillColor2: 'rgba(239, 83, 80, 0.28)',\n  bottomLineColor: 'rgba(239, 83, 80, 1)',\n  lineWidth: 3,\n  lineStyle: 0 /* LineStyle.Solid */,\n  lineType: 0 /* LineType.Simple */,\n  crosshairMarkerVisible: true,\n  crosshairMarkerRadius: 4,\n  crosshairMarkerBorderColor: '',\n  crosshairMarkerBorderWidth: 2,\n  crosshairMarkerBackgroundColor: '',\n  lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */\n};\n\nconst histogramStyleDefaults = {\n  color: '#26a69a',\n  base: 0\n};\nconst seriesOptionsDefaults = {\n  title: '',\n  visible: true,\n  lastValueVisible: true,\n  priceLineVisible: true,\n  priceLineSource: 0 /* PriceLineSource.LastBar */,\n  priceLineWidth: 1,\n  priceLineColor: '',\n  priceLineStyle: 2 /* LineStyle.Dashed */,\n  baseLineVisible: true,\n  baseLineWidth: 1,\n  baseLineColor: '#B2B5BE',\n  baseLineStyle: 0 /* LineStyle.Solid */,\n  priceFormat: {\n    type: 'price',\n    precision: 2,\n    minMove: 0.01\n  }\n};\nclass PriceScaleApi {\n  constructor(chartWidget, priceScaleId) {\n    this._private__chartWidget = chartWidget;\n    this._private__priceScaleId = priceScaleId;\n  }\n  applyOptions(options) {\n    this._private__chartWidget._internal_model()._internal_applyPriceScaleOptions(this._private__priceScaleId, options);\n  }\n  options() {\n    return this._private__priceScale()._internal_options();\n  }\n  width() {\n    if (!isDefaultPriceScale(this._private__priceScaleId)) {\n      return 0;\n    }\n    return this._private__chartWidget._internal_getPriceAxisWidth(this._private__priceScaleId);\n  }\n  _private__priceScale() {\n    return ensureNotNull(this._private__chartWidget._internal_model()._internal_findPriceScale(this._private__priceScaleId))._internal_priceScale;\n  }\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction checkPriceLineOptions(options) {\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  assert(typeof options.price === 'number', `the type of 'price' price line's property must be a number, got '${typeof options.price}'`);\n}\nfunction checkItemsAreOrdered(data, allowDuplicates = false) {\n  if (data.length === 0) {\n    return;\n  }\n  let prevTime = convertTime(data[0].time)._internal_timestamp;\n  for (let i = 1; i < data.length; ++i) {\n    const currentTime = convertTime(data[i].time)._internal_timestamp;\n    const checkResult = allowDuplicates ? prevTime <= currentTime : prevTime < currentTime;\n    assert(checkResult, `data must be asc ordered by time, index=${i}, time=${currentTime}, prev time=${prevTime}`);\n    prevTime = currentTime;\n  }\n}\nfunction checkSeriesValuesType(type, data) {\n  data.forEach(getChecker(type));\n}\nfunction getChecker(type) {\n  switch (type) {\n    case 'Bar':\n    case 'Candlestick':\n      return checkBarItem.bind(null, type);\n    case 'Area':\n    case 'Baseline':\n    case 'Line':\n    case 'Histogram':\n      return checkLineItem.bind(null, type);\n  }\n}\nfunction checkBarItem(type, barItem) {\n  if (!isFulfilledData(barItem)) {\n    return;\n  }\n  assert(\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  typeof barItem.open === 'number', `${type} series item data value of open must be a number, got=${typeof barItem.open}, value=${barItem.open}`);\n  assert(\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  typeof barItem.high === 'number', `${type} series item data value of high must be a number, got=${typeof barItem.high}, value=${barItem.high}`);\n  assert(\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  typeof barItem.low === 'number', `${type} series item data value of low must be a number, got=${typeof barItem.low}, value=${barItem.low}`);\n  assert(\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  typeof barItem.close === 'number', `${type} series item data value of close must be a number, got=${typeof barItem.close}, value=${barItem.close}`);\n}\nfunction checkLineItem(type, lineItem) {\n  if (!isFulfilledData(lineItem)) {\n    return;\n  }\n  assert(\n  // eslint-disable-next-line @typescript-eslint/tslint/config\n  typeof lineItem.value === 'number', `${type} series item data value must be a number, got=${typeof lineItem.value}, value=${lineItem.value}`);\n}\nconst priceLineOptionsDefaults = {\n  color: '#FF0000',\n  price: 0,\n  lineStyle: 2 /* LineStyle.Dashed */,\n  lineWidth: 1,\n  lineVisible: true,\n  axisLabelVisible: true,\n  title: '',\n  axisLabelColor: '',\n  axisLabelTextColor: ''\n};\nclass PriceLine {\n  constructor(priceLine) {\n    this._private__priceLine = priceLine;\n  }\n  applyOptions(options) {\n    this._private__priceLine._internal_applyOptions(options);\n  }\n  options() {\n    return this._private__priceLine._internal_options();\n  }\n  _internal_priceLine() {\n    return this._private__priceLine;\n  }\n}\nclass SeriesApi {\n  constructor(series, dataUpdatesConsumer, priceScaleApiProvider) {\n    this._internal__series = series;\n    this._internal__dataUpdatesConsumer = dataUpdatesConsumer;\n    this._private__priceScaleApiProvider = priceScaleApiProvider;\n  }\n  priceFormatter() {\n    return this._internal__series._internal_formatter();\n  }\n  priceToCoordinate(price) {\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return null;\n    }\n    return this._internal__series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n  }\n  coordinateToPrice(coordinate) {\n    const firstValue = this._internal__series._internal_firstValue();\n    if (firstValue === null) {\n      return null;\n    }\n    return this._internal__series._internal_priceScale()._internal_coordinateToPrice(coordinate, firstValue._internal_value);\n  }\n  // eslint-disable-next-line complexity\n  barsInLogicalRange(range) {\n    if (range === null) {\n      return null;\n    }\n    // we use TimeScaleVisibleRange here to convert LogicalRange to strict range properly\n    const correctedRange = new TimeScaleVisibleRange(new RangeImpl(range.from, range.to))._internal_strictRange();\n    const bars = this._internal__series._internal_bars();\n    if (bars._internal_isEmpty()) {\n      return null;\n    }\n    const dataFirstBarInRange = bars._internal_search(correctedRange._internal_left(), 1 /* MismatchDirection.NearestRight */);\n    const dataLastBarInRange = bars._internal_search(correctedRange._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n    const dataFirstIndex = ensureNotNull(bars._internal_firstIndex());\n    const dataLastIndex = ensureNotNull(bars._internal_lastIndex());\n    // this means that we request data in the data gap\n    // e.g. let's say we have series with data [0..10, 30..60]\n    // and we request bars info in range [15, 25]\n    // thus, dataFirstBarInRange will be with index 30 and dataLastBarInRange with 10\n    if (dataFirstBarInRange !== null && dataLastBarInRange !== null && dataFirstBarInRange._internal_index > dataLastBarInRange._internal_index) {\n      return {\n        barsBefore: range.from - dataFirstIndex,\n        barsAfter: dataLastIndex - range.to\n      };\n    }\n    const barsBefore = dataFirstBarInRange === null || dataFirstBarInRange._internal_index === dataFirstIndex ? range.from - dataFirstIndex : dataFirstBarInRange._internal_index - dataFirstIndex;\n    const barsAfter = dataLastBarInRange === null || dataLastBarInRange._internal_index === dataLastIndex ? dataLastIndex - range.to : dataLastIndex - dataLastBarInRange._internal_index;\n    const result = {\n      barsBefore,\n      barsAfter\n    };\n    // actually they can't exist separately\n    if (dataFirstBarInRange !== null && dataLastBarInRange !== null) {\n      result.from = dataFirstBarInRange._internal_time._internal_businessDay || dataFirstBarInRange._internal_time._internal_timestamp;\n      result.to = dataLastBarInRange._internal_time._internal_businessDay || dataLastBarInRange._internal_time._internal_timestamp;\n    }\n    return result;\n  }\n  setData(data) {\n    checkItemsAreOrdered(data);\n    checkSeriesValuesType(this._internal__series._internal_seriesType(), data);\n    this._internal__dataUpdatesConsumer._internal_applyNewData(this._internal__series, data);\n  }\n  update(bar) {\n    checkSeriesValuesType(this._internal__series._internal_seriesType(), [bar]);\n    this._internal__dataUpdatesConsumer._internal_updateData(this._internal__series, bar);\n  }\n  dataByIndex(logicalIndex, mismatchDirection) {\n    const data = this._internal__series._internal_bars()._internal_search(logicalIndex, mismatchDirection);\n    if (data === null) {\n      // actually it can be a whitespace\n      return null;\n    }\n    return getSeriesDataCreator(this.seriesType())(data);\n  }\n  setMarkers(data) {\n    checkItemsAreOrdered(data, true);\n    const convertedMarkers = data.map(marker => Object.assign(Object.assign({}, marker), {\n      originalTime: marker.time,\n      time: convertTime(marker.time)\n    }));\n    this._internal__series._internal_setMarkers(convertedMarkers);\n  }\n  markers() {\n    return this._internal__series._internal_markers().map(internalItem => {\n      const {\n          originalTime,\n          time\n        } = internalItem,\n        item = __rest(internalItem, [\"originalTime\", \"time\"]);\n      return Object.assign({\n        time: originalTime\n      }, item);\n    });\n  }\n  applyOptions(options) {\n    this._internal__series._internal_applyOptions(options);\n  }\n  options() {\n    return clone(this._internal__series._internal_options());\n  }\n  priceScale() {\n    return this._private__priceScaleApiProvider.priceScale(this._internal__series._internal_priceScale()._internal_id());\n  }\n  createPriceLine(options) {\n    checkPriceLineOptions(options);\n    const strictOptions = merge(clone(priceLineOptionsDefaults), options);\n    const priceLine = this._internal__series._internal_createPriceLine(strictOptions);\n    return new PriceLine(priceLine);\n  }\n  removePriceLine(line) {\n    this._internal__series._internal_removePriceLine(line._internal_priceLine());\n  }\n  seriesType() {\n    return this._internal__series._internal_seriesType();\n  }\n}\nclass TimeScaleApi {\n  constructor(model, timeAxisWidget) {\n    this._private__timeRangeChanged = new Delegate();\n    this._private__logicalRangeChanged = new Delegate();\n    this._private__sizeChanged = new Delegate();\n    this._private__model = model;\n    this._private__timeScale = model._internal_timeScale();\n    this._private__timeAxisWidget = timeAxisWidget;\n    this._private__timeScale._internal_visibleBarsChanged()._internal_subscribe(this._private__onVisibleBarsChanged.bind(this));\n    this._private__timeScale._internal_logicalRangeChanged()._internal_subscribe(this._private__onVisibleLogicalRangeChanged.bind(this));\n    this._private__timeAxisWidget._internal_sizeChanged()._internal_subscribe(this._private__onSizeChanged.bind(this));\n  }\n  _internal_destroy() {\n    this._private__timeScale._internal_visibleBarsChanged()._internal_unsubscribeAll(this);\n    this._private__timeScale._internal_logicalRangeChanged()._internal_unsubscribeAll(this);\n    this._private__timeAxisWidget._internal_sizeChanged()._internal_unsubscribeAll(this);\n    this._private__timeRangeChanged._internal_destroy();\n    this._private__logicalRangeChanged._internal_destroy();\n    this._private__sizeChanged._internal_destroy();\n  }\n  scrollPosition() {\n    return this._private__timeScale._internal_rightOffset();\n  }\n  scrollToPosition(position, animated) {\n    if (!animated) {\n      this._private__model._internal_setRightOffset(position);\n      return;\n    }\n    this._private__timeScale._internal_scrollToOffsetAnimated(position, 1000 /* Constants.AnimationDurationMs */);\n  }\n\n  scrollToRealTime() {\n    this._private__timeScale._internal_scrollToRealTime();\n  }\n  getVisibleRange() {\n    var _a, _b;\n    const timeRange = this._private__timeScale._internal_visibleTimeRange();\n    if (timeRange === null) {\n      return null;\n    }\n    return {\n      from: (_a = timeRange.from._internal_businessDay) !== null && _a !== void 0 ? _a : timeRange.from._internal_timestamp,\n      to: (_b = timeRange.to._internal_businessDay) !== null && _b !== void 0 ? _b : timeRange.to._internal_timestamp\n    };\n  }\n  setVisibleRange(range) {\n    const convertedRange = {\n      from: convertTime(range.from),\n      to: convertTime(range.to)\n    };\n    const logicalRange = this._private__timeScale._internal_logicalRangeForTimeRange(convertedRange);\n    this._private__model._internal_setTargetLogicalRange(logicalRange);\n  }\n  getVisibleLogicalRange() {\n    const logicalRange = this._private__timeScale._internal_visibleLogicalRange();\n    if (logicalRange === null) {\n      return null;\n    }\n    return {\n      from: logicalRange._internal_left(),\n      to: logicalRange._internal_right()\n    };\n  }\n  setVisibleLogicalRange(range) {\n    assert(range.from <= range.to, 'The from index cannot be after the to index.');\n    this._private__model._internal_setTargetLogicalRange(range);\n  }\n  resetTimeScale() {\n    this._private__model._internal_resetTimeScale();\n  }\n  fitContent() {\n    this._private__model._internal_fitContent();\n  }\n  logicalToCoordinate(logical) {\n    const timeScale = this._private__model._internal_timeScale();\n    if (timeScale._internal_isEmpty()) {\n      return null;\n    } else {\n      return timeScale._internal_indexToCoordinate(logical);\n    }\n  }\n  coordinateToLogical(x) {\n    if (this._private__timeScale._internal_isEmpty()) {\n      return null;\n    } else {\n      return this._private__timeScale._internal_coordinateToIndex(x);\n    }\n  }\n  timeToCoordinate(time) {\n    const timePoint = convertTime(time);\n    const timePointIndex = this._private__timeScale._internal_timeToIndex(timePoint, false);\n    if (timePointIndex === null) {\n      return null;\n    }\n    return this._private__timeScale._internal_indexToCoordinate(timePointIndex);\n  }\n  coordinateToTime(x) {\n    var _a;\n    const timeScale = this._private__model._internal_timeScale();\n    const timePointIndex = timeScale._internal_coordinateToIndex(x);\n    const timePoint = timeScale._internal_indexToTime(timePointIndex);\n    if (timePoint === null) {\n      return null;\n    }\n    return (_a = timePoint._internal_businessDay) !== null && _a !== void 0 ? _a : timePoint._internal_timestamp;\n  }\n  width() {\n    return this._private__timeAxisWidget._internal_getSize().width;\n  }\n  height() {\n    return this._private__timeAxisWidget._internal_getSize().height;\n  }\n  subscribeVisibleTimeRangeChange(handler) {\n    this._private__timeRangeChanged._internal_subscribe(handler);\n  }\n  unsubscribeVisibleTimeRangeChange(handler) {\n    this._private__timeRangeChanged._internal_unsubscribe(handler);\n  }\n  subscribeVisibleLogicalRangeChange(handler) {\n    this._private__logicalRangeChanged._internal_subscribe(handler);\n  }\n  unsubscribeVisibleLogicalRangeChange(handler) {\n    this._private__logicalRangeChanged._internal_unsubscribe(handler);\n  }\n  subscribeSizeChange(handler) {\n    this._private__sizeChanged._internal_subscribe(handler);\n  }\n  unsubscribeSizeChange(handler) {\n    this._private__sizeChanged._internal_unsubscribe(handler);\n  }\n  applyOptions(options) {\n    this._private__timeScale._internal_applyOptions(options);\n  }\n  options() {\n    return clone(this._private__timeScale._internal_options());\n  }\n  _private__onVisibleBarsChanged() {\n    if (this._private__timeRangeChanged._internal_hasListeners()) {\n      this._private__timeRangeChanged._internal_fire(this.getVisibleRange());\n    }\n  }\n  _private__onVisibleLogicalRangeChanged() {\n    if (this._private__logicalRangeChanged._internal_hasListeners()) {\n      this._private__logicalRangeChanged._internal_fire(this.getVisibleLogicalRange());\n    }\n  }\n  _private__onSizeChanged(size) {\n    this._private__sizeChanged._internal_fire(size.width, size.height);\n  }\n}\nfunction patchPriceFormat(priceFormat) {\n  if (priceFormat === undefined || priceFormat.type === 'custom') {\n    return;\n  }\n  const priceFormatBuiltIn = priceFormat;\n  if (priceFormatBuiltIn.minMove !== undefined && priceFormatBuiltIn.precision === undefined) {\n    priceFormatBuiltIn.precision = precisionByMinMove(priceFormatBuiltIn.minMove);\n  }\n}\nfunction migrateHandleScaleScrollOptions(options) {\n  if (isBoolean(options.handleScale)) {\n    const handleScale = options.handleScale;\n    options.handleScale = {\n      axisDoubleClickReset: {\n        time: handleScale,\n        price: handleScale\n      },\n      axisPressedMouseMove: {\n        time: handleScale,\n        price: handleScale\n      },\n      mouseWheel: handleScale,\n      pinch: handleScale\n    };\n  } else if (options.handleScale !== undefined) {\n    const {\n      axisPressedMouseMove,\n      axisDoubleClickReset\n    } = options.handleScale;\n    if (isBoolean(axisPressedMouseMove)) {\n      options.handleScale.axisPressedMouseMove = {\n        time: axisPressedMouseMove,\n        price: axisPressedMouseMove\n      };\n    }\n    if (isBoolean(axisDoubleClickReset)) {\n      options.handleScale.axisDoubleClickReset = {\n        time: axisDoubleClickReset,\n        price: axisDoubleClickReset\n      };\n    }\n  }\n  const handleScroll = options.handleScroll;\n  if (isBoolean(handleScroll)) {\n    options.handleScroll = {\n      horzTouchDrag: handleScroll,\n      vertTouchDrag: handleScroll,\n      mouseWheel: handleScroll,\n      pressedMouseMove: handleScroll\n    };\n  }\n}\nfunction toInternalOptions(options) {\n  migrateHandleScaleScrollOptions(options);\n  return options;\n}\nclass ChartApi {\n  constructor(container, options) {\n    this._private__dataLayer = new DataLayer();\n    this._private__seriesMap = new Map();\n    this._private__seriesMapReversed = new Map();\n    this._private__clickedDelegate = new Delegate();\n    this._private__crosshairMovedDelegate = new Delegate();\n    const internalOptions = options === undefined ? clone(chartOptionsDefaults) : merge(clone(chartOptionsDefaults), toInternalOptions(options));\n    this._private__chartWidget = new ChartWidget(container, internalOptions);\n    this._private__chartWidget._internal_clicked()._internal_subscribe(paramSupplier => {\n      if (this._private__clickedDelegate._internal_hasListeners()) {\n        this._private__clickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n      }\n    }, this);\n    this._private__chartWidget._internal_crosshairMoved()._internal_subscribe(paramSupplier => {\n      if (this._private__crosshairMovedDelegate._internal_hasListeners()) {\n        this._private__crosshairMovedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n      }\n    }, this);\n    const model = this._private__chartWidget._internal_model();\n    this._private__timeScaleApi = new TimeScaleApi(model, this._private__chartWidget._internal_timeAxisWidget());\n  }\n  remove() {\n    this._private__chartWidget._internal_clicked()._internal_unsubscribeAll(this);\n    this._private__chartWidget._internal_crosshairMoved()._internal_unsubscribeAll(this);\n    this._private__timeScaleApi._internal_destroy();\n    this._private__chartWidget._internal_destroy();\n    this._private__seriesMap.clear();\n    this._private__seriesMapReversed.clear();\n    this._private__clickedDelegate._internal_destroy();\n    this._private__crosshairMovedDelegate._internal_destroy();\n    this._private__dataLayer._internal_destroy();\n  }\n  resize(width, height, forceRepaint) {\n    if (this.autoSizeActive()) {\n      // We return early here instead of checking this within the actual _chartWidget.resize method\n      // because this should only apply to external resize requests.\n      warn(`Height and width values ignored because 'autoSize' option is enabled.`);\n      return;\n    }\n    this._private__chartWidget._internal_resize(width, height, forceRepaint);\n  }\n  addAreaSeries(options) {\n    return this._private__addSeriesImpl('Area', areaStyleDefaults, options);\n  }\n  addBaselineSeries(options) {\n    return this._private__addSeriesImpl('Baseline', baselineStyleDefaults, options);\n  }\n  addBarSeries(options) {\n    return this._private__addSeriesImpl('Bar', barStyleDefaults, options);\n  }\n  addCandlestickSeries(options = {}) {\n    fillUpDownCandlesticksColors(options);\n    return this._private__addSeriesImpl('Candlestick', candlestickStyleDefaults, options);\n  }\n  addHistogramSeries(options) {\n    return this._private__addSeriesImpl('Histogram', histogramStyleDefaults, options);\n  }\n  addLineSeries(options) {\n    return this._private__addSeriesImpl('Line', lineStyleDefaults, options);\n  }\n  removeSeries(seriesApi) {\n    const series = ensureDefined(this._private__seriesMap.get(seriesApi));\n    const update = this._private__dataLayer._internal_removeSeries(series);\n    const model = this._private__chartWidget._internal_model();\n    model._internal_removeSeries(series);\n    this._private__sendUpdateToChart(update);\n    this._private__seriesMap.delete(seriesApi);\n    this._private__seriesMapReversed.delete(series);\n  }\n  _internal_applyNewData(series, data) {\n    this._private__sendUpdateToChart(this._private__dataLayer._internal_setSeriesData(series, data));\n  }\n  _internal_updateData(series, data) {\n    this._private__sendUpdateToChart(this._private__dataLayer._internal_updateSeriesData(series, data));\n  }\n  subscribeClick(handler) {\n    this._private__clickedDelegate._internal_subscribe(handler);\n  }\n  unsubscribeClick(handler) {\n    this._private__clickedDelegate._internal_unsubscribe(handler);\n  }\n  subscribeCrosshairMove(handler) {\n    this._private__crosshairMovedDelegate._internal_subscribe(handler);\n  }\n  unsubscribeCrosshairMove(handler) {\n    this._private__crosshairMovedDelegate._internal_unsubscribe(handler);\n  }\n  priceScale(priceScaleId) {\n    return new PriceScaleApi(this._private__chartWidget, priceScaleId);\n  }\n  timeScale() {\n    return this._private__timeScaleApi;\n  }\n  applyOptions(options) {\n    this._private__chartWidget._internal_applyOptions(toInternalOptions(options));\n  }\n  options() {\n    return this._private__chartWidget._internal_options();\n  }\n  takeScreenshot() {\n    return this._private__chartWidget._internal_takeScreenshot();\n  }\n  autoSizeActive() {\n    return this._private__chartWidget._internal_autoSizeActive();\n  }\n  _private__addSeriesImpl(type, styleDefaults, options = {}) {\n    patchPriceFormat(options.priceFormat);\n    const strictOptions = merge(clone(seriesOptionsDefaults), clone(styleDefaults), options);\n    const series = this._private__chartWidget._internal_model()._internal_createSeries(type, strictOptions);\n    const res = new SeriesApi(series, this, this);\n    this._private__seriesMap.set(res, series);\n    this._private__seriesMapReversed.set(series, res);\n    return res;\n  }\n  _private__sendUpdateToChart(update) {\n    const model = this._private__chartWidget._internal_model();\n    model._internal_updateTimeScale(update._internal_timeScale._internal_baseIndex, update._internal_timeScale._internal_points, update._internal_timeScale._internal_firstChangedPointIndex);\n    update._internal_series.forEach((value, series) => series._internal_setData(value._internal_data, value._internal_info));\n    model._internal_recalculateAllPanes();\n  }\n  _private__mapSeriesToApi(series) {\n    return ensureDefined(this._private__seriesMapReversed.get(series));\n  }\n  _private__convertMouseParams(param) {\n    const seriesData = new Map();\n    param._internal_seriesData.forEach((plotRow, series) => {\n      const data = getSeriesDataCreator(series._internal_seriesType())(plotRow);\n      assert(isFulfilledData(data));\n      seriesData.set(this._private__mapSeriesToApi(series), data);\n    });\n    const hoveredSeries = param._internal_hoveredSeries === undefined ? undefined : this._private__mapSeriesToApi(param._internal_hoveredSeries);\n    return {\n      time: param._internal_time,\n      logical: param._internal_index,\n      point: param._internal_point,\n      hoveredSeries,\n      hoveredObjectId: param._internal_hoveredObject,\n      seriesData,\n      sourceEvent: param._internal_touchMouseEventData\n    };\n  }\n}\n\n/**\n * This function is the main entry point of the Lightweight Charting Library.\n *\n * @param container - ID of HTML element or element itself\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChart(container, options) {\n  let htmlElement;\n  if (isString(container)) {\n    const element = document.getElementById(container);\n    assert(element !== null, `Cannot find element in DOM with id=${container}`);\n    htmlElement = element;\n  } else {\n    htmlElement = container;\n  }\n  return new ChartApi(htmlElement, options);\n}\n\n/// <reference types=\"_build-time-constants\" />\n/**\n * Returns the current version as a string. For example `'3.3.0'`.\n */\nfunction version() {\n  return \"4.0.1\";\n}\nexport { ColorType, CrosshairMode, LastPriceAnimationMode, LineStyle, LineType, MismatchDirection, PriceLineSource, PriceScaleMode, TickMarkType, TrackingModeExitMode, createChart, isBusinessDay, isUTCTimestamp, version };","map":{"version":3,"names":["size","size$1","bindCanvasElementBitmapSizeTo","equalSizes","tryCreateCanvasRenderingTarget2D","LineType","LineStyle","setLineStyle","ctx","style","dashPatterns","lineWidth","dashPattern","setLineDash","drawHorizontalLine","y","left","right","beginPath","correction","moveTo","lineTo","stroke","drawVerticalLine","x","top","bottom","strokeInPixel","drawFunction","save","translate","restore","assert","condition","message","Error","ensureDefined","value","undefined","ensureNotNull","ensure","ensureNever","namedColorRgbHexStrings","khaki","azure","aliceblue","ghostwhite","gold","goldenrod","gainsboro","gray","green","honeydew","floralwhite","lightblue","lightcoral","lemonchiffon","hotpink","lightyellow","greenyellow","lightgoldenrodyellow","limegreen","linen","lightcyan","magenta","maroon","olive","orange","oldlace","mediumblue","transparent","lime","lightpink","mistyrose","moccasin","midnightblue","orchid","mediumorchid","mediumturquoise","orangered","royalblue","powderblue","red","coral","turquoise","white","whitesmoke","wheat","teal","steelblue","bisque","aquamarine","aqua","sienna","silver","springgreen","antiquewhite","burlywood","brown","beige","chocolate","chartreuse","cornflowerblue","cornsilk","crimson","cadetblue","tomato","fuchsia","blue","salmon","blanchedalmond","slateblue","slategray","thistle","tan","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","blueviolet","black","darkmagenta","darkslateblue","darkkhaki","darkorchid","darkorange","darkgreen","darkred","dodgerblue","darkslategray","dimgray","deepskyblue","firebrick","forestgreen","indigo","ivory","lavenderblush","feldspar","indianred","lightgreen","lightgrey","lightskyblue","lightslategray","lightslateblue","snow","lightseagreen","lightsalmon","darksalmon","darkviolet","mediumpurple","mediumaquamarine","skyblue","lavender","lightsteelblue","mediumvioletred","mintcream","navajowhite","navy","olivedrab","palevioletred","violetred","yellow","yellowgreen","lawngreen","pink","paleturquoise","palegoldenrod","darkolivegreen","darkseagreen","darkturquoise","peachpuff","deeppink","violet","palegreen","mediumseagreen","peru","saddlebrown","sandybrown","rosybrown","purple","seagreen","seashell","papayawhip","mediumslateblue","plum","mediumspringgreen","normalizeRgbComponent","component","Math","round","normalizeAlphaComponent","shortHexRe","hexRe","rgbRe","rgbaRe","colorStringToRgba","colorString","toLowerCase","matches","exec","parseInt","length","parseFloat","rgbaToGrayscale","rgbValue","redComponentGrayscaleWeight","greenComponentGrayscaleWeight","blueComponentGrayscaleWeight","applyAlpha","color","alpha","originRgba","originAlpha","generateContrastColors","backgroundColor","rgb","_internal_background","_internal_foreground","gradientColorAtPercent","topColor","bottomColor","percent","topR","topG","topB","topA","bottomR","bottomG","bottomB","bottomA","resultRgba","Delegate","constructor","_private__listeners","_internal_subscribe","callback","linkedObject","singleshot","listener","_internal_callback","_internal_linkedObject","_internal_singleshot","push","_internal_unsubscribe","index","findIndex","splice","_internal_unsubscribeAll","filter","_internal_fire","param1","param2","param3","listenersSnapshot","forEach","_internal_hasListeners","_internal_destroy","merge","dst","sources","src","i","isNumber","isFinite","isInteger","isString","isBoolean","clone","object","o","c","Array","isArray","p","v","hasOwnProperty","notNull","t","undefinedIfNull","defaultFontFamily","makeFont","family","PriceAxisRendererOptionsProvider","chartModel","_private__rendererOptions","_internal_borderSize","_internal_tickLength","_internal_fontSize","NaN","_internal_font","_internal_fontFamily","_internal_color","_internal_paneBackgroundColor","_internal_paddingBottom","_internal_paddingInner","_internal_paddingOuter","_internal_paddingTop","_internal_baselineOffset","_private__chartModel","_internal_options","rendererOptions","currentFontSize","_private__fontSize","currentFontFamily","_private__fontFamily","_private__textColor","_private__paneBackgroundColor","layout","textColor","_internal_backgroundTopColor","fontSize","fontFamily","CompositeRenderer","_private__renderers","_internal_setRenderers","renderers","_internal_draw","target","isHovered","hitTestData","r","MediaCoordinatesPaneRenderer","useMediaCoordinateSpace","scope","_internal__drawImpl","_internal_drawBackground","_internal__drawBackgroundImpl","renderingScope","PaneRendererMarks","arguments","_internal__data","_internal_setData","data","context","_internal_visibleRange","visibleRange","draw","radius","to","from","point","_internal_items","_internal_x","_internal_y","arc","PI","fill","_internal_lineWidth","fillStyle","_internal_backColor","_internal_radius","_internal_lineColor","createEmptyMarkerData","_internal_time","_internal_price","rangeForSinglePoint","CrosshairMarksPaneView","crosshair","_private__compositeRenderer","_private__markersRenderers","_private__markersData","_private__invalidated","_private__crosshair","_internal_update","updateType","serieses","_internal_serieses","map","res","_internal_renderer","_private__updateImpl","timePointIndex","_internal_appliedIndex","timeScale","_internal_timeScale","s","_a","seriesData","_internal_markerDataAtIndex","_internal_visible","firstValue","_internal_firstValue","_internal_backgroundColor","_internal_borderWidth","_internal_priceScale","_internal_priceToCoordinate","_internal_value","_internal_borderColor","_internal_backgroundColorAtYPercentFromTop","_internal_height","_internal_indexToCoordinate","BitmapCoordinatesPaneRenderer","useBitmapCoordinateSpace","CrosshairRenderer","_private__data","bitmapSize","horizontalPixelRatio","verticalPixelRatio","vertLinesVisible","_internal_vertLine","horzLinesVisible","_internal_horzLine","lineCap","floor","strokeStyle","_internal_lineStyle","height","width","CrosshairPaneView","source","_private__rendererData","_private__renderer","_private__source","visible","pane","_internal_pane","crosshairOptions","_internal_model","_internal_horzLineVisible","_internal_vertLineVisible","horzLine","vertLine","_internal_appliedX","_internal_appliedY","fillRectInnerBorder","borderWidth","fillRect","clearRect","w","h","clearColor","globalCompositeOperation","changeBorderRadius","borderRadius","offset","drawRoundRect","radii","radiusLeftTop","radiusRightTop","radiusRightBottom","radiusLeftBottom","oneRadius","max","cornerRadius1","cornerRadius2","arcTo","drawRoundRectWithInnerBorder","borderColor","halfBorderWidth","innerRadii","outerRadii","closePath","clearRectWithGradient","gradient","createLinearGradient","addColorStop","PriceAxisViewRenderer","commonData","_private__commonData","useSecondLine","textWidthCache","align","_internal_text","geometry","font","geom","_private__calculateGeometry","gb","_internal_bitmap","drawLabelBody","labelBackgroundColor","labelBorderColor","_internal_alignRight","_internal_xOutside","_internal_yTop","_internal_totalWidth","_internal_totalHeight","_internal_horzBorder","_internal_xInside","_internal_tickVisible","_internal_yMid","_internal_xTick","_internal_tickHeight","_internal_borderVisible","_internal_right","_internal_yBottom","gm","_internal_media","textAlign","textBaseline","fillText","_internal_xText","_internal_textMidCorrection","mediaSize","tickSize","_internal_moveTextToInvisibleTick","horzBorder","_internal_separatorVisible","paddingTop","_internal_additionalPaddingTop","paddingBottom","_internal_additionalPaddingBottom","paddingInner","paddingOuter","text","actualTextHeight","textMidCorrection","_internal_yMidCorrection","textWidth","ceil","_internal_measureText","totalHeight","totalWidth","tickHeightBitmap","totalHeightBitmap","horzBorderBitmap","totalWidthBitmap","tickSizeBitmap","yMid","_internal_fixedCoordinate","_internal_coordinate","yMidBitmap","yTopBitmap","yBottomBitmap","alignRight","xInside","xInsideBitmap","xOutsideBitmap","xTickBitmap","xText","PriceAxisView","ctor","_private__commonRendererData","_private__axisRendererData","_private__paneRendererData","_private__axisRenderer","_private__paneRenderer","_private__updateRendererDataIfNeeded","_internal_getFixedCoordinate","_internal_setFixedCoordinate","_internal_isVisible","_internal_isAxisLabelVisible","priceScale","ticksVisible","_internal_paneRenderer","_internal__updateRendererData","CrosshairPriceAxisView","valueProvider","_private__priceScale","_private__valueProvider","axisRendererData","paneRendererData","commonRendererData","options","labelVisible","_internal_isEmpty","colors","additionalPadding","_internal_formatPrice","optimizationReplacementRe","radius$1","TimeAxisViewRenderer","_internal_widthCache","horzMargin","_internal_paddingHorizontal","labelWidth","labelWidthHalf","timeScaleWidth","_internal_width","coordinate","x1","abs","x2","y1","y2","x1scaled","y1scaled","x2scaled","y2scaled","radiusScaled","tickX","tickTop","tickBottom","tickWidth","tickOffset","yText","textYCorrection","CrosshairTimeAxisView","model","_private__model","currentTime","_internal_indexToTimeScalePoint","_internal_formatDateTime","DataSource","_internal__priceScale","_private__zorder","_internal_zorder","_internal_setZorder","zorder","_internal_setPriceScale","_internal_labelPaneViews","_internal_timeAxisViews","CrosshairMode","Crosshair","_private__pane","_private__price","_private__index","_private__visible","_private__priceAxisViews","Map","_private__subscribed","_private__x","_private__y","_private__originX","_private__originY","_private__options","_private__markersPaneView","valuePriceProvider","rawPriceProvider","rawCoordinateProvider","rawPrice","_internal_defaultPriceScale","price","_internal_coordinateToPrice","valueTimeProvider","rawIndexProvider","time","_internal_indexToTime","Number","_private__currentPosPriceProvider","currentPosTimeProvider","_private__timeAxisView","_private__paneView","_internal_saveOriginCoord","_internal_clearOriginCoord","_internal_originCoordX","_internal_originCoordY","_internal_setPosition","_private__tryToUpdateViews","_internal_clearPosition","_private__setIndexToLastSeriesBarIndex","_internal_paneViews","_internal_priceAxisViews","clear","views","_private__createPriceAxisViewOnDemand","_internal_updateAllViews","_private__priceScaleByPane","_private__tryToUpdateData","newIndex","newPrice","newPane","oldX","oldY","oldPrice","oldIndex","oldPane","isNaN","lastIndexes","_internal_bars","_internal_lastIndex","lastBarIndex","view","get","set","isDefaultPriceScale","priceScaleId","mergePaneInvalidation","beforeValue","newValue","level","_internal_level","autoScale","_internal_autoScale","InvalidateMask","globalLevel","_private__invalidatedPanes","_private__timeScaleInvalidations","_private__globalLevel","_internal_invalidatePane","paneIndex","invalidation","prevValue","_internal_fullInvalidation","_internal_invalidateForPane","paneInvalidation","_internal_setFitContent","_internal_stopTimeScaleAnimation","_internal_type","_internal_applyRange","range","_internal_setTimeScaleAnimation","animation","_private__removeTimeScaleAnimation","_internal_resetTimeScale","_internal_setBarSpacing","barSpacing","_internal_setRightOffset","_internal_timeScaleInvalidations","_internal_merge","other","tsInvalidation","_private__applyTimeScaleInvalidation","_internal_light","_internal_full","inv","formatterOptions","_internal_decimalSign","_internal_decimalSignFractional","numberToStringWithLeadingZero","TypeError","toString","dummyString","slice","PriceFormatter","minMove","_private__minMove","_private__calculateDecimal","format","sign","_private__formatAsDecimal","_internal__fractionalLength","base","intPart","fracString","fracLength","fracPart","toFixed","PercentageFormatter","VolumeFormatter","precision","_private__precision","vol","_private__formatNumber","pow","replace","String","e","p1","walkLine","items","lineType","barWidth","styleGetter","finishStyledArea","firstItem","currentStyle","currentStyleFirstItem","halfBarWidth","item1","item2","changeStyle","newStyle","currentItem","itemStyle","cp1","cp2","getControlPoints","bezierCurveTo","curveTension","subtract","p2","add","divide","n","points","fromPointIndex","toPointIndex","beforeFromPointIndex","afterToPointIndex","min","finishStyledArea$1","baseLevelCoordinate","areaFirstItem","newAreaFirstItem","PaneRendererAreaBase","_internal_barWidth","lineStyle","_internal_lineType","_internal_baseLevelCoordinate","_internal_invertFilledArea","lineJoin","_internal__fillStyle","bind","PaneRendererArea","_private__fillCache","item","_internal_topColor","_internal_bottomColor","PaneRendererLineBase","_internal__strokeStyle","PaneRendererLine","lowerbound","arr","compare","start","count","count2","mid","upperbound","lowerBoundItemsCompare","upperBoundItemsCompare","visibleTimedValues","extendedRange","firstBar","_internal_left","lastBar","extendedFrom","extendedTo","SeriesPaneViewBase","series","extendedVisibleRange","_internal__invalidated","_internal__dataInvalidated","_internal__optionsInvalidated","_internal__items","_internal__itemsVisibleRange","_internal__series","_internal__model","_private__extendedVisibleRange","_private__makeValid","_internal__renderer","_internal__updateOptions","Object","assign","_internal_barColorer","_internal_barStyle","_internal__clearVisibleRange","_internal__fillRawPoints","_private__makeValidImpl","visibleBars","_internal_visibleStrictRange","_internal_size","_internal__convertToCoordinates","_internal__prepareRendererData","LinePaneViewBase","_internal_indexesToCoordinates","_internal_pointsArrayToCoordinates","_internal__createRawItemBase","colorer","_internal_rows","row","_internal__createRawItem","_internal_index","SeriesAreaPaneView","_private__areaRenderer","_private__lineRenderer","areaStyleProperties","invertFilledArea","_internal_barSpacing","optimalBarWidth","pixelRatio","optimalCandlestickWidth","barSpacingSpecialCaseFrom","barSpacingSpecialCaseTo","barSpacingSpecialCaseCoeff","barSpacingReducingCoeff","coeff","atan","scaledBarSpacing","optimal","PaneRendererBars","_private__barWidth","_private__barLineWidth","_private__calcBarWidth","_internal_thinBars","prevColor","drawOpenClose","bar","_internal_barColor","bodyWidthHalf","bodyCenter","bodyLeft","bodyWidth","bodyRight","high","_internal_highY","_internal_lowY","low","bodyTop","bodyBottom","bodyHeight","sideWidth","_internal_openVisible","openLeft","openTop","_internal_openY","openBottom","closeRight","closeTop","_internal_closeY","closeBottom","limit","BarsPaneViewBase","_internal_barPricesToCoordinates","_internal__createDefaultItem","_internal_open","_internal_high","_internal_low","_internal_close","SeriesBarsPaneView","barStyleProps","openVisible","thinBars","clamp","minVal","maxVal","isBaseDecimal","current","greaterOrEqual","epsilon","equal","log10","log","ceiledEven","ceiled","ceiledOdd","PaneRendererBaselineArea","_internal_topFillColor1","topFillColor1","_internal_topFillColor2","topFillColor2","_internal_bottomFillColor1","bottomFillColor1","_internal_bottomFillColor2","bottomFillColor2","baselinePercent","PaneRendererBaselineLine","_private__strokeCache","_internal_topLineColor","topLineColor","_internal_bottomLineColor","bottomLineColor","SeriesBaselinePaneView","_private__baselineAreaRenderer","_private__baselineLineRenderer","baselineProps","baseValue","PaneRendererCandlesticks","wickWidth","bars","_internal_wickVisible","_private__drawWicks","_private__drawBorder","_private__calculateBorderWidth","_private__drawCandles","prevWickColor","wickOffset","prevEdge","_internal_barWickColor","scaledX","prevBorderColor","_internal_barBorderColor","prevBarColor","barColor","SeriesCandlesticksPaneView","candlestickStyleProps","wickVisible","borderVisible","showSpacingMinimalBarWidth","alignToMinimalWidthLimit","PaneRendererHistogram","_private__precalculatedCache","_private__fillPrecalculatedCache","histogramBase","_internal_histogramBase","topHistogramBase","bottomHistogramBase","spacing","columnWidth","halfWidth","_internal_roundedCenter","_internal_center","prev","minWidth","SeriesHistogramPaneView","SeriesLinePaneView","lineStyleProps","defaultReplacementRe","TextWidthCache","_private__actualSize","_private__usageTick","_private__oldestTick","_private__tick2Labels","_private__cache","_private__maxSize","_internal_reset","_private__getMetrics","metrics","actualBoundingBoxAscent","actualBoundingBoxDescent","re","cacheString","has","_internal_metrics","oldestValue","delete","measureText","_internal_tick","PanePriceAxisViewRenderer","_private__priceAxisViewRenderer","_private__align","_private__textWidthCache","_internal_setParams","priceAxisViewRenderer","PanePriceAxisView","priceAxisView","dataSource","_private__priceAxisView","_private__dataSource","_internal_paneForSource","_internal_isOverlay","_internal_defaultVisiblePriceScale","position","_internal_priceScalePosition","_internal_priceAxisRendererOptions","HorizontalLineRenderer","_internal_hitTest","itemY","_internal_externalId","externalId","_internal_hitTestData","SeriesHorizontalLinePaneView","_internal__lineRendererData","_internal__lineRenderer","_internal__updateImpl","SeriesHorizontalBaseLinePaneView","mode","_internal_mode","seriesOptions","baseLineVisible","baseLineColor","baseLineWidth","baseLineStyle","SeriesLastPriceAnimationRenderer","_internal_data","centerX","centerY","_internal_seriesLineColor","centerPointRadius","_internal_seriesLineWidth","_internal_fillColor","_internal_strokeColor","animationStagesData","_internal_start","_internal_end","_internal_startRadius","_internal_endRadius","_internal_startFillAlpha","_internal_endFillAlpha","_internal_startStrokeAlpha","_internal_endStrokeAlpha","seriesLineColor","stage","startAlpha","endAlpha","startRadius","endRadius","animationData","durationSinceStart","lineColor","globalStage","currentStageData","stageData","subStage","SeriesLastPriceAnimationPaneView","_private__stageInvalidated","_private__startTime","performance","now","_private__endTime","_private__series","_internal_onDataCleared","_internal_onNewRealtimeDataReceived","lastPriceAnimation","timeToAnimationEnd","_internal_invalidateStage","_internal_animationActive","_private__updateRendererDataStage","lastValue","_internal_lastValueData","_internal_noData","_internal_contains","lastValuePoint","seriesLineWidth","_private__duration","rendererData","result","shapeSize","shape","originalSize","calculateShapeHeight","shapeMargin","drawSquare","squareSize","halfSize","hitTestSquare","drawArrow","up","arrowSize","halfArrowSize","baseSize","halfBaseSize","hitTestArrow","drawCircle","circleSize","hitTestCircle","tolerance","xOffset","yOffset","dist","sqrt","drawText","hitTestText","textX","textY","textHeight","halfHeight","SeriesMarkersRenderer","_private__font","hitTestItem","_internal_internalId","_internal_content","drawItem","drawShape","_internal_shape","hitTestShape","fillSizeAndY","rendererItem","marker","offsets","inBarPrice","highPrice","lowPrice","sizeMultiplier","_internal_aboveBar","_internal_belowBar","SeriesMarkersPaneView","_private__dataInvalidated","_private__autoScaleMarginsInvalidated","_private__autoScaleMargins","addAnchors","_internal__makeValid","_internal_autoScaleMargins","_internal_indexedMarkers","shapeMargin$1","marginsAboveAndBelow","above","below","seriesMarkers","internalId","id","layoutOptions","prevTimeIndex","dataAt","_internal_dataAt","SeriesPriceLinePaneView","priceLineVisible","lastValueData","priceLineSource","_internal_priceLineColor","priceLineWidth","priceLineStyle","SeriesPriceAxisView","showSeriesLastValue","lastValueVisible","showSymbolLabel","_internal_title","showPriceAndPercentage","seriesLastValueMode","_internal__axisText","_internal__paneText","lastValueColor","title","_internal_isPercentage","_internal_formattedPriceAbsolute","_internal_formattedPricePercentage","trim","PriceRangeImpl","minValue","maxValue","_private__minValue","_private__maxValue","_internal_equals","pr","_internal_clone","_internal_minValue","_internal_maxValue","_internal_length","anotherRange","_internal_scaleAroundCenter","delta","center","maxDelta","minDelta","_internal_shift","_internal_toRaw","_internal_fromRaw","raw","AutoscaleInfoImpl","priceRange","margins","_private__priceRange","_private__margins","_internal_priceRange","_internal_margins","CustomPriceLinePaneView","priceLine","_private__priceLine","lineOptions","lineVisible","_internal_yCoord","CustomPriceLinePriceAxisView","axisLabelVisible","showPaneLabel","_private__formatPrice","axisLabelColor","axisLabelTextColor","CustomPriceLine","_private__priceLineView","_private__panePriceAxisView","_internal_applyOptions","_internal_lightUpdate","_internal_paneView","_internal_labelPaneView","_internal_priceAxisView","PriceDataSource","barStyleFnMap","Bar","findBar","barStyle","barIndex","precomputedBars","upColor","downColor","currentBar","isUp","Candlestick","candlestickStyle","_b","_c","borderUpColor","borderDownColor","wickUpColor","wickDownColor","_internal_wickColor","Area","areaStyle","_d","Baseline","baselineStyle","_e","_f","isAboveBaseline","Line","Histogram","histogramStyle","SeriesBarColorer","_private__findBar","_internal_valueAt","_private__styleGetter","_internal_seriesType","MismatchDirection","CHUNK_SIZE","PlotList","_private__items","_private__minMaxCache","_private__rowSearchCache","_internal_last","_internal_firstIndex","_private__indexAt","_private__search","_internal_search","searchMode","pos","_private__valueAt","_internal_minMaxOnRangeCached","end","plots","plot","plotMinMax","_private__minMaxOnRangeCachedImpl","mergeMinMax","plotRows","exactPos","_private__bsearch","_private__searchNearestLeft","_private__searchNearestRight","nearestLeftPos","_private__lowerbound","nearestRightPos","_private__upperbound","a","b","_private__plotMinMax","startIndex","endIndexExclusive","plotIndex","values","_internal_min","_internal_max","firstIndex","lastIndex","cachedLow","cachedHigh","endIndex","minMaxCache","chunkIndex","chunkMinMax","chunkStart","chunkEnd","first","second","createSeriesPlotList","Series","seriesType","_private__customPriceLines","_private__baseHorizontalLineView","_private__lastPriceAnimationPaneView","_private__barColorerCache","_private__markers","_private__indexedMarkers","_private__animationTimeoutId","_private__seriesType","_private__recreateFormatter","_private__recreatePaneViews","clearTimeout","lastBarColor","priceLineColor","globalLast","noDataRes","endBar","barColorer","_internal_formatPriceAbsolute","_internal_formatPricePercentage","targetPriceScaleId","_internal_moveSeriesToScale","priceFormat","_internal_fullUpdate","_internal_updateSource","_internal_updateCrosshair","updateInfo","_private__recalculateMarkers","_internal_lastBarUpdatedOrNewBarsAddedToTheRight","sourcePane","_internal_recalculatePane","_internal_setMarkers","_internal_markers","_internal_createPriceLine","_internal_removePriceLine","line","indexOf","_internal_firstBar","_internal_timePoint","startTimePoint","prices","_internal_topPaneViews","animationPaneView","setTimeout","_internal_cursorUpdate","_private__isOverlay","priceLineViews","customPriceLine","_internal_autoscaleInfo","endTimePoint","autoscaleInfoProvider","autoscaleInfo","_private__autoscaleInfoImpl","_internal_minMove","_internal_formatter","_private__formatter","getValue","crosshairMarkerVisible","_private__markerRadius","_private__markerBorderColor","_private__markerBorderWidth","_private__markerBackgroundColor","_internal_id","barsMinMax","rangeWithBase","crosshairMarkerRadius","crosshairMarkerBorderColor","crosshairMarkerBorderWidth","crosshairMarkerBackgroundColor","type","formatter","_internal_updateFormatter","_internal_hasPoints","firstDataIndex","_internal_timeToIndex","seriesDataIndex","Magnet","_internal_align","defaultPriceScale","_internal_dataSources","ds","candidates","reduce","acc","ps","firstPrice","concat","sort","nearest","GridRenderer","_internal_vertLinesVisible","_internal_vertLinesColor","_internal_vertLineStyle","timeMark","_internal_timeMarks","_internal_coord","_internal_horzLinesVisible","_internal_horzLinesColor","_internal_horzLineStyle","priceMark","_internal_priceMarks","GridPaneView","gridOptions","grid","horzLines","vertLines","_internal_marks","Grid","defLogFormula","_internal_logicalOffset","_internal_coordOffset","fromPercent","toPercent","toPercentRange","minPercent","maxPercent","fromIndexedTo100","toIndexedTo100","toIndexedTo100Range","toLog","logFormula","m","fromLog","logical","convertPriceRangeToLog","canConvertPriceRangeFromLog","convertPriceRangeFromLog","logFormulaForPriceRange","diff","digits","logicalOffset","coordOffset","logFormulasAreSame","f1","f2","PriceTickSpanCalculator","integralDividers","_private__base","_private__integralDividers","_private__fractionalDividers","baseRest","_internal_tickSpan","maxTickSpan","minMovement","resultTickSpan","resultTickSpanLargerMinMovement","resultTickSpanLargerMaxTickSpan","resultTickSpanLarger1","haveToContinue","TICK_DENSITY","PriceTickMarkBuilder","coordinateToLogicalFunc","logicalToCoordinateFunc","_private__marks","_private__coordinateToLogicalFunc","_private__logicalToCoordinateFunc","scaleHeight","markHeight","_private__tickMarkHeight","spanCalculator1","spanCalculator2","spanCalculator3","spans","_internal_rebuildTickMarks","extraTopBottomMargin","entireTextOnly","_private__fontHeight","minCoord","maxCoord","span","mod","prevCoord","targetIndex","coord","_internal_label","_internal_formatLogical","_internal_isLog","sortSources","s1","s2","PriceScaleMode","percentageFormatter","defaultPriceFormatter","PriceScale","localizationOptions","_private__height","_private__internalHeightCache","_private__priceRangeSnapshot","_private__invalidatedForRange","_internal_isValid","_internal_visibleBars","_private__marginAbove","_private__marginBelow","_private__onMarksChanged","_private__modeChanged","_private__dataSources","_private__cachedOrderedSources","_private__marksCache","_private__scaleStartPoint","_private__scrollStartPoint","_private__logFormula","_private__id","_private__layoutOptions","_private__localizationOptions","_private__markBuilder","_private__coordinateToLogical","_private__logicalToCoordinate","_internal_setMode","scaleMargins","_private__invalidateInternalHeightCache","_internal_isAutoScale","_internal_isIndexedTo100","_internal_isInverted","invertScale","newMode","oldMode","_internal_setPriceRange","modeChanged","_private__onIsInvertedChanged","_internal_modeChanged","_internal_setHeight","_internal_internalHeight","_private__topMarginPx","_private__bottomMarginPx","_private__makeSureItIsValid","newPriceRange","isForceSetValue","oldPriceRange","_internal_invertedCoordinate","bh","ih","isInverted","hmm","fromIndex","toIndex","transformFn","_private__getCoordinateTransformer","invCoordinate","pricesList","openLogical","highLogical","lowLogical","closeLogical","_internal_logicalToPrice","_internal_orderedSources","_internal_addDataSource","_internal_invalidateSourcesCache","_internal_removeDataSource","firstValueIsNull","_internal_firstValueIsNull","marks","_internal_onMarksChanged","_internal_startScale","_internal_scaleTo","scaleCoeff","_internal_endScale","_internal_startScroll","_internal_scrollTo","priceUnitsPerPixel","pixelDelta","priceDelta","_internal_endScroll","_private__formatterSource","_internal_sourcesForAutoScale","_internal_recalculatePriceRange","formatterSource","_private__recalculatePriceRangeImpl","marginAbove","marginBelow","autoScaleInfo","sourceRange","extendValue","rawRange","newLogFormula","rawSnapshot","fallbackFormatter","priceFormatter","DEFAULT_STRETCH_FACTOR","Pane","_private__overlaySourcesByScaleId","_private__width","_private__stretchFactor","_private__destroyed","_private__timeScale","_private__grid","_private__leftPriceScale","_private__createPriceScale","leftPriceScale","_private__rightPriceScale","rightPriceScale","_private__onPriceScaleModeChanged","_internal_applyScaleOptions","localization","overlayPriceScales","sourceArrays","_internal_priceScaleById","_internal_priceScalesOptionsChanged","_internal_stretchFactor","_internal_setStretchFactor","factor","_internal_setWidth","_internal_updateAllSources","targetScaleId","zOrder","targetZOrder","_private__getZOrderMinMax","_internal_maxZOrder","_private__insertDataSource","overlaySources","overlayIndex","_internal_recalculatePriceScale","_internal_leftPriceScale","_internal_rightPriceScale","_internal_startScalePrice","_internal_scalePriceTo","_internal_endScalePrice","_internal_startScrollPrice","_internal_scrollPriceTo","_internal_endScrollPrice","_private__recalculatePriceScaleImpl","_internal_resetPriceScale","_internal_momentaryAutoScale","_internal_recalculate","_internal_onDestroyed","_internal_grid","sourceForAutoScale","_internal_minZOrder","minZOrder","maxZOrder","j","actualOptions","getMonth","date","getUTCMonth","getDay","getUTCDate","getYear","getUTCFullYear","dd","MMMM","locale","Date","toLocaleString","month","MMM","MM","yy","yyyy","formatDate","DateFormatter","dateFormat","_private__dateFormat","_private__locale","_internal_format","TimeFormatter","_private__formatStr","getUTCHours","getUTCMinutes","getUTCSeconds","defaultParams","_internal_dateFormat","_internal_timeFormat","_internal_dateTimeSeparator","_internal_locale","DateTimeFormatter","params","formatterParams","_private__dateFormatter","_private__timeFormatter","_private__separator","dateTime","defaultTickMarkFormatter","timePoint","tickMarkType","formatOptions","year","day","hour12","hour","minute","_internal_businessDay","_internal_timestamp","UTC","localDateFromUtc","getUTCMilliseconds","FormattedLabelsCache","_private__format","tickMark","cacheKey","getTime","tick","_internal_string","str","RangeImpl","_private__left","_private__right","_internal_count","areRangesEqual","TickMarks","_private__marksByWeight","_internal_setTimeScalePoints","newPoints","firstChangedPointIndex","_private__removeMarksSinceIndex","marksForWeight","_internal_timeWeight","_internal_weight","_internal_originalTime","_internal_build","maxWidth","maxIndexesPerMark","_internal_maxIndexesPerMark","_private__buildMarksImpl","sinceIndex","weightsToClear","timeWeight","tm","Infinity","weight","keys","prevMarks","prevMarksLength","prevMarksPointer","currentWeight","currentWeightLength","rightIndex","leftIndex","mark","currentIndex","lastMark","TimeScaleVisibleRange","logicalRange","_private__logicalRange","_internal_strictRange","_internal_logicalRange","_internal_invalid","TickMarkType","TimeScale","_private__baseIndexOrNull","_private__points","_private__tickMarks","_private__formattedByWeight","_private__visibleRange","_private__visibleRangeInvalidated","_private__visibleBarsChanged","_private__logicalRangeChanged","_private__optionsApplied","_private__commonTransitionStartState","_private__timeMarksCache","_private__labels","_private__rightOffset","rightOffset","_private__barSpacing","_private__updateDateTimeFormatter","_internal_applyLocalizationOptions","_private__invalidateTickMarks","fixLeftEdge","_private__doFixLeftEdge","fixRightEdge","_private__doFixRightEdge","minBarSpacing","findNearest","_private__updateVisibleRange","_internal_visibleLogicalRange","_internal_visibleTimeRange","_internal_timeRangeForLogicalRange","_private__firstIndex","_private__lastIndex","_internal_logicalRangeForTimeRange","newWidth","previousVisibleRange","oldWidth","lockVisibleTimeRangeOnResize","newBarSpacing","_private__correctBarSpacing","_private__correctOffset","baseIndex","_internal_baseIndex","deltaFromRight","indexFrom","indexTo","_internal_coordinateToIndex","_private__coordinateToFloatIndex","_internal_recalculateAllPanes","_private__setBarSpacing","_internal_rightOffset","maxLabelWidth","indexPerLabel","earliestIndexOfSecondLabel","indexOfSecondLastLabel","isAllScalingAndScrollingDisabled","_private__isAllScalingAndScrollingDisabled","isLeftEdgeFixed","isRightEdgeFixed","label","_private__formatLabel","_internal_needAlignCoordinate","_internal_restoreDefault","_internal_setBaseIndex","_internal_zoom","zoomPoint","scale","floatIndexAtZoomPoint","rightBarStaysOnScroll","_private__saveCommonTransitionsStartState","startLengthFromRight","currentLengthFromRight","_private__clearCommonTransitionsStartState","shiftInLogical","_internal_scrollToRealTime","_internal_scrollToOffsetAnimated","animationDuration","RangeError","animationStart","_internal_finished","_internal_getPosition","animationProgress","finishAnimation","_internal_visibleBarsChanged","_internal_logicalRangeChanged","_internal_optionsApplied","_internal_setVisibleRange","_internal_fitContent","last","_internal_setLogicalRange","barRange","timeScalePoint","timeFormatter","_private__dateTimeFormatter","handleScroll","handleScale","horzTouchDrag","mouseWheel","pressedMouseMove","vertTouchDrag","axisDoubleClickReset","axisPressedMouseMove","pinch","_private__rightOffsetForCoordinate","oldBarSpacing","_private__resetTimeMarksCache","_private__setVisibleRange","newBarsLength","rightBorder","leftBorder","_private__minBarSpacing","maxBarSpacing","maxRightOffset","_private__maxRightOffset","minRightOffset","_private__minRightOffset","barsEstimation","_private__formatLabelImpl","weightToTickMarkType","timeVisible","secondsVisible","tickMarkFormatter","tickMarkString","newVisibleRange","oldVisibleRange","leftEdgeOffset","WatermarkRenderer","_private__metricsCache","_internal_lines","_private__metrics","_internal_lineHeight","vertOffset","_internal_vertAlign","horzOffset","_internal_horzAlign","_internal_vertOffset","fontCache","_private__fontCache","WatermarkPaneView","horzAlign","vertAlign","fontStyle","Watermark","TrackingModeExitMode","ChartModel","invalidateHandler","_private__panes","_private__serieses","_private__hoveredSource","_private__priceScalesOptionsChanged","_private__crosshairMoved","_private__gradientColorsCache","_private__invalidateHandler","_private__rendererOptionsProvider","_private__magnet","_private__watermark","watermark","_internal_createPane","_private__backgroundTopColor","_private__getBackgroundColor","_private__backgroundBottomColor","_private__invalidate","_private__invalidationMaskForSource","_internal_hoveredSource","_internal_setHoveredSource","prevSource","_internal_source","_internal_applyPriceScaleOptions","_internal_findPriceScale","_internal_panes","_internal_watermarkSource","_internal_crosshairSource","_internal_crosshairMoved","_internal_setPaneHeight","actualIndex","mask","_private__paneInvalidationMask","_internal_startScaleTime","_internal_zoomTime","pointX","_internal_scrollChart","_internal_startScrollTime","_internal_scrollTimeTo","_internal_endScrollTime","_internal_scaleTimeTo","_internal_endScaleTime","_internal_setAndSaveCurrentPosition","event","_internal_clearCurrentPosition","_internal_updateTimeScale","newBaseIndex","oldFirstTime","newFirstTime","currentBaseIndex","isLastSeriesBarVisible","isLeftBarShiftToLeft","isSeriesPointsAdded","isSeriesPointsAddedToRight","needShiftVisibleRangeOnNewBar","shiftVisibleRangeOnNewBar","compensationShift","find","includes","_internal_rendererOptionsProvider","_internal_createSeries","_private__createSeries","_internal_removeSeries","seriesIndex","_internal_setTargetLogicalRange","_internal_defaultVisiblePriceScaleId","_internal_backgroundBottomColor","_internal_colors","cachedValue","invalidateType","side","background","fillUpDownCandlesticksColors","wickColor","LastPriceAnimationMode","precisionByMinMove","fractPart","PriceLineSource","ColorType","isBusinessDay","isUTCTimestamp","isWhitespaceData","open","isFulfilledData","isRunningOnClientSide","window","isFF","navigator","userAgent","isIOS","test","platform","isChrome","chrome","isWindows","userAgentData","isChromiumBased","brands","some","brand","warn","msg","console","suggestChartSize","integerWidth","integerHeight","suggestTimeScaleHeight","originalHeight","suggestPriceScaleWidth","originalWidth","distanceBetweenPoints","pos1","pos2","_internal_position","speedPxPerMSec","maxSpeed","speed","durationMSec","dumpingCoeff","lnDumpingCoeff","KineticAnimation","minSpeed","_private__position1","_private__position2","_private__position3","_private__position4","_private__animationStartPosition","_private__durationMsecs","_private__speedPxPerMsec","_private__minSpeed","_private__maxSpeed","_private__dumpingCoeff","_internal_addPosition","totalDistance","speed1","distance1","speedItems","distanceItems","speed2","distance2","speed3","distance3","resultSpeed","startPosition","durationMsecs","_private__progressDuration","progress","createBoundCanvas","parentElement","doc","ownerDocument","canvas","createElement","appendChild","binding","allowResizeObserver","transform","canvasElementClientSize","resizeCanvasElement","preventScrollByWheelClick","el","addEventListener","button","preventDefault","MouseEventHandler","handler","_private__clickCount","_private__clickTimeoutId","_private__clickPosition","NEGATIVE_INFINITY","POSITIVE_INFINITY","_private__tapCount","_private__tapTimeoutId","_private__tapPosition","_private__longTapTimeoutId","_private__longTapActive","_private__mouseMoveStartPosition","_private__touchMoveStartPosition","_private__touchMoveExceededManhattanDistance","_private__cancelClick","_private__cancelTap","_private__unsubscribeOutsideMouseEvents","_private__unsubscribeOutsideTouchEvents","_private__unsubscribeMobileSafariEvents","_private__unsubscribeMousemove","_private__unsubscribeRootMouseEvents","_private__unsubscribeRootTouchEvents","_private__startPinchMiddlePoint","_private__startPinchDistance","_private__pinchPrevented","_private__preventTouchDragProcess","_private__mousePressed","_private__lastTouchEventTimeStamp","_private__activeTouchId","_private__acceptMouseLeave","_private__onFirefoxOutsideMouseUp","mouseUpEvent","_private__mouseUpHandler","_private__onMobileSafariDoubleClick","dblClickEvent","_private__firesTouchEvents","compatEvent","_private__makeCompatEvent","_internal_manhattanDistance","manhattanDistance","_private__touchMouseMoveWithDownInfo","getPosition","_private__processTouchEvent","_private__handler","_internal_doubleTapEvent","_private__resetTapTimeout","_private__processMouseEvent","_internal_mouseDoubleClickEvent","_private__resetClickTimeout","_private__target","_private__init","_private__clearLongTapTimeout","_private__mouseEnterHandler","enterEvent","boundMouseMoveHandler","_private__mouseMoveHandler","removeEventListener","_internal_mouseEnterEvent","moveEvent","_internal_mouseMoveEvent","_private__touchMoveHandler","touch","touchWithId","changedTouches","eventTimeStamp","moveInfo","_internal_xOffset","_internal_yOffset","correctedXOffset","isVertDrag","_internal_treatVertTouchDragAsPageScroll","isHorzDrag","_internal_treatHorzTouchDragAsPageScroll","_internal_touchMoveEvent","_private__mouseMoveWithDownHandler","_internal_pressedMouseMoveEvent","currentPosition","_private__touchEndHandler","touchEndEvent","touches","_internal_touchEndEvent","_internal_tapEvent","rootElement","documentElement","_internal_mouseUpEvent","_internal_mouseClickEvent","_private__touchStartHandler","downEvent","identifier","boundTouchMoveWithDownHandler","boundTouchEndHandler","passive","_private__longTapHandler","_internal_touchStartEvent","_private__mouseDownHandler","boundMouseMoveWithDownHandler","boundMouseUpHandler","_internal_mouseDownEvent","outsideHandler","_internal_mouseDownOutsideEvent","composed","contains","composedPath","_private__mouseLeaveHandler","_private__initPinch","_internal_pinchStartEvent","_internal_pinchEvent","_internal_pinchEndEvent","_private__checkPinchState","currentDistance","getDistance","_private__stopPinch","_private__startPinch","box","getBoundingClientRect","clientX","clientY","_internal_mouseLeaveEvent","_internal_longTapEvent","sourceCapabilities","firesTouchEvents","call","eventLike","pageX","pageY","screenX","screenY","localX","localY","ctrlKey","altKey","shiftKey","metaKey","_internal_isTouch","startsWith","_internal_srcType","_internal_target","_internal_view","_internal_preventDefault","element","xDiff","yDiff","cancelable","timeStamp","PriceAxisWidget","rendererOptionsProvider","_private__size","_private__mousedown","_private__widthCache","_private__prevOptimalWidth","_private__isSettingSize","_private__canvasSuggestedBitmapSizeChangedHandler","_internal_chart","_private__topCanvasSuggestedBitmapSizeChangedHandler","_private__isLeft","_private__cell","document","overflow","_private__canvasBinding","subscribeSuggestedBitmapSizeChanged","canvasElement","zIndex","_private__topCanvasBinding","topCanvas","_private__mouseDownEvent","_private__pressedMouseMoveEvent","_private__mouseDownOutsideEvent","_private__mouseUpEvent","_private__mouseDoubleClickEvent","_private__mouseEnterEvent","_private__mouseLeaveEvent","_private__mouseEventHandler","unsubscribeSuggestedBitmapSizeChanged","dispose","_internal_getElement","_internal_rendererOptions","isFontChanged","_internal_optimalWidth","tickMarkMaxWidth","getContext","tickMarks","_private__baseFont","_private__backLabels","topValue","bottomValue","resultTickMarksMaxWidth","_internal_setSize","newSize","_internal_getWidth","_internal_state","_internal_paint","_private__alignLabels","applySuggestedBitmapSize","_private__drawBackground","_private__drawTickMarks","_private__drawBackLabels","topTarget","_private__drawCrosshairLabel","_internal_getBitmapSize","_internal_drawBitmap","drawImage","_private__setCursor","addViewsForSources","borderSize","priceScaleOptions","tickMarkLeftX","tickHeight","tickLength","rect","textLeftX","yMidCorrections","orderedSources","paneState","isDefault","centerSource","updateForSources","sourceViews","alignLabels","_private__fixLabelOverlap","l","prevFixedCoordinate","renderer","ro","cursor","drawBackground","drawForeground","sourcePaneViews","sourceLabelPaneViews","sourceTopPaneViews","PaneWidget","chart","state","_private__leftPriceAxisWidget","_private__rightPriceAxisWidget","_private__startScrollingPos","_private__isScrolling","_private__clicked","_private__prevPinchScale","_private__longTap","_private__startTrackPoint","_private__exitTrackingModeOnNextTry","_private__initCrosshairPosition","_private__scrollXAnimation","_private__state","_private__chart","_private__onStateDestroyed","_private__paneCell","padding","paneWrapper","_private__leftAxisCell","_private__rightAxisCell","_private__rowElement","_internal_updatePriceAxisWidgetsStates","_internal_setState","prototype","_private__recreatePriceAxisWidgets","_internal_updatePriceAxisWidgets","stretchFactor","_private__onMouseEvent","_private__setCrosshairPosition","_private__mouseTouchDownEvent","hitTest","_internal_object","_private__fireClickedDelegate","_private__pressedMouseTouchMoveEvent","_private__endScroll","_private__startTrackingMode","_private__clearCrosshairPosition","_internal_clicked","middlePoint","zoomScale","origPoint","newX","newY","trackingMode","exitMode","_private__tryExitTrackingMode","sourceResult","_private__hitTestPaneView","_internal_setPriceAxisSize","priceAxisWidget","_internal_getSize","_internal_recalculatePriceScales","_private__drawGrid","_private__drawWatermark","_private__drawSources","_private__drawCrosshair","_internal_leftPriceAxisWidget","_internal_rightPriceAxisWidget","paneView","_private__drawSourceImpl","paneViewsGetter","drawFn","paneViews","hoveredSource","objecId","leftAxisVisible","rightAxisVisible","removeChild","_private__preventScroll","_private__correctXCoord","_private__correctYCoord","startTrackPoint","crossHairPosition","startAnimationTime","activeElement","body","blur","selection","getSelection","removeAllRanges","chartOptions","scrollOptions","kineticScrollOptions","kineticScroll","_internal_localX","_internal_localY","mouse","PriceAxisStub","_private__borderVisible","_private__bottomColor","horzBorderSize","vertBorderSize","markWithGreaterWeight","TimeAxisWidget","chartWidget","_private__leftStub","_private__rightStub","_private__mouseDown","_private__sizeChanged","_private__element","_private__leftStubCell","_private__rightStubCell","_private__dv","_private__recreateStubs","_internal_leftStub","_internal_rightStub","_internal_sizeChanged","_internal_setSizes","timeAxisSize","leftStubWidth","rightStubWidth","_internal_optimalHeight","_private__getRendererOptions","_internal_labelBottomOffset","_private__drawLabels","_private__lineColor","maxWeight","tickLen","_private__alignTickMarkLabelCoordinate","_private__baseBoldFont","labelText","leftTextCoordinate","newFont","borderVisibleGetter","bottomColorGetter","windowsChrome","ChartWidget","container","_private__paneWidgets","_private__drawRafId","_private__leftPriceAxisWidth","_private__rightPriceAxisWidth","_private__invalidateMask","_private__drawPlanned","_private__observer","_private__container","classList","disableSelection","_private__tableElement","setAttribute","_private__onWheelBound","_private__onMousewheel","shouldSubscribeMouseWheel","_private__setMouseWheelEventListener","_private__onPaneWidgetCrosshairMoved","_private__timeAxisWidget","usedObserver","autoSize","_private__installObserver","containerRect","_internal_resize","_private__syncGuiWithModel","_private__updateTimeAxisVisibility","_internal_paneWidgets","_internal_timeAxisWidget","cancelAnimationFrame","paneWidget","_private__uninstallObserver","forceRepaint","sizeHint","heightStr","widthStr","_private__drawImpl","invalidateMask","currentlyHasMouseWheelListener","shouldHaveMouseWheelListener","_private__applyAutoSizeOptions","_internal_takeScreenshot","screeshotBitmapSize","_private__traverseLayout","screenshotCanvas","_internal_getPriceAxisWidth","_private__isLeftAxisVisible","_private__isRightAxisVisible","_internal_autoSizeActive","firstPane","drawPriceAxises","targetX","targetY","leftAxisBitmapWidth","firstPaneBitmapWidth","rightAxisBitmapWidth","drawStub","stub","timeAxisBitmapSize","_private__adjustSizeImpl","totalStretch","leftPriceAxisWidth","rightPriceAxisWidth","paneWidth","separatorsHeight","timeAxisVisible","timeAxisHeight","otherWidgetHeight","totalPaneHeight","stretchPixels","accumulatedHeight","paneHeight","calculatePaneHeight","_private__determineWheelSpeedAdjustment","deltaMode","DOM_DELTA_PAGE","DOM_DELTA_LINE","devicePixelRatio","deltaX","deltaY","scrollSpeedAdjustment","scrollPosition","invalidationType","_private__updateGui","_private__applyMomentaryAutoScale","_private__applyTimeScaleInvalidations","panes","requestAnimationFrame","targetPaneWidgetsCount","actualPaneWidgetsCount","pop","_private__onPaneWidgetClicked","insertBefore","_private__getMouseEventParamsImpl","clientTime","hoveredSeries","hoveredObject","_internal_point","_internal_hoveredSeries","_internal_seriesData","_internal_hoveredObject","_internal_touchMouseEventData","display","ResizeObserver","entries","containerEntry","entry","contentRect","observe","disconnect","userSelect","webkitUserSelect","msUserSelect","MozUserSelect","webkitTapHighlightColor","Boolean","getColoredLineBasedSeriesPlotRow","originalTime","val","getAreaSeriesPlotRow","getBaselineSeriesPlotRow","getBarSeriesPlotRow","close","getCandlestickSeriesPlotRow","isSeriesPlotRow","wrapWhitespaceData","createPlotRowFn","seriesPlotRowFnMap","getSeriesPlotRowCreator","hours","minutes","seconds","intradayWeightDivisors","_internal_divisor","weightByTime","currentDate","prevDate","fillWeightsForPoints","sortedTimePoints","prevTime","totalTimeDiff","currentPoint","averageTimeDiff","approxPrevDate","businessDayConverter","timestampConverter","selectTimeConverter","convertTime","stringToBusinessDay","validDateRegex","d","convertStringToBusinessDay","convertStringsToBusinessDays","createEmptyTimePointData","_internal_mapping","seriesRowsFirsAndLastTime","seriesRows","_internal_firstTime","_internal_lastTime","seriesUpdateInfo","prevSeriesRows","firstAndLastTime","prevFirstAndLastTime","timeScalePointTime","mergedPointData","saveOriginalTime","DataLayer","_private__pointDataByTimePoint","_private__seriesRowsBySeries","_private__seriesLastTimePoint","_private__sortedTimePoints","_internal_setSeriesData","needCleanupPoints","isTimeScaleAffected","pointData","extendedData","timeConverter","createPlotRow","timePointData","_private__cleanupPointsData","_private__setRowsToSeries","newTimeScalePoints","t1","t2","_private__replaceTimeScalePoints","_private__getUpdateResponse","_internal_updateSeriesData","lastSeriesTime","pointDataAtTime","affectsTimeScale","plotRow","_private__updateLastSeriesRow","info","newPoint","insertIndex","assignIndexToPointData","lastSeriesRow","newTimePoints","oldPoint","_private__getBaseIndex","updatedSeries","dataUpdateResponse","_internal_series","_internal_info","_internal_points","_internal_firstChangedPointIndex","seriesRow","singleValueData","lineData","areaData","baselineData","ohlcData","barData","candlestickData","seriesPlotRowToDataMap","getSeriesDataCreator","crosshairOptionsDefaults","gridOptionsDefaults","layoutOptionsDefaults","priceScaleOptionsDefaults","timeScaleOptionsDefaults","watermarkOptionsDefaults","chartOptionsDefaults","language","candlestickStyleDefaults","barStyleDefaults","lineStyleDefaults","areaStyleDefaults","baselineStyleDefaults","histogramStyleDefaults","seriesOptionsDefaults","PriceScaleApi","_private__chartWidget","_private__priceScaleId","applyOptions","__rest","getOwnPropertySymbols","propertyIsEnumerable","checkPriceLineOptions","checkItemsAreOrdered","allowDuplicates","checkResult","checkSeriesValuesType","getChecker","checkBarItem","checkLineItem","barItem","lineItem","priceLineOptionsDefaults","PriceLine","_internal_priceLine","SeriesApi","dataUpdatesConsumer","priceScaleApiProvider","_internal__dataUpdatesConsumer","_private__priceScaleApiProvider","priceToCoordinate","coordinateToPrice","barsInLogicalRange","correctedRange","dataFirstBarInRange","dataLastBarInRange","dataFirstIndex","dataLastIndex","barsBefore","barsAfter","setData","_internal_applyNewData","update","_internal_updateData","dataByIndex","logicalIndex","mismatchDirection","setMarkers","convertedMarkers","markers","internalItem","createPriceLine","strictOptions","removePriceLine","TimeScaleApi","timeAxisWidget","_private__timeRangeChanged","_private__onVisibleBarsChanged","_private__onVisibleLogicalRangeChanged","_private__onSizeChanged","scrollToPosition","animated","scrollToRealTime","getVisibleRange","timeRange","setVisibleRange","convertedRange","getVisibleLogicalRange","setVisibleLogicalRange","resetTimeScale","fitContent","logicalToCoordinate","coordinateToLogical","timeToCoordinate","coordinateToTime","subscribeVisibleTimeRangeChange","unsubscribeVisibleTimeRangeChange","subscribeVisibleLogicalRangeChange","unsubscribeVisibleLogicalRangeChange","subscribeSizeChange","unsubscribeSizeChange","patchPriceFormat","priceFormatBuiltIn","migrateHandleScaleScrollOptions","toInternalOptions","ChartApi","_private__dataLayer","_private__seriesMap","_private__seriesMapReversed","_private__clickedDelegate","_private__crosshairMovedDelegate","internalOptions","paramSupplier","_private__convertMouseParams","_private__timeScaleApi","remove","resize","autoSizeActive","addAreaSeries","_private__addSeriesImpl","addBaselineSeries","addBarSeries","addCandlestickSeries","addHistogramSeries","addLineSeries","removeSeries","seriesApi","_private__sendUpdateToChart","subscribeClick","unsubscribeClick","subscribeCrosshairMove","unsubscribeCrosshairMove","takeScreenshot","styleDefaults","_private__mapSeriesToApi","param","hoveredObjectId","sourceEvent","createChart","htmlElement","getElementById","version"],"sources":["C:/Users/nilaksh/Desktop/fsd-individual/node_modules/lightweight-charts/dist/lightweight-charts.development.mjs"],"sourcesContent":["/*!\n * @license\n * TradingView Lightweight Chartsâ„¢ v4.0.1\n * Copyright (c) 2023 TradingView, Inc.\n * Licensed under Apache License 2.0 https://www.apache.org/licenses/LICENSE-2.0\n */\nimport { size as size$1, bindCanvasElementBitmapSizeTo, equalSizes, tryCreateCanvasRenderingTarget2D } from 'fancy-canvas';\n\n/**\n * Represents the possible line types.\n */\nvar LineType;\n(function (LineType) {\n    /**\n     * A line.\n     */\n    LineType[LineType[\"Simple\"] = 0] = \"Simple\";\n    /**\n     * A stepped line.\n     */\n    LineType[LineType[\"WithSteps\"] = 1] = \"WithSteps\";\n    /**\n     * A curved line.\n     */\n    LineType[LineType[\"Curved\"] = 2] = \"Curved\";\n})(LineType || (LineType = {}));\n/**\n * Represents the possible line styles.\n */\nvar LineStyle;\n(function (LineStyle) {\n    /**\n     * A solid line.\n     */\n    LineStyle[LineStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * A dotted line.\n     */\n    LineStyle[LineStyle[\"Dotted\"] = 1] = \"Dotted\";\n    /**\n     * A dashed line.\n     */\n    LineStyle[LineStyle[\"Dashed\"] = 2] = \"Dashed\";\n    /**\n     * A dashed line with bigger dashes.\n     */\n    LineStyle[LineStyle[\"LargeDashed\"] = 3] = \"LargeDashed\";\n    /**\n     * A dottled line with more space between dots.\n     */\n    LineStyle[LineStyle[\"SparseDotted\"] = 4] = \"SparseDotted\";\n})(LineStyle || (LineStyle = {}));\nfunction setLineStyle(ctx, style) {\n    const dashPatterns = {\n        [0 /* LineStyle.Solid */]: [],\n        [1 /* LineStyle.Dotted */]: [ctx.lineWidth, ctx.lineWidth],\n        [2 /* LineStyle.Dashed */]: [2 * ctx.lineWidth, 2 * ctx.lineWidth],\n        [3 /* LineStyle.LargeDashed */]: [6 * ctx.lineWidth, 6 * ctx.lineWidth],\n        [4 /* LineStyle.SparseDotted */]: [ctx.lineWidth, 4 * ctx.lineWidth],\n    };\n    const dashPattern = dashPatterns[style];\n    ctx.setLineDash(dashPattern);\n}\nfunction drawHorizontalLine(ctx, y, left, right) {\n    ctx.beginPath();\n    const correction = (ctx.lineWidth % 2) ? 0.5 : 0;\n    ctx.moveTo(left, y + correction);\n    ctx.lineTo(right, y + correction);\n    ctx.stroke();\n}\nfunction drawVerticalLine(ctx, x, top, bottom) {\n    ctx.beginPath();\n    const correction = (ctx.lineWidth % 2) ? 0.5 : 0;\n    ctx.moveTo(x + correction, top);\n    ctx.lineTo(x + correction, bottom);\n    ctx.stroke();\n}\nfunction strokeInPixel(ctx, drawFunction) {\n    ctx.save();\n    if (ctx.lineWidth % 2) {\n        ctx.translate(0.5, 0.5);\n    }\n    drawFunction();\n    ctx.restore();\n}\n\n/**\n * Checks an assertion. Throws if the assertion is failed.\n *\n * @param condition - Result of the assertion evaluation\n * @param message - Text to include in the exception message\n */\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error('Assertion failed' + (message ? ': ' + message : ''));\n    }\n}\nfunction ensureDefined(value) {\n    if (value === undefined) {\n        throw new Error('Value is undefined');\n    }\n    return value;\n}\nfunction ensureNotNull(value) {\n    if (value === null) {\n        throw new Error('Value is null');\n    }\n    return value;\n}\nfunction ensure(value) {\n    return ensureNotNull(ensureDefined(value));\n}\n/**\n * Compile time check for never\n */\nfunction ensureNever(value) { }\n\n/**\n * Note this object should be explicitly marked as public so that dts-bundle-generator does not mangle the property names.\n *\n * @public\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n */\nconst namedColorRgbHexStrings = {\n    // The order of properties in this Record is not important for the internal logic.\n    // It's just GZIPped better when props follows this order.\n    // Please add new colors to the end of the record.\n    khaki: '#f0e68c',\n    azure: '#f0ffff',\n    aliceblue: '#f0f8ff',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gainsboro: '#dcdcdc',\n    gray: '#808080',\n    green: '#008000',\n    honeydew: '#f0fff0',\n    floralwhite: '#fffaf0',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lemonchiffon: '#fffacd',\n    hotpink: '#ff69b4',\n    lightyellow: '#ffffe0',\n    greenyellow: '#adff2f',\n    lightgoldenrodyellow: '#fafad2',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    lightcyan: '#e0ffff',\n    magenta: '#f0f',\n    maroon: '#800000',\n    olive: '#808000',\n    orange: '#ffa500',\n    oldlace: '#fdf5e6',\n    mediumblue: '#0000cd',\n    transparent: '#0000',\n    lime: '#0f0',\n    lightpink: '#ffb6c1',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    midnightblue: '#191970',\n    orchid: '#da70d6',\n    mediumorchid: '#ba55d3',\n    mediumturquoise: '#48d1cc',\n    orangered: '#ff4500',\n    royalblue: '#4169e1',\n    powderblue: '#b0e0e6',\n    red: '#f00',\n    coral: '#ff7f50',\n    turquoise: '#40e0d0',\n    white: '#fff',\n    whitesmoke: '#f5f5f5',\n    wheat: '#f5deb3',\n    teal: '#008080',\n    steelblue: '#4682b4',\n    bisque: '#ffe4c4',\n    aquamarine: '#7fffd4',\n    aqua: '#0ff',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    springgreen: '#00ff7f',\n    antiquewhite: '#faebd7',\n    burlywood: '#deb887',\n    brown: '#a52a2a',\n    beige: '#f5f5dc',\n    chocolate: '#d2691e',\n    chartreuse: '#7fff00',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cadetblue: '#5f9ea0',\n    tomato: '#ff6347',\n    fuchsia: '#f0f',\n    blue: '#00f',\n    salmon: '#fa8072',\n    blanchedalmond: '#ffebcd',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    thistle: '#d8bfd8',\n    tan: '#d2b48c',\n    cyan: '#0ff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    blueviolet: '#8a2be2',\n    black: '#000',\n    darkmagenta: '#8b008b',\n    darkslateblue: '#483d8b',\n    darkkhaki: '#bdb76b',\n    darkorchid: '#9932cc',\n    darkorange: '#ff8c00',\n    darkgreen: '#006400',\n    darkred: '#8b0000',\n    dodgerblue: '#1e90ff',\n    darkslategray: '#2f4f4f',\n    dimgray: '#696969',\n    deepskyblue: '#00bfff',\n    firebrick: '#b22222',\n    forestgreen: '#228b22',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    lavenderblush: '#fff0f5',\n    feldspar: '#d19275',\n    indianred: '#cd5c5c',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightskyblue: '#87cefa',\n    lightslategray: '#789',\n    lightslateblue: '#8470ff',\n    snow: '#fffafa',\n    lightseagreen: '#20b2aa',\n    lightsalmon: '#ffa07a',\n    darksalmon: '#e9967a',\n    darkviolet: '#9400d3',\n    mediumpurple: '#9370d8',\n    mediumaquamarine: '#66cdaa',\n    skyblue: '#87ceeb',\n    lavender: '#e6e6fa',\n    lightsteelblue: '#b0c4de',\n    mediumvioletred: '#c71585',\n    mintcream: '#f5fffa',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    olivedrab: '#6b8e23',\n    palevioletred: '#d87093',\n    violetred: '#d02090',\n    yellow: '#ff0',\n    yellowgreen: '#9acd32',\n    lawngreen: '#7cfc00',\n    pink: '#ffc0cb',\n    paleturquoise: '#afeeee',\n    palegoldenrod: '#eee8aa',\n    darkolivegreen: '#556b2f',\n    darkseagreen: '#8fbc8f',\n    darkturquoise: '#00ced1',\n    peachpuff: '#ffdab9',\n    deeppink: '#ff1493',\n    violet: '#ee82ee',\n    palegreen: '#98fb98',\n    mediumseagreen: '#3cb371',\n    peru: '#cd853f',\n    saddlebrown: '#8b4513',\n    sandybrown: '#f4a460',\n    rosybrown: '#bc8f8f',\n    purple: '#800080',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    papayawhip: '#ffefd5',\n    mediumslateblue: '#7b68ee',\n    plum: '#dda0dd',\n    mediumspringgreen: '#00fa9a',\n};\nfunction normalizeRgbComponent(component) {\n    if (component < 0) {\n        return 0;\n    }\n    if (component > 255) {\n        return 255;\n    }\n    // NaN values are treated as 0\n    return (Math.round(component) || 0);\n}\nfunction normalizeAlphaComponent(component) {\n    return (!(component <= 0) && !(component > 0) ? 0 :\n        component < 0 ? 0 :\n            component > 1 ? 1 :\n                // limit the precision of all numbers to at most 4 digits in fractional part\n                Math.round(component * 10000) / 10000);\n}\n/**\n * @example\n * #fb0\n * @example\n * #f0f\n * @example\n * #f0fa\n */\nconst shortHexRe = /^#([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])?$/i;\n/**\n * @example\n * #00ff00\n * @example\n * #336699\n * @example\n * #336699FA\n */\nconst hexRe = /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})?$/i;\n/**\n * @example\n * rgb(123, 234, 45)\n * @example\n * rgb(255,234,245)\n */\nconst rgbRe = /^rgb\\(\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*\\)$/;\n/**\n * @example\n * rgba(123, 234, 45, 1)\n * @example\n * rgba(255,234,245,0.1)\n */\nconst rgbaRe = /^rgba\\(\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?\\d{1,10})\\s*,\\s*(-?[\\d]{0,10}(?:\\.\\d+)?)\\s*\\)$/;\nfunction colorStringToRgba(colorString) {\n    colorString = colorString.toLowerCase();\n    // eslint-disable-next-line no-restricted-syntax\n    if (colorString in namedColorRgbHexStrings) {\n        colorString = namedColorRgbHexStrings[colorString];\n    }\n    {\n        const matches = rgbaRe.exec(colorString) || rgbRe.exec(colorString);\n        if (matches) {\n            return [\n                normalizeRgbComponent(parseInt(matches[1], 10)),\n                normalizeRgbComponent(parseInt(matches[2], 10)),\n                normalizeRgbComponent(parseInt(matches[3], 10)),\n                normalizeAlphaComponent((matches.length < 5 ? 1 : parseFloat(matches[4]))),\n            ];\n        }\n    }\n    {\n        const matches = hexRe.exec(colorString);\n        if (matches) {\n            return [\n                normalizeRgbComponent(parseInt(matches[1], 16)),\n                normalizeRgbComponent(parseInt(matches[2], 16)),\n                normalizeRgbComponent(parseInt(matches[3], 16)),\n                1,\n            ];\n        }\n    }\n    {\n        const matches = shortHexRe.exec(colorString);\n        if (matches) {\n            return [\n                normalizeRgbComponent(parseInt(matches[1], 16) * 0x11),\n                normalizeRgbComponent(parseInt(matches[2], 16) * 0x11),\n                normalizeRgbComponent(parseInt(matches[3], 16) * 0x11),\n                1,\n            ];\n        }\n    }\n    throw new Error(`Cannot parse color: ${colorString}`);\n}\nfunction rgbaToGrayscale(rgbValue) {\n    // Originally, the NTSC RGB to YUV formula\n    // perfected by @eugene-korobko's black magic\n    const redComponentGrayscaleWeight = 0.199;\n    const greenComponentGrayscaleWeight = 0.687;\n    const blueComponentGrayscaleWeight = 0.114;\n    return (redComponentGrayscaleWeight * rgbValue[0] +\n        greenComponentGrayscaleWeight * rgbValue[1] +\n        blueComponentGrayscaleWeight * rgbValue[2]);\n}\nfunction applyAlpha(color, alpha) {\n    // special case optimization\n    if (color === 'transparent') {\n        return color;\n    }\n    const originRgba = colorStringToRgba(color);\n    const originAlpha = originRgba[3];\n    return `rgba(${originRgba[0]}, ${originRgba[1]}, ${originRgba[2]}, ${alpha * originAlpha})`;\n}\nfunction generateContrastColors(backgroundColor) {\n    const rgb = colorStringToRgba(backgroundColor);\n    return {\n        _internal_background: `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`,\n        _internal_foreground: rgbaToGrayscale(rgb) > 160 ? 'black' : 'white',\n    };\n}\nfunction gradientColorAtPercent(topColor, bottomColor, percent) {\n    const [topR, topG, topB, topA] = colorStringToRgba(topColor);\n    const [bottomR, bottomG, bottomB, bottomA] = colorStringToRgba(bottomColor);\n    const resultRgba = [\n        normalizeRgbComponent(topR + percent * (bottomR - topR)),\n        normalizeRgbComponent(topG + percent * (bottomG - topG)),\n        normalizeRgbComponent(topB + percent * (bottomB - topB)),\n        normalizeAlphaComponent(topA + percent * (bottomA - topA)),\n    ];\n    return `rgba(${resultRgba[0]}, ${resultRgba[1]}, ${resultRgba[2]}, ${resultRgba[3]})`;\n}\n\nclass Delegate {\n    constructor() {\n        this._private__listeners = [];\n    }\n    _internal_subscribe(callback, linkedObject, singleshot) {\n        const listener = {\n            _internal_callback: callback,\n            _internal_linkedObject: linkedObject,\n            _internal_singleshot: singleshot === true,\n        };\n        this._private__listeners.push(listener);\n    }\n    _internal_unsubscribe(callback) {\n        const index = this._private__listeners.findIndex((listener) => callback === listener._internal_callback);\n        if (index > -1) {\n            this._private__listeners.splice(index, 1);\n        }\n    }\n    _internal_unsubscribeAll(linkedObject) {\n        this._private__listeners = this._private__listeners.filter((listener) => listener._internal_linkedObject !== linkedObject);\n    }\n    _internal_fire(param1, param2, param3) {\n        const listenersSnapshot = [...this._private__listeners];\n        this._private__listeners = this._private__listeners.filter((listener) => !listener._internal_singleshot);\n        listenersSnapshot.forEach((listener) => listener._internal_callback(param1, param2, param3));\n    }\n    _internal_hasListeners() {\n        return this._private__listeners.length > 0;\n    }\n    _internal_destroy() {\n        this._private__listeners = [];\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction merge(dst, ...sources) {\n    for (const src of sources) {\n        // eslint-disable-next-line no-restricted-syntax\n        for (const i in src) {\n            if (src[i] === undefined) {\n                continue;\n            }\n            if ('object' !== typeof src[i] || dst[i] === undefined) {\n                dst[i] = src[i];\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                merge(dst[i], src[i]);\n            }\n        }\n    }\n    return dst;\n}\nfunction isNumber(value) {\n    return (typeof value === 'number') && (isFinite(value));\n}\nfunction isInteger(value) {\n    return (typeof value === 'number') && ((value % 1) === 0);\n}\nfunction isString(value) {\n    return typeof value === 'string';\n}\nfunction isBoolean(value) {\n    return typeof value === 'boolean';\n}\nfunction clone(object) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const o = object;\n    if (!o || 'object' !== typeof o) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return o;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let c;\n    if (Array.isArray(o)) {\n        c = [];\n    }\n    else {\n        c = {};\n    }\n    let p;\n    let v;\n    // eslint-disable-next-line no-restricted-syntax\n    for (p in o) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,no-prototype-builtins\n        if (o.hasOwnProperty(p)) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            v = o[p];\n            if (v && 'object' === typeof v) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                c[p] = clone(v);\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                c[p] = v;\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return c;\n}\nfunction notNull(t) {\n    return t !== null;\n}\nfunction undefinedIfNull(t) {\n    return (t === null) ? undefined : t;\n}\n\n/**\n * Default font family.\n * Must be used to generate font string when font is not specified.\n */\nconst defaultFontFamily = `-apple-system, BlinkMacSystemFont, 'Trebuchet MS', Roboto, Ubuntu, sans-serif`;\n/**\n * Generates a font string, which can be used to set in canvas' font property.\n * If no family provided, {@link defaultFontFamily} will be used.\n *\n * @param size - Font size in pixels.\n * @param family - Optional font family.\n * @param style - Optional font style.\n * @returns The font string.\n */\nfunction makeFont(size, family, style) {\n    if (style !== undefined) {\n        style = `${style} `;\n    }\n    else {\n        style = '';\n    }\n    if (family === undefined) {\n        family = defaultFontFamily;\n    }\n    return `${style}${size}px ${family}`;\n}\n\nclass PriceAxisRendererOptionsProvider {\n    constructor(chartModel) {\n        this._private__rendererOptions = {\n            _internal_borderSize: 1 /* RendererConstants.BorderSize */,\n            _internal_tickLength: 5 /* RendererConstants.TickLength */,\n            _internal_fontSize: NaN,\n            _internal_font: '',\n            _internal_fontFamily: '',\n            _internal_color: '',\n            _internal_paneBackgroundColor: '',\n            _internal_paddingBottom: 0,\n            _internal_paddingInner: 0,\n            _internal_paddingOuter: 0,\n            _internal_paddingTop: 0,\n            _internal_baselineOffset: 0,\n        };\n        this._private__chartModel = chartModel;\n    }\n    _internal_options() {\n        const rendererOptions = this._private__rendererOptions;\n        const currentFontSize = this._private__fontSize();\n        const currentFontFamily = this._private__fontFamily();\n        if (rendererOptions._internal_fontSize !== currentFontSize || rendererOptions._internal_fontFamily !== currentFontFamily) {\n            rendererOptions._internal_fontSize = currentFontSize;\n            rendererOptions._internal_fontFamily = currentFontFamily;\n            rendererOptions._internal_font = makeFont(currentFontSize, currentFontFamily);\n            rendererOptions._internal_paddingTop = 2.5 / 12 * currentFontSize; // 2.5 px for 12px font\n            rendererOptions._internal_paddingBottom = rendererOptions._internal_paddingTop;\n            rendererOptions._internal_paddingInner = currentFontSize / 12 * rendererOptions._internal_tickLength;\n            rendererOptions._internal_paddingOuter = currentFontSize / 12 * rendererOptions._internal_tickLength;\n            rendererOptions._internal_baselineOffset = 0;\n        }\n        rendererOptions._internal_color = this._private__textColor();\n        rendererOptions._internal_paneBackgroundColor = this._private__paneBackgroundColor();\n        return this._private__rendererOptions;\n    }\n    _private__textColor() {\n        return this._private__chartModel._internal_options().layout.textColor;\n    }\n    _private__paneBackgroundColor() {\n        return this._private__chartModel._internal_backgroundTopColor();\n    }\n    _private__fontSize() {\n        return this._private__chartModel._internal_options().layout.fontSize;\n    }\n    _private__fontFamily() {\n        return this._private__chartModel._internal_options().layout.fontFamily;\n    }\n}\n\nclass CompositeRenderer {\n    constructor() {\n        this._private__renderers = [];\n    }\n    _internal_setRenderers(renderers) {\n        this._private__renderers = renderers;\n    }\n    _internal_draw(target, isHovered, hitTestData) {\n        this._private__renderers.forEach((r) => {\n            r._internal_draw(target, isHovered, hitTestData);\n        });\n    }\n}\n\nclass MediaCoordinatesPaneRenderer {\n    _internal_draw(target, isHovered, hitTestData) {\n        target.useMediaCoordinateSpace((scope) => this._internal__drawImpl(scope, isHovered, hitTestData));\n    }\n    _internal_drawBackground(target, isHovered, hitTestData) {\n        target.useMediaCoordinateSpace((scope) => this._internal__drawBackgroundImpl(scope, isHovered, hitTestData));\n    }\n    _internal__drawBackgroundImpl(renderingScope, isHovered, hitTestData) { }\n}\n\nclass PaneRendererMarks extends MediaCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl({ context: ctx }) {\n        if (this._internal__data === null || this._internal__data._internal_visibleRange === null) {\n            return;\n        }\n        const visibleRange = this._internal__data._internal_visibleRange;\n        const data = this._internal__data;\n        const draw = (radius) => {\n            ctx.beginPath();\n            for (let i = visibleRange.to - 1; i >= visibleRange.from; --i) {\n                const point = data._internal_items[i];\n                ctx.moveTo(point._internal_x, point._internal_y);\n                ctx.arc(point._internal_x, point._internal_y, radius, 0, Math.PI * 2);\n            }\n            ctx.fill();\n        };\n        if (data._internal_lineWidth > 0) {\n            ctx.fillStyle = data._internal_backColor;\n            draw(data._internal_radius + data._internal_lineWidth);\n        }\n        ctx.fillStyle = data._internal_lineColor;\n        draw(data._internal_radius);\n    }\n}\n\nfunction createEmptyMarkerData() {\n    return {\n        _internal_items: [{\n                _internal_x: 0,\n                _internal_y: 0,\n                _internal_time: 0,\n                _internal_price: 0,\n            }],\n        _internal_lineColor: '',\n        _internal_backColor: '',\n        _internal_radius: 0,\n        _internal_lineWidth: 0,\n        _internal_visibleRange: null,\n    };\n}\nconst rangeForSinglePoint = { from: 0, to: 1 };\nclass CrosshairMarksPaneView {\n    constructor(chartModel, crosshair) {\n        this._private__compositeRenderer = new CompositeRenderer();\n        this._private__markersRenderers = [];\n        this._private__markersData = [];\n        this._private__invalidated = true;\n        this._private__chartModel = chartModel;\n        this._private__crosshair = crosshair;\n        this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n    }\n    _internal_update(updateType) {\n        const serieses = this._private__chartModel._internal_serieses();\n        if (serieses.length !== this._private__markersRenderers.length) {\n            this._private__markersData = serieses.map(createEmptyMarkerData);\n            this._private__markersRenderers = this._private__markersData.map((data) => {\n                const res = new PaneRendererMarks();\n                res._internal_setData(data);\n                return res;\n            });\n            this._private__compositeRenderer._internal_setRenderers(this._private__markersRenderers);\n        }\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__compositeRenderer;\n    }\n    _private__updateImpl() {\n        const serieses = this._private__chartModel._internal_serieses();\n        const timePointIndex = this._private__crosshair._internal_appliedIndex();\n        const timeScale = this._private__chartModel._internal_timeScale();\n        serieses.forEach((s, index) => {\n            var _a;\n            const data = this._private__markersData[index];\n            const seriesData = s._internal_markerDataAtIndex(timePointIndex);\n            if (seriesData === null || !s._internal_visible()) {\n                data._internal_visibleRange = null;\n                return;\n            }\n            const firstValue = ensureNotNull(s._internal_firstValue());\n            data._internal_lineColor = seriesData._internal_backgroundColor;\n            data._internal_radius = seriesData._internal_radius;\n            data._internal_lineWidth = seriesData._internal_borderWidth;\n            data._internal_items[0]._internal_price = seriesData._internal_price;\n            data._internal_items[0]._internal_y = s._internal_priceScale()._internal_priceToCoordinate(seriesData._internal_price, firstValue._internal_value);\n            data._internal_backColor = (_a = seriesData._internal_borderColor) !== null && _a !== void 0 ? _a : this._private__chartModel._internal_backgroundColorAtYPercentFromTop(data._internal_items[0]._internal_y / s._internal_priceScale()._internal_height());\n            data._internal_items[0]._internal_time = timePointIndex;\n            data._internal_items[0]._internal_x = timeScale._internal_indexToCoordinate(timePointIndex);\n            data._internal_visibleRange = rangeForSinglePoint;\n        });\n    }\n}\n\nclass BitmapCoordinatesPaneRenderer {\n    _internal_draw(target, isHovered, hitTestData) {\n        target.useBitmapCoordinateSpace((scope) => this._internal__drawImpl(scope, isHovered, hitTestData));\n    }\n}\n\nclass CrosshairRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor(data) {\n        super();\n        this._private__data = data;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        const vertLinesVisible = this._private__data._internal_vertLine._internal_visible;\n        const horzLinesVisible = this._private__data._internal_horzLine._internal_visible;\n        if (!vertLinesVisible && !horzLinesVisible) {\n            return;\n        }\n        const x = Math.round(this._private__data._internal_x * horizontalPixelRatio);\n        const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n        ctx.lineCap = 'butt';\n        if (vertLinesVisible && x >= 0) {\n            ctx.lineWidth = Math.floor(this._private__data._internal_vertLine._internal_lineWidth * horizontalPixelRatio);\n            ctx.strokeStyle = this._private__data._internal_vertLine._internal_color;\n            ctx.fillStyle = this._private__data._internal_vertLine._internal_color;\n            setLineStyle(ctx, this._private__data._internal_vertLine._internal_lineStyle);\n            drawVerticalLine(ctx, x, 0, bitmapSize.height);\n        }\n        if (horzLinesVisible && y >= 0) {\n            ctx.lineWidth = Math.floor(this._private__data._internal_horzLine._internal_lineWidth * verticalPixelRatio);\n            ctx.strokeStyle = this._private__data._internal_horzLine._internal_color;\n            ctx.fillStyle = this._private__data._internal_horzLine._internal_color;\n            setLineStyle(ctx, this._private__data._internal_horzLine._internal_lineStyle);\n            drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n        }\n    }\n}\n\nclass CrosshairPaneView {\n    constructor(source) {\n        this._private__invalidated = true;\n        this._private__rendererData = {\n            _internal_vertLine: {\n                _internal_lineWidth: 1,\n                _internal_lineStyle: 0,\n                _internal_color: '',\n                _internal_visible: false,\n            },\n            _internal_horzLine: {\n                _internal_lineWidth: 1,\n                _internal_lineStyle: 0,\n                _internal_color: '',\n                _internal_visible: false,\n            },\n            _internal_x: 0,\n            _internal_y: 0,\n        };\n        this._private__renderer = new CrosshairRenderer(this._private__rendererData);\n        this._private__source = source;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const visible = this._private__source._internal_visible();\n        const pane = ensureNotNull(this._private__source._internal_pane());\n        const crosshairOptions = pane._internal_model()._internal_options().crosshair;\n        const data = this._private__rendererData;\n        data._internal_horzLine._internal_visible = visible && this._private__source._internal_horzLineVisible(pane);\n        data._internal_vertLine._internal_visible = visible && this._private__source._internal_vertLineVisible();\n        data._internal_horzLine._internal_lineWidth = crosshairOptions.horzLine.width;\n        data._internal_horzLine._internal_lineStyle = crosshairOptions.horzLine.style;\n        data._internal_horzLine._internal_color = crosshairOptions.horzLine.color;\n        data._internal_vertLine._internal_lineWidth = crosshairOptions.vertLine.width;\n        data._internal_vertLine._internal_lineStyle = crosshairOptions.vertLine.style;\n        data._internal_vertLine._internal_color = crosshairOptions.vertLine.color;\n        data._internal_x = this._private__source._internal_appliedX();\n        data._internal_y = this._private__source._internal_appliedY();\n    }\n}\n\n/**\n * Fills rectangle's inner border (so, all the filled area is limited by the [x, x + width]*[y, y + height] region)\n * ```\n * (x, y)\n * O***********************|*****\n * |        border         |  ^\n * |   *****************   |  |\n * |   |               |   |  |\n * | b |               | b |  h\n * | o |               | o |  e\n * | r |               | r |  i\n * | d |               | d |  g\n * | e |               | e |  h\n * | r |               | r |  t\n * |   |               |   |  |\n * |   *****************   |  |\n * |        border         |  v\n * |***********************|*****\n * |                       |\n * |<------- width ------->|\n * ```\n *\n * @param ctx - Context to draw on\n * @param x - Left side of the target rectangle\n * @param y - Top side of the target rectangle\n * @param width - Width of the target rectangle\n * @param height - Height of the target rectangle\n * @param borderWidth - Width of border to fill, must be less than width and height of the target rectangle\n */\nfunction fillRectInnerBorder(ctx, x, y, width, height, borderWidth) {\n    // horizontal (top and bottom) edges\n    ctx.fillRect(x + borderWidth, y, width - borderWidth * 2, borderWidth);\n    ctx.fillRect(x + borderWidth, y + height - borderWidth, width - borderWidth * 2, borderWidth);\n    // vertical (left and right) edges\n    ctx.fillRect(x, y, borderWidth, height);\n    ctx.fillRect(x + width - borderWidth, y, borderWidth, height);\n}\nfunction clearRect(ctx, x, y, w, h, clearColor) {\n    ctx.save();\n    ctx.globalCompositeOperation = 'copy';\n    ctx.fillStyle = clearColor;\n    ctx.fillRect(x, y, w, h);\n    ctx.restore();\n}\nfunction changeBorderRadius(borderRadius, offset) {\n    if (Array.isArray(borderRadius)) {\n        return borderRadius.map((x) => x === 0 ? x : x + offset);\n    }\n    return borderRadius + offset;\n}\nfunction drawRoundRect(\n// eslint:disable-next-line:max-params\nctx, x, y, w, h, radii) {\n    let radiusLeftTop;\n    let radiusRightTop;\n    let radiusRightBottom;\n    let radiusLeftBottom;\n    if (!Array.isArray(radii)) {\n        const oneRadius = Math.max(0, radii);\n        radiusLeftTop = oneRadius;\n        radiusRightTop = oneRadius;\n        radiusRightBottom = oneRadius;\n        radiusLeftBottom = oneRadius;\n    }\n    else if (radii.length === 2) {\n        const cornerRadius1 = Math.max(0, radii[0]);\n        const cornerRadius2 = Math.max(0, radii[1]);\n        radiusLeftTop = cornerRadius1;\n        radiusRightTop = cornerRadius1;\n        radiusRightBottom = cornerRadius2;\n        radiusLeftBottom = cornerRadius2;\n    }\n    else if (radii.length === 4) {\n        radiusLeftTop = Math.max(0, radii[0]);\n        radiusRightTop = Math.max(0, radii[1]);\n        radiusRightBottom = Math.max(0, radii[2]);\n        radiusLeftBottom = Math.max(0, radii[3]);\n    }\n    else {\n        throw new Error(`Wrong border radius - it should be like css border radius`);\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + radiusLeftTop, y);\n    ctx.lineTo(x + w - radiusRightTop, y);\n    if (radiusRightTop !== 0) {\n        ctx.arcTo(x + w, y, x + w, y + radiusRightTop, radiusRightTop);\n    }\n    ctx.lineTo(x + w, y + h - radiusRightBottom);\n    if (radiusRightBottom !== 0) {\n        ctx.arcTo(x + w, y + h, x + w - radiusRightBottom, y + h, radiusRightBottom);\n    }\n    ctx.lineTo(x + radiusLeftBottom, y + h);\n    if (radiusLeftBottom !== 0) {\n        ctx.arcTo(x, y + h, x, y + h - radiusLeftBottom, radiusLeftBottom);\n    }\n    ctx.lineTo(x, y + radiusLeftTop);\n    if (radiusLeftTop !== 0) {\n        ctx.arcTo(x, y, x + radiusLeftTop, y, radiusLeftTop);\n    }\n}\n// eslint-disable-next-line max-params\nfunction drawRoundRectWithInnerBorder(ctx, left, top, width, height, backgroundColor, borderWidth = 0, borderRadius = 0, borderColor = '') {\n    ctx.save();\n    if (!borderWidth || !borderColor || borderColor === backgroundColor) {\n        drawRoundRect(ctx, left, top, width, height, borderRadius);\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n        return;\n    }\n    const halfBorderWidth = borderWidth / 2;\n    // Draw body\n    if (backgroundColor !== 'transparent') {\n        const innerRadii = changeBorderRadius(borderRadius, -borderWidth);\n        drawRoundRect(ctx, left + borderWidth, top + borderWidth, width - borderWidth * 2, height - borderWidth * 2, innerRadii);\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n    }\n    // Draw border\n    if (borderColor !== 'transparent') {\n        const outerRadii = changeBorderRadius(borderRadius, -halfBorderWidth);\n        drawRoundRect(ctx, left + halfBorderWidth, top + halfBorderWidth, width - borderWidth, height - borderWidth, outerRadii);\n        ctx.lineWidth = borderWidth;\n        ctx.strokeStyle = borderColor;\n        ctx.closePath();\n        ctx.stroke();\n    }\n    ctx.restore();\n}\n// eslint-disable-next-line max-params\nfunction clearRectWithGradient(ctx, x, y, w, h, topColor, bottomColor) {\n    ctx.save();\n    ctx.globalCompositeOperation = 'copy';\n    const gradient = ctx.createLinearGradient(0, 0, 0, h);\n    gradient.addColorStop(0, topColor);\n    gradient.addColorStop(1, bottomColor);\n    ctx.fillStyle = gradient;\n    ctx.fillRect(x, y, w, h);\n    ctx.restore();\n}\n\nclass PriceAxisViewRenderer {\n    constructor(data, commonData) {\n        this._internal_setData(data, commonData);\n    }\n    _internal_setData(data, commonData) {\n        this._private__data = data;\n        this._private__commonData = commonData;\n    }\n    _internal_height(rendererOptions, useSecondLine) {\n        if (!this._private__data._internal_visible) {\n            return 0;\n        }\n        return rendererOptions._internal_fontSize + rendererOptions._internal_paddingTop + rendererOptions._internal_paddingBottom;\n    }\n    _internal_draw(target, rendererOptions, textWidthCache, align) {\n        if (!this._private__data._internal_visible || this._private__data._internal_text.length === 0) {\n            return;\n        }\n        const textColor = this._private__data._internal_color;\n        const backgroundColor = this._private__commonData._internal_background;\n        const geometry = target.useBitmapCoordinateSpace((scope) => {\n            const ctx = scope.context;\n            ctx.font = rendererOptions._internal_font;\n            const geom = this._private__calculateGeometry(scope, rendererOptions, textWidthCache, align);\n            const gb = geom._internal_bitmap;\n            const drawLabelBody = (labelBackgroundColor, labelBorderColor) => {\n                if (geom._internal_alignRight) {\n                    drawRoundRectWithInnerBorder(ctx, gb._internal_xOutside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, labelBackgroundColor, gb._internal_horzBorder, [gb._internal_radius, 0, 0, gb._internal_radius], labelBorderColor);\n                }\n                else {\n                    drawRoundRectWithInnerBorder(ctx, gb._internal_xInside, gb._internal_yTop, gb._internal_totalWidth, gb._internal_totalHeight, labelBackgroundColor, gb._internal_horzBorder, [0, gb._internal_radius, gb._internal_radius, 0], labelBorderColor);\n                }\n            };\n            // draw border\n            // draw label background\n            drawLabelBody(backgroundColor, 'transparent');\n            // draw tick\n            if (this._private__data._internal_tickVisible) {\n                ctx.fillStyle = textColor;\n                ctx.fillRect(gb._internal_xInside, gb._internal_yMid, gb._internal_xTick - gb._internal_xInside, gb._internal_tickHeight);\n            }\n            // draw label border above the tick\n            drawLabelBody('transparent', backgroundColor);\n            // draw separator\n            if (this._private__data._internal_borderVisible) {\n                ctx.fillStyle = rendererOptions._internal_paneBackgroundColor;\n                ctx.fillRect(geom._internal_alignRight ? gb._internal_right - gb._internal_horzBorder : 0, gb._internal_yTop, gb._internal_horzBorder, gb._internal_yBottom - gb._internal_yTop);\n            }\n            return geom;\n        });\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const gm = geometry._internal_media;\n            ctx.font = rendererOptions._internal_font;\n            ctx.textAlign = geometry._internal_alignRight ? 'right' : 'left';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = textColor;\n            ctx.fillText(this._private__data._internal_text, gm._internal_xText, (gm._internal_yTop + gm._internal_yBottom) / 2 + gm._internal_textMidCorrection);\n        });\n    }\n    _private__calculateGeometry(scope, rendererOptions, textWidthCache, align) {\n        var _a;\n        const { context: ctx, bitmapSize, mediaSize, horizontalPixelRatio, verticalPixelRatio } = scope;\n        const tickSize = (this._private__data._internal_tickVisible || !this._private__data._internal_moveTextToInvisibleTick) ? rendererOptions._internal_tickLength : 0;\n        const horzBorder = this._private__data._internal_separatorVisible ? rendererOptions._internal_borderSize : 0;\n        const paddingTop = rendererOptions._internal_paddingTop + this._private__commonData._internal_additionalPaddingTop;\n        const paddingBottom = rendererOptions._internal_paddingBottom + this._private__commonData._internal_additionalPaddingBottom;\n        const paddingInner = rendererOptions._internal_paddingInner;\n        const paddingOuter = rendererOptions._internal_paddingOuter;\n        const text = this._private__data._internal_text;\n        const actualTextHeight = rendererOptions._internal_fontSize;\n        const textMidCorrection = textWidthCache._internal_yMidCorrection(ctx, text);\n        const textWidth = Math.ceil(textWidthCache._internal_measureText(ctx, text));\n        const totalHeight = actualTextHeight + paddingTop + paddingBottom;\n        const totalWidth = rendererOptions._internal_borderSize + paddingInner + paddingOuter + textWidth + tickSize;\n        const tickHeightBitmap = Math.max(1, Math.floor(verticalPixelRatio));\n        let totalHeightBitmap = Math.round(totalHeight * verticalPixelRatio);\n        if (totalHeightBitmap % 2 !== tickHeightBitmap % 2) {\n            totalHeightBitmap += 1;\n        }\n        const horzBorderBitmap = horzBorder > 0 ? Math.max(1, Math.floor(horzBorder * horizontalPixelRatio)) : 0;\n        const totalWidthBitmap = Math.round(totalWidth * horizontalPixelRatio);\n        // tick overlaps scale border\n        const tickSizeBitmap = Math.round(tickSize * horizontalPixelRatio);\n        const yMid = (_a = this._private__commonData._internal_fixedCoordinate) !== null && _a !== void 0 ? _a : this._private__commonData._internal_coordinate;\n        const yMidBitmap = Math.round(yMid * verticalPixelRatio) - Math.floor(verticalPixelRatio * 0.5);\n        const yTopBitmap = Math.floor(yMidBitmap + tickHeightBitmap / 2 - totalHeightBitmap / 2);\n        const yBottomBitmap = yTopBitmap + totalHeightBitmap;\n        const alignRight = align === 'right';\n        const xInside = alignRight ? mediaSize.width - horzBorder : horzBorder;\n        const xInsideBitmap = alignRight ? bitmapSize.width - horzBorderBitmap : horzBorderBitmap;\n        let xOutsideBitmap;\n        let xTickBitmap;\n        let xText;\n        if (alignRight) {\n            // 2               1\n            //\n            //              6  5\n            //\n            // 3               4\n            xOutsideBitmap = xInsideBitmap - totalWidthBitmap;\n            xTickBitmap = xInsideBitmap - tickSizeBitmap;\n            xText = xInside - tickSize - paddingInner - horzBorder;\n        }\n        else {\n            // 1               2\n            //\n            // 6  5\n            //\n            // 4               3\n            xOutsideBitmap = xInsideBitmap + totalWidthBitmap;\n            xTickBitmap = xInsideBitmap + tickSizeBitmap;\n            xText = xInside + tickSize + paddingInner;\n        }\n        return {\n            _internal_alignRight: alignRight,\n            _internal_bitmap: {\n                _internal_yTop: yTopBitmap,\n                _internal_yMid: yMidBitmap,\n                _internal_yBottom: yBottomBitmap,\n                _internal_totalWidth: totalWidthBitmap,\n                _internal_totalHeight: totalHeightBitmap,\n                // TODO: it is better to have different horizontal and vertical radii\n                _internal_radius: 2 * horizontalPixelRatio,\n                _internal_horzBorder: horzBorderBitmap,\n                _internal_xOutside: xOutsideBitmap,\n                _internal_xInside: xInsideBitmap,\n                _internal_xTick: xTickBitmap,\n                _internal_tickHeight: tickHeightBitmap,\n                _internal_right: bitmapSize.width,\n            },\n            _internal_media: {\n                _internal_yTop: yTopBitmap / verticalPixelRatio,\n                _internal_yBottom: yBottomBitmap / verticalPixelRatio,\n                _internal_xText: xText,\n                _internal_textMidCorrection: textMidCorrection,\n            },\n        };\n    }\n}\n\nclass PriceAxisView {\n    constructor(ctor) {\n        this._private__commonRendererData = {\n            _internal_coordinate: 0,\n            _internal_background: '#000',\n            _internal_additionalPaddingBottom: 0,\n            _internal_additionalPaddingTop: 0,\n        };\n        this._private__axisRendererData = {\n            _internal_text: '',\n            _internal_visible: false,\n            _internal_tickVisible: true,\n            _internal_moveTextToInvisibleTick: false,\n            _internal_borderColor: '',\n            _internal_color: '#FFF',\n            _internal_borderVisible: false,\n            _internal_separatorVisible: false,\n        };\n        this._private__paneRendererData = {\n            _internal_text: '',\n            _internal_visible: false,\n            _internal_tickVisible: false,\n            _internal_moveTextToInvisibleTick: true,\n            _internal_borderColor: '',\n            _internal_color: '#FFF',\n            _internal_borderVisible: true,\n            _internal_separatorVisible: true,\n        };\n        this._private__invalidated = true;\n        this._private__axisRenderer = new (ctor || PriceAxisViewRenderer)(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer = new (ctor || PriceAxisViewRenderer)(this._private__paneRendererData, this._private__commonRendererData);\n    }\n    _internal_text() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_text;\n    }\n    _internal_coordinate() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__commonRendererData._internal_coordinate;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_height(rendererOptions, useSecondLine = false) {\n        return Math.max(this._private__axisRenderer._internal_height(rendererOptions, useSecondLine), this._private__paneRenderer._internal_height(rendererOptions, useSecondLine));\n    }\n    _internal_getFixedCoordinate() {\n        return this._private__commonRendererData._internal_fixedCoordinate || 0;\n    }\n    _internal_setFixedCoordinate(value) {\n        this._private__commonRendererData._internal_fixedCoordinate = value;\n    }\n    _internal_isVisible() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_visible || this._private__paneRendererData._internal_visible;\n    }\n    _internal_isAxisLabelVisible() {\n        this._private__updateRendererDataIfNeeded();\n        return this._private__axisRendererData._internal_visible;\n    }\n    _internal_renderer(priceScale) {\n        this._private__updateRendererDataIfNeeded();\n        // force update tickVisible state from price scale options\n        // because we don't have and we can't have price axis in other methods\n        // (like paneRenderer or any other who call _updateRendererDataIfNeeded)\n        this._private__axisRendererData._internal_tickVisible = this._private__axisRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n        this._private__paneRendererData._internal_tickVisible = this._private__paneRendererData._internal_tickVisible && priceScale._internal_options().ticksVisible;\n        this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n        return this._private__axisRenderer;\n    }\n    _internal_paneRenderer() {\n        this._private__updateRendererDataIfNeeded();\n        this._private__axisRenderer._internal_setData(this._private__axisRendererData, this._private__commonRendererData);\n        this._private__paneRenderer._internal_setData(this._private__paneRendererData, this._private__commonRendererData);\n        return this._private__paneRenderer;\n    }\n    _private__updateRendererDataIfNeeded() {\n        if (this._private__invalidated) {\n            this._private__axisRendererData._internal_tickVisible = true;\n            this._private__paneRendererData._internal_tickVisible = false;\n            this._internal__updateRendererData(this._private__axisRendererData, this._private__paneRendererData, this._private__commonRendererData);\n        }\n    }\n}\n\nclass CrosshairPriceAxisView extends PriceAxisView {\n    constructor(source, priceScale, valueProvider) {\n        super();\n        this._private__source = source;\n        this._private__priceScale = priceScale;\n        this._private__valueProvider = valueProvider;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        axisRendererData._internal_visible = false;\n        const options = this._private__source._internal_options().horzLine;\n        if (!options.labelVisible) {\n            return;\n        }\n        const firstValue = this._private__priceScale._internal_firstValue();\n        if (!this._private__source._internal_visible() || this._private__priceScale._internal_isEmpty() || (firstValue === null)) {\n            return;\n        }\n        const colors = generateContrastColors(options.labelBackgroundColor);\n        commonRendererData._internal_background = colors._internal_background;\n        axisRendererData._internal_color = colors._internal_foreground;\n        const additionalPadding = 2 / 12 * this._private__priceScale._internal_fontSize();\n        commonRendererData._internal_additionalPaddingTop = additionalPadding;\n        commonRendererData._internal_additionalPaddingBottom = additionalPadding;\n        const value = this._private__valueProvider(this._private__priceScale);\n        commonRendererData._internal_coordinate = value._internal_coordinate;\n        axisRendererData._internal_text = this._private__priceScale._internal_formatPrice(value._internal_price, firstValue);\n        axisRendererData._internal_visible = true;\n    }\n}\n\nconst optimizationReplacementRe = /[1-9]/g;\nconst radius$1 = 2;\nclass TimeAxisViewRenderer {\n    constructor() {\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_draw(target, rendererOptions) {\n        if (this._private__data === null || this._private__data._internal_visible === false || this._private__data._internal_text.length === 0) {\n            return;\n        }\n        const textWidth = target.useMediaCoordinateSpace(({ context: ctx }) => {\n            ctx.font = rendererOptions._internal_font;\n            return Math.round(rendererOptions._internal_widthCache._internal_measureText(ctx, ensureNotNull(this._private__data)._internal_text, optimizationReplacementRe));\n        });\n        if (textWidth <= 0) {\n            return;\n        }\n        const horzMargin = rendererOptions._internal_paddingHorizontal;\n        const labelWidth = textWidth + 2 * horzMargin;\n        const labelWidthHalf = labelWidth / 2;\n        const timeScaleWidth = this._private__data._internal_width;\n        let coordinate = this._private__data._internal_coordinate;\n        let x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        if (x1 < 0) {\n            coordinate = coordinate + Math.abs(0 - x1);\n            x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        }\n        else if (x1 + labelWidth > timeScaleWidth) {\n            coordinate = coordinate - Math.abs(timeScaleWidth - (x1 + labelWidth));\n            x1 = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        }\n        const x2 = x1 + labelWidth;\n        const y1 = 0;\n        const y2 = Math.ceil(y1 +\n            rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_paddingTop +\n            rendererOptions._internal_fontSize +\n            rendererOptions._internal_paddingBottom);\n        target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n            const data = ensureNotNull(this._private__data);\n            ctx.fillStyle = data._internal_background;\n            const x1scaled = Math.round(x1 * horizontalPixelRatio);\n            const y1scaled = Math.round(y1 * verticalPixelRatio);\n            const x2scaled = Math.round(x2 * horizontalPixelRatio);\n            const y2scaled = Math.round(y2 * verticalPixelRatio);\n            const radiusScaled = Math.round(radius$1 * horizontalPixelRatio);\n            ctx.beginPath();\n            ctx.moveTo(x1scaled, y1scaled);\n            ctx.lineTo(x1scaled, y2scaled - radiusScaled);\n            ctx.arcTo(x1scaled, y2scaled, x1scaled + radiusScaled, y2scaled, radiusScaled);\n            ctx.lineTo(x2scaled - radiusScaled, y2scaled);\n            ctx.arcTo(x2scaled, y2scaled, x2scaled, y2scaled - radiusScaled, radiusScaled);\n            ctx.lineTo(x2scaled, y1scaled);\n            ctx.fill();\n            if (data._internal_tickVisible) {\n                const tickX = Math.round(data._internal_coordinate * horizontalPixelRatio);\n                const tickTop = y1scaled;\n                const tickBottom = Math.round((tickTop + rendererOptions._internal_tickLength) * verticalPixelRatio);\n                ctx.fillStyle = data._internal_color;\n                const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n                const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n                ctx.fillRect(tickX - tickOffset, tickTop, tickWidth, tickBottom - tickTop);\n            }\n        });\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const data = ensureNotNull(this._private__data);\n            const yText = y1 +\n                rendererOptions._internal_borderSize +\n                rendererOptions._internal_tickLength +\n                rendererOptions._internal_paddingTop +\n                rendererOptions._internal_fontSize / 2;\n            ctx.font = rendererOptions._internal_font;\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = data._internal_color;\n            const textYCorrection = rendererOptions._internal_widthCache._internal_yMidCorrection(ctx, 'Apr0');\n            ctx.translate(x1 + horzMargin, yText + textYCorrection);\n            ctx.fillText(data._internal_text, 0, 0);\n        });\n    }\n}\n\nclass CrosshairTimeAxisView {\n    constructor(crosshair, model, valueProvider) {\n        this._private__invalidated = true;\n        this._private__renderer = new TimeAxisViewRenderer();\n        this._private__rendererData = {\n            _internal_visible: false,\n            _internal_background: '#4c525e',\n            _internal_color: 'white',\n            _internal_text: '',\n            _internal_width: 0,\n            _internal_coordinate: NaN,\n            _internal_tickVisible: true,\n        };\n        this._private__crosshair = crosshair;\n        this._private__model = model;\n        this._private__valueProvider = valueProvider;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        this._private__renderer._internal_setData(this._private__rendererData);\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const data = this._private__rendererData;\n        data._internal_visible = false;\n        const options = this._private__crosshair._internal_options().vertLine;\n        if (!options.labelVisible) {\n            return;\n        }\n        const timeScale = this._private__model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return;\n        }\n        data._internal_width = timeScale._internal_width();\n        const value = this._private__valueProvider();\n        if (value === null) {\n            return;\n        }\n        data._internal_coordinate = value._internal_coordinate;\n        const currentTime = timeScale._internal_indexToTimeScalePoint(this._private__crosshair._internal_appliedIndex());\n        data._internal_text = timeScale._internal_formatDateTime(ensureNotNull(currentTime));\n        data._internal_visible = true;\n        const colors = generateContrastColors(options.labelBackgroundColor);\n        data._internal_background = colors._internal_background;\n        data._internal_color = colors._internal_foreground;\n        data._internal_tickVisible = timeScale._internal_options().ticksVisible;\n    }\n}\n\nclass DataSource {\n    constructor() {\n        this._internal__priceScale = null;\n        this._private__zorder = 0;\n    }\n    _internal_zorder() {\n        return this._private__zorder;\n    }\n    _internal_setZorder(zorder) {\n        this._private__zorder = zorder;\n    }\n    _internal_priceScale() {\n        return this._internal__priceScale;\n    }\n    _internal_setPriceScale(priceScale) {\n        this._internal__priceScale = priceScale;\n    }\n    _internal_labelPaneViews(pane) {\n        return [];\n    }\n    _internal_timeAxisViews() {\n        return [];\n    }\n    _internal_visible() {\n        return true;\n    }\n}\n\n/**\n * Represents the crosshair mode.\n */\nvar CrosshairMode;\n(function (CrosshairMode) {\n    /**\n     * This mode allows crosshair to move freely on the chart.\n     */\n    CrosshairMode[CrosshairMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * This mode sticks crosshair's horizontal line to the price value of a single-value series or to the close price of OHLC-based series.\n     */\n    CrosshairMode[CrosshairMode[\"Magnet\"] = 1] = \"Magnet\";\n})(CrosshairMode || (CrosshairMode = {}));\nclass Crosshair extends DataSource {\n    constructor(model, options) {\n        super();\n        this._private__pane = null;\n        this._private__price = NaN;\n        this._private__index = 0;\n        this._private__visible = true;\n        this._private__priceAxisViews = new Map();\n        this._private__subscribed = false;\n        this._private__x = NaN;\n        this._private__y = NaN;\n        this._private__originX = NaN;\n        this._private__originY = NaN;\n        this._private__model = model;\n        this._private__options = options;\n        this._private__markersPaneView = new CrosshairMarksPaneView(model, this);\n        const valuePriceProvider = (rawPriceProvider, rawCoordinateProvider) => {\n            return (priceScale) => {\n                const coordinate = rawCoordinateProvider();\n                const rawPrice = rawPriceProvider();\n                if (priceScale === ensureNotNull(this._private__pane)._internal_defaultPriceScale()) {\n                    // price must be defined\n                    return { _internal_price: rawPrice, _internal_coordinate: coordinate };\n                }\n                else {\n                    // always convert from coordinate\n                    const firstValue = ensureNotNull(priceScale._internal_firstValue());\n                    const price = priceScale._internal_coordinateToPrice(coordinate, firstValue);\n                    return { _internal_price: price, _internal_coordinate: coordinate };\n                }\n            };\n        };\n        const valueTimeProvider = (rawIndexProvider, rawCoordinateProvider) => {\n            return () => {\n                const time = this._private__model._internal_timeScale()._internal_indexToTime(rawIndexProvider());\n                const coordinate = rawCoordinateProvider();\n                if (!time || !Number.isFinite(coordinate)) {\n                    return null;\n                }\n                return {\n                    _internal_time: time,\n                    _internal_coordinate: coordinate,\n                };\n            };\n        };\n        // for current position always return both price and coordinate\n        this._private__currentPosPriceProvider = valuePriceProvider(() => this._private__price, () => this._private__y);\n        const currentPosTimeProvider = valueTimeProvider(() => this._private__index, () => this._internal_appliedX());\n        this._private__timeAxisView = new CrosshairTimeAxisView(this, model, currentPosTimeProvider);\n        this._private__paneView = new CrosshairPaneView(this);\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_saveOriginCoord(x, y) {\n        this._private__originX = x;\n        this._private__originY = y;\n    }\n    _internal_clearOriginCoord() {\n        this._private__originX = NaN;\n        this._private__originY = NaN;\n    }\n    _internal_originCoordX() {\n        return this._private__originX;\n    }\n    _internal_originCoordY() {\n        return this._private__originY;\n    }\n    _internal_setPosition(index, price, pane) {\n        if (!this._private__subscribed) {\n            this._private__subscribed = true;\n        }\n        this._private__visible = true;\n        this._private__tryToUpdateViews(index, price, pane);\n    }\n    _internal_appliedIndex() {\n        return this._private__index;\n    }\n    _internal_appliedX() {\n        return this._private__x;\n    }\n    _internal_appliedY() {\n        return this._private__y;\n    }\n    _internal_visible() {\n        return this._private__visible;\n    }\n    _internal_clearPosition() {\n        this._private__visible = false;\n        this._private__setIndexToLastSeriesBarIndex();\n        this._private__price = NaN;\n        this._private__x = NaN;\n        this._private__y = NaN;\n        this._private__pane = null;\n        this._internal_clearOriginCoord();\n    }\n    _internal_paneViews(pane) {\n        return this._private__pane !== null ? [this._private__paneView, this._private__markersPaneView] : [];\n    }\n    _internal_horzLineVisible(pane) {\n        return pane === this._private__pane && this._private__options.horzLine.visible;\n    }\n    _internal_vertLineVisible() {\n        return this._private__options.vertLine.visible;\n    }\n    _internal_priceAxisViews(pane, priceScale) {\n        if (!this._private__visible || this._private__pane !== pane) {\n            this._private__priceAxisViews.clear();\n        }\n        const views = [];\n        if (this._private__pane === pane) {\n            views.push(this._private__createPriceAxisViewOnDemand(this._private__priceAxisViews, priceScale, this._private__currentPosPriceProvider));\n        }\n        return views;\n    }\n    _internal_timeAxisViews() {\n        return this._private__visible ? [this._private__timeAxisView] : [];\n    }\n    _internal_pane() {\n        return this._private__pane;\n    }\n    _internal_updateAllViews() {\n        this._private__paneView._internal_update();\n        this._private__priceAxisViews.forEach((value) => value._internal_update());\n        this._private__timeAxisView._internal_update();\n        this._private__markersPaneView._internal_update();\n    }\n    _private__priceScaleByPane(pane) {\n        if (pane && !pane._internal_defaultPriceScale()._internal_isEmpty()) {\n            return pane._internal_defaultPriceScale();\n        }\n        return null;\n    }\n    _private__tryToUpdateViews(index, price, pane) {\n        if (this._private__tryToUpdateData(index, price, pane)) {\n            this._internal_updateAllViews();\n        }\n    }\n    _private__tryToUpdateData(newIndex, newPrice, newPane) {\n        const oldX = this._private__x;\n        const oldY = this._private__y;\n        const oldPrice = this._private__price;\n        const oldIndex = this._private__index;\n        const oldPane = this._private__pane;\n        const priceScale = this._private__priceScaleByPane(newPane);\n        this._private__index = newIndex;\n        this._private__x = isNaN(newIndex) ? NaN : this._private__model._internal_timeScale()._internal_indexToCoordinate(newIndex);\n        this._private__pane = newPane;\n        const firstValue = priceScale !== null ? priceScale._internal_firstValue() : null;\n        if (priceScale !== null && firstValue !== null) {\n            this._private__price = newPrice;\n            this._private__y = priceScale._internal_priceToCoordinate(newPrice, firstValue);\n        }\n        else {\n            this._private__price = NaN;\n            this._private__y = NaN;\n        }\n        return (oldX !== this._private__x || oldY !== this._private__y || oldIndex !== this._private__index ||\n            oldPrice !== this._private__price || oldPane !== this._private__pane);\n    }\n    _private__setIndexToLastSeriesBarIndex() {\n        const lastIndexes = this._private__model._internal_serieses()\n            .map((s) => s._internal_bars()._internal_lastIndex())\n            .filter(notNull);\n        const lastBarIndex = (lastIndexes.length === 0) ? null : Math.max(...lastIndexes);\n        this._private__index = lastBarIndex !== null ? lastBarIndex : NaN;\n    }\n    _private__createPriceAxisViewOnDemand(map, priceScale, valueProvider) {\n        let view = map.get(priceScale);\n        if (view === undefined) {\n            view = new CrosshairPriceAxisView(this, priceScale, valueProvider);\n            map.set(priceScale, view);\n        }\n        return view;\n    }\n}\n\nfunction isDefaultPriceScale(priceScaleId) {\n    return priceScaleId === \"left\" /* DefaultPriceScaleId.Left */ || priceScaleId === \"right\" /* DefaultPriceScaleId.Right */;\n}\n\nfunction mergePaneInvalidation(beforeValue, newValue) {\n    if (beforeValue === undefined) {\n        return newValue;\n    }\n    const level = Math.max(beforeValue._internal_level, newValue._internal_level);\n    const autoScale = beforeValue._internal_autoScale || newValue._internal_autoScale;\n    return { _internal_level: level, _internal_autoScale: autoScale };\n}\nclass InvalidateMask {\n    constructor(globalLevel) {\n        this._private__invalidatedPanes = new Map();\n        this._private__timeScaleInvalidations = [];\n        this._private__globalLevel = globalLevel;\n    }\n    _internal_invalidatePane(paneIndex, invalidation) {\n        const prevValue = this._private__invalidatedPanes.get(paneIndex);\n        const newValue = mergePaneInvalidation(prevValue, invalidation);\n        this._private__invalidatedPanes.set(paneIndex, newValue);\n    }\n    _internal_fullInvalidation() {\n        return this._private__globalLevel;\n    }\n    _internal_invalidateForPane(paneIndex) {\n        const paneInvalidation = this._private__invalidatedPanes.get(paneIndex);\n        if (paneInvalidation === undefined) {\n            return {\n                _internal_level: this._private__globalLevel,\n            };\n        }\n        return {\n            _internal_level: Math.max(this._private__globalLevel, paneInvalidation._internal_level),\n            _internal_autoScale: paneInvalidation._internal_autoScale,\n        };\n    }\n    _internal_setFitContent() {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 0 /* TimeScaleInvalidationType.FitContent */ }];\n    }\n    _internal_applyRange(range) {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 1 /* TimeScaleInvalidationType.ApplyRange */, _internal_value: range }];\n    }\n    _internal_setTimeScaleAnimation(animation) {\n        this._private__removeTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 5 /* TimeScaleInvalidationType.Animation */, _internal_value: animation });\n    }\n    _internal_stopTimeScaleAnimation() {\n        this._private__removeTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 6 /* TimeScaleInvalidationType.StopAnimation */ });\n    }\n    _internal_resetTimeScale() {\n        this._internal_stopTimeScaleAnimation();\n        // modifies both bar spacing and right offset\n        this._private__timeScaleInvalidations = [{ _internal_type: 4 /* TimeScaleInvalidationType.Reset */ }];\n    }\n    _internal_setBarSpacing(barSpacing) {\n        this._internal_stopTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 2 /* TimeScaleInvalidationType.ApplyBarSpacing */, _internal_value: barSpacing });\n    }\n    _internal_setRightOffset(offset) {\n        this._internal_stopTimeScaleAnimation();\n        this._private__timeScaleInvalidations.push({ _internal_type: 3 /* TimeScaleInvalidationType.ApplyRightOffset */, _internal_value: offset });\n    }\n    _internal_timeScaleInvalidations() {\n        return this._private__timeScaleInvalidations;\n    }\n    _internal_merge(other) {\n        for (const tsInvalidation of other._private__timeScaleInvalidations) {\n            this._private__applyTimeScaleInvalidation(tsInvalidation);\n        }\n        this._private__globalLevel = Math.max(this._private__globalLevel, other._private__globalLevel);\n        other._private__invalidatedPanes.forEach((invalidation, index) => {\n            this._internal_invalidatePane(index, invalidation);\n        });\n    }\n    static _internal_light() {\n        return new InvalidateMask(2 /* InvalidationLevel.Light */);\n    }\n    static _internal_full() {\n        return new InvalidateMask(3 /* InvalidationLevel.Full */);\n    }\n    _private__applyTimeScaleInvalidation(invalidation) {\n        switch (invalidation._internal_type) {\n            case 0 /* TimeScaleInvalidationType.FitContent */:\n                this._internal_setFitContent();\n                break;\n            case 1 /* TimeScaleInvalidationType.ApplyRange */:\n                this._internal_applyRange(invalidation._internal_value);\n                break;\n            case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n                this._internal_setBarSpacing(invalidation._internal_value);\n                break;\n            case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n                this._internal_setRightOffset(invalidation._internal_value);\n                break;\n            case 4 /* TimeScaleInvalidationType.Reset */:\n                this._internal_resetTimeScale();\n                break;\n            case 5 /* TimeScaleInvalidationType.Animation */:\n                this._internal_setTimeScaleAnimation(invalidation._internal_value);\n                break;\n            case 6 /* TimeScaleInvalidationType.StopAnimation */:\n                this._private__removeTimeScaleAnimation();\n        }\n    }\n    _private__removeTimeScaleAnimation() {\n        const index = this._private__timeScaleInvalidations.findIndex((inv) => inv._internal_type === 5 /* TimeScaleInvalidationType.Animation */);\n        if (index !== -1) {\n            this._private__timeScaleInvalidations.splice(index, 1);\n        }\n    }\n}\n\nconst formatterOptions = {\n    _internal_decimalSign: '.',\n    _internal_decimalSignFractional: '\\'',\n};\n/**\n * @param value - The number of convert.\n * @param length - The length. Must be between 0 and 16 inclusive.\n */\nfunction numberToStringWithLeadingZero(value, length) {\n    if (!isNumber(value)) {\n        return 'n/a';\n    }\n    if (!isInteger(length)) {\n        throw new TypeError('invalid length');\n    }\n    if (length < 0 || length > 16) {\n        throw new TypeError('invalid length');\n    }\n    if (length === 0) {\n        return value.toString();\n    }\n    const dummyString = '0000000000000000';\n    return (dummyString + value.toString()).slice(-length);\n}\nclass PriceFormatter {\n    constructor(priceScale, minMove) {\n        if (!minMove) {\n            minMove = 1;\n        }\n        if (!isNumber(priceScale) || !isInteger(priceScale)) {\n            priceScale = 100;\n        }\n        if (priceScale < 0) {\n            throw new TypeError('invalid base');\n        }\n        this._private__priceScale = priceScale;\n        this._private__minMove = minMove;\n        this._private__calculateDecimal();\n    }\n    format(price) {\n        // \\u2212 is unicode's minus sign https://www.fileformat.info/info/unicode/char/2212/index.htm\n        // we should use it because it has the same width as plus sign +\n        const sign = price < 0 ? '\\u2212' : '';\n        price = Math.abs(price);\n        return sign + this._private__formatAsDecimal(price);\n    }\n    _private__calculateDecimal() {\n        // check if this._base is power of 10\n        // for double fractional _fractionalLength if for the main fractional only\n        this._internal__fractionalLength = 0;\n        if (this._private__priceScale > 0 && this._private__minMove > 0) {\n            let base = this._private__priceScale;\n            while (base > 1) {\n                base /= 10;\n                this._internal__fractionalLength++;\n            }\n        }\n    }\n    _private__formatAsDecimal(price) {\n        const base = this._private__priceScale / this._private__minMove;\n        let intPart = Math.floor(price);\n        let fracString = '';\n        const fracLength = this._internal__fractionalLength !== undefined ? this._internal__fractionalLength : NaN;\n        if (base > 1) {\n            let fracPart = +(Math.round(price * base) - intPart * base).toFixed(this._internal__fractionalLength);\n            if (fracPart >= base) {\n                fracPart -= base;\n                intPart += 1;\n            }\n            fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(+fracPart.toFixed(this._internal__fractionalLength) * this._private__minMove, fracLength);\n        }\n        else {\n            // should round int part to min move\n            intPart = Math.round(intPart * base) / base;\n            // if min move > 1, fractional part is always = 0\n            if (fracLength > 0) {\n                fracString = formatterOptions._internal_decimalSign + numberToStringWithLeadingZero(0, fracLength);\n            }\n        }\n        return intPart.toFixed(0) + fracString;\n    }\n}\n\nclass PercentageFormatter extends PriceFormatter {\n    constructor(priceScale = 100) {\n        super(priceScale);\n    }\n    format(price) {\n        return `${super.format(price)}%`;\n    }\n}\n\nclass VolumeFormatter {\n    constructor(precision) {\n        this._private__precision = precision;\n    }\n    format(vol) {\n        let sign = '';\n        if (vol < 0) {\n            sign = '-';\n            vol = -vol;\n        }\n        if (vol < 995) {\n            return sign + this._private__formatNumber(vol);\n        }\n        else if (vol < 999995) {\n            return sign + this._private__formatNumber(vol / 1000) + 'K';\n        }\n        else if (vol < 999999995) {\n            vol = 1000 * Math.round(vol / 1000);\n            return sign + this._private__formatNumber(vol / 1000000) + 'M';\n        }\n        else {\n            vol = 1000000 * Math.round(vol / 1000000);\n            return sign + this._private__formatNumber(vol / 1000000000) + 'B';\n        }\n    }\n    _private__formatNumber(value) {\n        let res;\n        const priceScale = Math.pow(10, this._private__precision);\n        value = Math.round(value * priceScale) / priceScale;\n        if (value >= 1e-15 && value < 1) {\n            res = value.toFixed(this._private__precision).replace(/\\.?0+$/, ''); // regex removes trailing zeroes\n        }\n        else {\n            res = String(value);\n        }\n        return res.replace(/(\\.[1-9]*)0+$/, (e, p1) => p1);\n    }\n}\n\n// eslint-disable-next-line max-params, complexity\nfunction walkLine(renderingScope, items, lineType, visibleRange, barWidth, \n// the values returned by styleGetter are compared using the operator !==,\n// so if styleGetter returns objects, then styleGetter should return the same object for equal styles\nstyleGetter, finishStyledArea) {\n    if (items.length === 0 || visibleRange.from >= items.length || visibleRange.to <= 0) {\n        return;\n    }\n    const ctx = renderingScope.context;\n    const firstItem = items[visibleRange.from];\n    let currentStyle = styleGetter(renderingScope, firstItem);\n    let currentStyleFirstItem = firstItem;\n    if (visibleRange.to - visibleRange.from < 2) {\n        const halfBarWidth = barWidth / 2;\n        ctx.beginPath();\n        const item1 = { _internal_x: firstItem._internal_x - halfBarWidth, _internal_y: firstItem._internal_y };\n        const item2 = { _internal_x: firstItem._internal_x + halfBarWidth, _internal_y: firstItem._internal_y };\n        ctx.moveTo(item1._internal_x, item1._internal_y);\n        ctx.lineTo(item2._internal_x, item2._internal_y);\n        finishStyledArea(ctx, currentStyle, item1, item2);\n        return;\n    }\n    const changeStyle = (newStyle, currentItem) => {\n        finishStyledArea(ctx, currentStyle, currentStyleFirstItem, currentItem);\n        ctx.beginPath();\n        currentStyle = newStyle;\n        currentStyleFirstItem = currentItem;\n    };\n    let currentItem = currentStyleFirstItem;\n    ctx.beginPath();\n    ctx.moveTo(firstItem._internal_x, firstItem._internal_y);\n    for (let i = visibleRange.from + 1; i < visibleRange.to; ++i) {\n        currentItem = items[i];\n        const itemStyle = styleGetter(renderingScope, currentItem);\n        switch (lineType) {\n            case 0 /* LineType.Simple */:\n                ctx.lineTo(currentItem._internal_x, currentItem._internal_y);\n                break;\n            case 1 /* LineType.WithSteps */:\n                ctx.lineTo(currentItem._internal_x, items[i - 1]._internal_y);\n                if (itemStyle !== currentStyle) {\n                    changeStyle(itemStyle, currentItem);\n                    ctx.lineTo(currentItem._internal_x, items[i - 1]._internal_y);\n                }\n                ctx.lineTo(currentItem._internal_x, currentItem._internal_y);\n                break;\n            case 2 /* LineType.Curved */: {\n                const [cp1, cp2] = getControlPoints(items, i - 1, i);\n                ctx.bezierCurveTo(cp1._internal_x, cp1._internal_y, cp2._internal_x, cp2._internal_y, currentItem._internal_x, currentItem._internal_y);\n                break;\n            }\n        }\n        if (lineType !== 1 /* LineType.WithSteps */ && itemStyle !== currentStyle) {\n            changeStyle(itemStyle, currentItem);\n            ctx.moveTo(currentItem._internal_x, currentItem._internal_y);\n        }\n    }\n    if (currentStyleFirstItem !== currentItem || currentStyleFirstItem === currentItem && lineType === 1 /* LineType.WithSteps */) {\n        finishStyledArea(ctx, currentStyle, currentStyleFirstItem, currentItem);\n    }\n}\nconst curveTension = 6;\nfunction subtract(p1, p2) {\n    return { _internal_x: p1._internal_x - p2._internal_x, _internal_y: p1._internal_y - p2._internal_y };\n}\nfunction add(p1, p2) {\n    return { _internal_x: p1._internal_x + p2._internal_x, _internal_y: p1._internal_y + p2._internal_y };\n}\nfunction divide(p1, n) {\n    return { _internal_x: p1._internal_x / n, _internal_y: p1._internal_y / n };\n}\n/**\n * @returns Two control points that can be used as arguments to {@link CanvasRenderingContext2D.bezierCurveTo} to draw a curved line between `points[fromPointIndex]` and `points[toPointIndex]`.\n */\nfunction getControlPoints(points, fromPointIndex, toPointIndex) {\n    const beforeFromPointIndex = Math.max(0, fromPointIndex - 1);\n    const afterToPointIndex = Math.min(points.length - 1, toPointIndex + 1);\n    const cp1 = add(points[fromPointIndex], divide(subtract(points[toPointIndex], points[beforeFromPointIndex]), curveTension));\n    const cp2 = subtract(points[toPointIndex], divide(subtract(points[afterToPointIndex], points[fromPointIndex]), curveTension));\n    return [cp1, cp2];\n}\n\nfunction finishStyledArea$1(baseLevelCoordinate, ctx, style, areaFirstItem, newAreaFirstItem) {\n    ctx.lineTo(newAreaFirstItem._internal_x, baseLevelCoordinate);\n    ctx.lineTo(areaFirstItem._internal_x, baseLevelCoordinate);\n    ctx.closePath();\n    ctx.fillStyle = style;\n    ctx.fill();\n}\nclass PaneRendererAreaBase extends MediaCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        var _a;\n        if (this._internal__data === null) {\n            return;\n        }\n        const { _internal_items: items, _internal_visibleRange: visibleRange, _internal_barWidth: barWidth, _internal_lineWidth: lineWidth, _internal_lineStyle: lineStyle, _internal_lineType: lineType } = this._internal__data;\n        const baseLevelCoordinate = (_a = this._internal__data._internal_baseLevelCoordinate) !== null && _a !== void 0 ? _a : (this._internal__data._internal_invertFilledArea ? 0 : renderingScope.mediaSize.height);\n        if (visibleRange === null) {\n            return;\n        }\n        const ctx = renderingScope.context;\n        ctx.lineCap = 'butt';\n        ctx.lineJoin = 'round';\n        ctx.lineWidth = lineWidth;\n        setLineStyle(ctx, lineStyle);\n        // walk lines with width=1 to have more accurate gradient's filling\n        ctx.lineWidth = 1;\n        walkLine(renderingScope, items, lineType, visibleRange, barWidth, this._internal__fillStyle.bind(this), finishStyledArea$1.bind(null, baseLevelCoordinate));\n    }\n}\n\nclass PaneRendererArea extends PaneRendererAreaBase {\n    constructor() {\n        super(...arguments);\n        this._private__fillCache = null;\n    }\n    _internal__fillStyle(renderingScope, item) {\n        const { context: ctx, mediaSize } = renderingScope;\n        const { _internal_topColor: topColor, _internal_bottomColor: bottomColor } = item;\n        const bottom = mediaSize.height;\n        if (this._private__fillCache !== null &&\n            this._private__fillCache.topColor === topColor &&\n            this._private__fillCache.bottomColor === bottomColor &&\n            this._private__fillCache.bottom === bottom) {\n            return this._private__fillCache.fillStyle;\n        }\n        const fillStyle = ctx.createLinearGradient(0, 0, 0, bottom);\n        fillStyle.addColorStop(0, topColor);\n        fillStyle.addColorStop(1, bottomColor);\n        this._private__fillCache = { topColor, bottomColor, fillStyle, bottom };\n        return fillStyle;\n    }\n}\n\nfunction finishStyledArea(ctx, style) {\n    ctx.strokeStyle = style;\n    ctx.stroke();\n}\nclass PaneRendererLineBase extends MediaCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._internal__data = null;\n    }\n    _internal_setData(data) {\n        this._internal__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        if (this._internal__data === null) {\n            return;\n        }\n        const { _internal_items: items, _internal_visibleRange: visibleRange, _internal_barWidth: barWidth, _internal_lineType: lineType, _internal_lineWidth: lineWidth, _internal_lineStyle: lineStyle } = this._internal__data;\n        if (visibleRange === null) {\n            return;\n        }\n        const ctx = renderingScope.context;\n        ctx.lineCap = 'butt';\n        ctx.lineWidth = lineWidth;\n        setLineStyle(ctx, lineStyle);\n        ctx.lineJoin = 'round';\n        walkLine(renderingScope, items, lineType, visibleRange, barWidth, this._internal__strokeStyle.bind(this), finishStyledArea);\n    }\n}\n\nclass PaneRendererLine extends PaneRendererLineBase {\n    _internal__strokeStyle(renderingScope, item) {\n        return item._internal_lineColor;\n    }\n}\n\n/**\n * Binary function that accepts two arguments (the first of the type of array elements, and the second is always val), and returns a value convertible to bool.\n * The value returned indicates whether the first argument is considered to go before the second.\n * The function shall not modify any of its arguments.\n */\nfunction lowerbound(arr, value, compare, start = 0, to = arr.length) {\n    let count = to - start;\n    while (0 < count) {\n        const count2 = (count >> 1);\n        const mid = start + count2;\n        if (compare(arr[mid], value)) {\n            start = mid + 1;\n            count -= count2 + 1;\n        }\n        else {\n            count = count2;\n        }\n    }\n    return start;\n}\nfunction upperbound(arr, value, compare, start = 0, to = arr.length) {\n    let count = to - start;\n    while (0 < count) {\n        const count2 = (count >> 1);\n        const mid = start + count2;\n        if (!(compare(value, arr[mid]))) {\n            start = mid + 1;\n            count -= count2 + 1;\n        }\n        else {\n            count = count2;\n        }\n    }\n    return start;\n}\n\nfunction lowerBoundItemsCompare(item, time) {\n    return item._internal_time < time;\n}\nfunction upperBoundItemsCompare(time, item) {\n    return time < item._internal_time;\n}\nfunction visibleTimedValues(items, range, extendedRange) {\n    const firstBar = range._internal_left();\n    const lastBar = range._internal_right();\n    const from = lowerbound(items, firstBar, lowerBoundItemsCompare);\n    const to = upperbound(items, lastBar, upperBoundItemsCompare);\n    if (!extendedRange) {\n        return { from, to };\n    }\n    let extendedFrom = from;\n    let extendedTo = to;\n    if (from > 0 && from < items.length && items[from]._internal_time >= firstBar) {\n        extendedFrom = from - 1;\n    }\n    if (to > 0 && to < items.length && items[to - 1]._internal_time <= lastBar) {\n        extendedTo = to + 1;\n    }\n    return { from: extendedFrom, to: extendedTo };\n}\n\nclass SeriesPaneViewBase {\n    constructor(series, model, extendedVisibleRange) {\n        this._internal__invalidated = true;\n        this._internal__dataInvalidated = true;\n        this._internal__optionsInvalidated = true;\n        this._internal__items = [];\n        this._internal__itemsVisibleRange = null;\n        this._internal__series = series;\n        this._internal__model = model;\n        this._private__extendedVisibleRange = extendedVisibleRange;\n    }\n    _internal_update(updateType) {\n        this._internal__invalidated = true;\n        if (updateType === 'data') {\n            this._internal__dataInvalidated = true;\n        }\n        if (updateType === 'options') {\n            this._internal__optionsInvalidated = true;\n        }\n    }\n    _internal_renderer() {\n        if (!this._internal__series._internal_visible()) {\n            return null;\n        }\n        this._private__makeValid();\n        return this._internal__itemsVisibleRange === null ? null : this._internal__renderer;\n    }\n    _internal__updateOptions() {\n        this._internal__items = this._internal__items.map((item) => (Object.assign(Object.assign({}, item), this._internal__series._internal_barColorer()._internal_barStyle(item._internal_time))));\n    }\n    _internal__clearVisibleRange() {\n        this._internal__itemsVisibleRange = null;\n    }\n    _private__makeValid() {\n        if (this._internal__dataInvalidated) {\n            this._internal__fillRawPoints();\n            this._internal__dataInvalidated = false;\n        }\n        if (this._internal__optionsInvalidated) {\n            this._internal__updateOptions();\n            this._internal__optionsInvalidated = false;\n        }\n        if (this._internal__invalidated) {\n            this._private__makeValidImpl();\n            this._internal__invalidated = false;\n        }\n    }\n    _private__makeValidImpl() {\n        const priceScale = this._internal__series._internal_priceScale();\n        const timeScale = this._internal__model._internal_timeScale();\n        this._internal__clearVisibleRange();\n        if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n            return;\n        }\n        const visibleBars = timeScale._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return;\n        }\n        if (this._internal__series._internal_bars()._internal_size() === 0) {\n            return;\n        }\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        this._internal__itemsVisibleRange = visibleTimedValues(this._internal__items, visibleBars, this._private__extendedVisibleRange);\n        this._internal__convertToCoordinates(priceScale, timeScale, firstValue._internal_value);\n        this._internal__prepareRendererData();\n    }\n}\n\nclass LinePaneViewBase extends SeriesPaneViewBase {\n    constructor(series, model) {\n        super(series, model, true);\n    }\n    _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n        priceScale._internal_pointsArrayToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__createRawItemBase(time, price) {\n        return {\n            _internal_time: time,\n            _internal_price: price,\n            _internal_x: NaN,\n            _internal_y: NaN,\n        };\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows().map((row) => {\n            const value = row._internal_value[3 /* PlotRowValueIndex.Close */];\n            return this._internal__createRawItem(row._internal_index, value, colorer);\n        });\n    }\n}\n\nclass SeriesAreaPaneView extends LinePaneViewBase {\n    constructor(series, model) {\n        super(series, model);\n        this._internal__renderer = new CompositeRenderer();\n        this._private__areaRenderer = new PaneRendererArea();\n        this._private__lineRenderer = new PaneRendererLine();\n        this._internal__renderer._internal_setRenderers([this._private__areaRenderer, this._private__lineRenderer]);\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const areaStyleProperties = this._internal__series._internal_options();\n        this._private__areaRenderer._internal_setData({\n            _internal_lineType: areaStyleProperties.lineType,\n            _internal_items: this._internal__items,\n            _internal_lineStyle: areaStyleProperties.lineStyle,\n            _internal_lineWidth: areaStyleProperties.lineWidth,\n            _internal_baseLevelCoordinate: null,\n            _internal_invertFilledArea: areaStyleProperties.invertFilledArea,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n        });\n        this._private__lineRenderer._internal_setData({\n            _internal_lineType: areaStyleProperties.lineType,\n            _internal_items: this._internal__items,\n            _internal_lineStyle: areaStyleProperties.lineStyle,\n            _internal_lineWidth: areaStyleProperties.lineWidth,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n        });\n    }\n}\n\nfunction optimalBarWidth(barSpacing, pixelRatio) {\n    return Math.floor(barSpacing * 0.3 * pixelRatio);\n}\nfunction optimalCandlestickWidth(barSpacing, pixelRatio) {\n    const barSpacingSpecialCaseFrom = 2.5;\n    const barSpacingSpecialCaseTo = 4;\n    const barSpacingSpecialCaseCoeff = 3;\n    if (barSpacing >= barSpacingSpecialCaseFrom && barSpacing <= barSpacingSpecialCaseTo) {\n        return Math.floor(barSpacingSpecialCaseCoeff * pixelRatio);\n    }\n    // coeff should be 1 on small barspacing and go to 0.8 while groing bar spacing\n    const barSpacingReducingCoeff = 0.2;\n    const coeff = 1 - barSpacingReducingCoeff * Math.atan(Math.max(barSpacingSpecialCaseTo, barSpacing) - barSpacingSpecialCaseTo) / (Math.PI * 0.5);\n    const res = Math.floor(barSpacing * coeff * pixelRatio);\n    const scaledBarSpacing = Math.floor(barSpacing * pixelRatio);\n    const optimal = Math.min(res, scaledBarSpacing);\n    return Math.max(Math.floor(pixelRatio), optimal);\n}\n\nclass PaneRendererBars extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__barWidth = 0;\n        this._private__barLineWidth = 0;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    // eslint-disable-next-line complexity\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        this._private__barWidth = this._private__calcBarWidth(horizontalPixelRatio);\n        // grid and crosshair have line width = Math.floor(pixelRatio)\n        // if this value is odd, we have to make bars' width odd\n        // if this value is even, we have to make bars' width even\n        // in order of keeping crosshair-over-bar drawing symmetric\n        if (this._private__barWidth >= 2) {\n            const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n            if ((lineWidth % 2) !== (this._private__barWidth % 2)) {\n                this._private__barWidth--;\n            }\n        }\n        // if scale is compressed, bar could become less than 1 CSS pixel\n        this._private__barLineWidth = this._private__data._internal_thinBars ? Math.min(this._private__barWidth, Math.floor(horizontalPixelRatio)) : this._private__barWidth;\n        let prevColor = null;\n        const drawOpenClose = this._private__barLineWidth <= this._private__barWidth && this._private__data._internal_barSpacing >= Math.floor(1.5 * horizontalPixelRatio);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; ++i) {\n            const bar = this._private__data._internal_bars[i];\n            if (prevColor !== bar._internal_barColor) {\n                ctx.fillStyle = bar._internal_barColor;\n                prevColor = bar._internal_barColor;\n            }\n            const bodyWidthHalf = Math.floor(this._private__barLineWidth * 0.5);\n            const bodyCenter = Math.round(bar._internal_x * horizontalPixelRatio);\n            const bodyLeft = bodyCenter - bodyWidthHalf;\n            const bodyWidth = this._private__barLineWidth;\n            const bodyRight = bodyLeft + bodyWidth - 1;\n            const high = Math.min(bar._internal_highY, bar._internal_lowY);\n            const low = Math.max(bar._internal_highY, bar._internal_lowY);\n            const bodyTop = Math.round(high * verticalPixelRatio) - bodyWidthHalf;\n            const bodyBottom = Math.round(low * verticalPixelRatio) + bodyWidthHalf;\n            const bodyHeight = Math.max((bodyBottom - bodyTop), this._private__barLineWidth);\n            ctx.fillRect(bodyLeft, bodyTop, bodyWidth, bodyHeight);\n            const sideWidth = Math.ceil(this._private__barWidth * 1.5);\n            if (drawOpenClose) {\n                if (this._private__data._internal_openVisible) {\n                    const openLeft = bodyCenter - sideWidth;\n                    let openTop = Math.max(bodyTop, Math.round(bar._internal_openY * verticalPixelRatio) - bodyWidthHalf);\n                    let openBottom = openTop + bodyWidth - 1;\n                    if (openBottom > bodyTop + bodyHeight - 1) {\n                        openBottom = bodyTop + bodyHeight - 1;\n                        openTop = openBottom - bodyWidth + 1;\n                    }\n                    ctx.fillRect(openLeft, openTop, bodyLeft - openLeft, openBottom - openTop + 1);\n                }\n                const closeRight = bodyCenter + sideWidth;\n                let closeTop = Math.max(bodyTop, Math.round(bar._internal_closeY * verticalPixelRatio) - bodyWidthHalf);\n                let closeBottom = closeTop + bodyWidth - 1;\n                if (closeBottom > bodyTop + bodyHeight - 1) {\n                    closeBottom = bodyTop + bodyHeight - 1;\n                    closeTop = closeBottom - bodyWidth + 1;\n                }\n                ctx.fillRect(bodyRight + 1, closeTop, closeRight - bodyRight, closeBottom - closeTop + 1);\n            }\n        }\n    }\n    _private__calcBarWidth(pixelRatio) {\n        const limit = Math.floor(pixelRatio);\n        return Math.max(limit, Math.floor(optimalBarWidth(ensureNotNull(this._private__data)._internal_barSpacing, pixelRatio)));\n    }\n}\n\nclass BarsPaneViewBase extends SeriesPaneViewBase {\n    constructor(series, model) {\n        super(series, model, false);\n    }\n    _internal__convertToCoordinates(priceScale, timeScale, firstValue) {\n        timeScale._internal_indexesToCoordinates(this._internal__items, undefinedIfNull(this._internal__itemsVisibleRange));\n        priceScale._internal_barPricesToCoordinates(this._internal__items, firstValue, undefinedIfNull(this._internal__itemsVisibleRange));\n    }\n    _internal__createDefaultItem(time, bar, colorer) {\n        return {\n            _internal_time: time,\n            _internal_open: bar._internal_value[0 /* PlotRowValueIndex.Open */],\n            _internal_high: bar._internal_value[1 /* PlotRowValueIndex.High */],\n            _internal_low: bar._internal_value[2 /* PlotRowValueIndex.Low */],\n            _internal_close: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n            _internal_x: NaN,\n            _internal_openY: NaN,\n            _internal_highY: NaN,\n            _internal_lowY: NaN,\n            _internal_closeY: NaN,\n        };\n    }\n    _internal__fillRawPoints() {\n        const colorer = this._internal__series._internal_barColorer();\n        this._internal__items = this._internal__series._internal_bars()._internal_rows().map((row) => this._internal__createRawItem(row._internal_index, row, colorer));\n    }\n}\n\nclass SeriesBarsPaneView extends BarsPaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererBars();\n    }\n    _internal__createRawItem(time, bar, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createDefaultItem(time, bar, colorer)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const barStyleProps = this._internal__series._internal_options();\n        this._internal__renderer._internal_setData({\n            _internal_bars: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_openVisible: barStyleProps.openVisible,\n            _internal_thinBars: barStyleProps.thinBars,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n        });\n    }\n}\n\nfunction clamp(value, minVal, maxVal) {\n    return Math.min(Math.max(value, minVal), maxVal);\n}\nfunction isBaseDecimal(value) {\n    if (value < 0) {\n        return false;\n    }\n    for (let current = value; current > 1; current /= 10) {\n        if ((current % 10) !== 0) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction greaterOrEqual(x1, x2, epsilon) {\n    return (x2 - x1) <= epsilon;\n}\nfunction equal(x1, x2, epsilon) {\n    return Math.abs(x1 - x2) < epsilon;\n}\nfunction log10(x) {\n    if (x <= 0) {\n        return NaN;\n    }\n    return Math.log(x) / Math.log(10);\n}\nfunction min(arr) {\n    if (arr.length < 1) {\n        throw Error('array is empty');\n    }\n    let minVal = arr[0];\n    for (let i = 1; i < arr.length; ++i) {\n        if (arr[i] < minVal) {\n            minVal = arr[i];\n        }\n    }\n    return minVal;\n}\nfunction ceiledEven(x) {\n    const ceiled = Math.ceil(x);\n    return (ceiled % 2 !== 0) ? ceiled - 1 : ceiled;\n}\nfunction ceiledOdd(x) {\n    const ceiled = Math.ceil(x);\n    return (ceiled % 2 === 0) ? ceiled - 1 : ceiled;\n}\n\nclass PaneRendererBaselineArea extends PaneRendererAreaBase {\n    constructor() {\n        super(...arguments);\n        this._private__fillCache = null;\n    }\n    _internal__fillStyle(renderingScope, item) {\n        var _a;\n        const { context: ctx, mediaSize } = renderingScope;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const data = this._internal__data;\n        const { _internal_topFillColor1: topFillColor1, _internal_topFillColor2: topFillColor2, _internal_bottomFillColor1: bottomFillColor1, _internal_bottomFillColor2: bottomFillColor2 } = item;\n        const baseLevelCoordinate = (_a = data._internal_baseLevelCoordinate) !== null && _a !== void 0 ? _a : mediaSize.height;\n        const bottom = mediaSize.height;\n        if (this._private__fillCache !== null &&\n            this._private__fillCache.topFillColor1 === topFillColor1 &&\n            this._private__fillCache.topFillColor2 === topFillColor2 &&\n            this._private__fillCache.bottomFillColor1 === bottomFillColor1 &&\n            this._private__fillCache.bottomFillColor2 === bottomFillColor2 &&\n            this._private__fillCache.baseLevelCoordinate === baseLevelCoordinate &&\n            this._private__fillCache.bottom === bottom) {\n            return this._private__fillCache.fillStyle;\n        }\n        const fillStyle = ctx.createLinearGradient(0, 0, 0, bottom);\n        const baselinePercent = clamp(baseLevelCoordinate / bottom, 0, 1);\n        fillStyle.addColorStop(0, topFillColor1);\n        fillStyle.addColorStop(baselinePercent, topFillColor2);\n        fillStyle.addColorStop(baselinePercent, bottomFillColor1);\n        fillStyle.addColorStop(1, bottomFillColor2);\n        this._private__fillCache = {\n            topFillColor1,\n            topFillColor2,\n            bottomFillColor1,\n            bottomFillColor2,\n            fillStyle,\n            baseLevelCoordinate,\n            bottom,\n        };\n        return fillStyle;\n    }\n}\n\nclass PaneRendererBaselineLine extends PaneRendererLineBase {\n    constructor() {\n        super(...arguments);\n        this._private__strokeCache = null;\n    }\n    _internal__strokeStyle(renderingScope, item) {\n        const { context: ctx, mediaSize } = renderingScope;\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const data = this._internal__data;\n        const { _internal_topLineColor: topLineColor, _internal_bottomLineColor: bottomLineColor } = item;\n        const { _internal_baseLevelCoordinate: baseLevelCoordinate } = data;\n        const bottom = mediaSize.height;\n        if (this._private__strokeCache !== null &&\n            this._private__strokeCache.topLineColor === topLineColor &&\n            this._private__strokeCache.bottomLineColor === bottomLineColor &&\n            this._private__strokeCache.baseLevelCoordinate === baseLevelCoordinate &&\n            this._private__strokeCache.bottom === bottom) {\n            return this._private__strokeCache.strokeStyle;\n        }\n        const strokeStyle = ctx.createLinearGradient(0, 0, 0, bottom);\n        const baselinePercent = clamp(baseLevelCoordinate / bottom, 0, 1);\n        strokeStyle.addColorStop(0, topLineColor);\n        strokeStyle.addColorStop(baselinePercent, topLineColor);\n        strokeStyle.addColorStop(baselinePercent, bottomLineColor);\n        strokeStyle.addColorStop(1, bottomLineColor);\n        this._private__strokeCache = {\n            topLineColor,\n            bottomLineColor,\n            strokeStyle,\n            baseLevelCoordinate,\n            bottom,\n        };\n        return strokeStyle;\n    }\n}\n\nclass SeriesBaselinePaneView extends LinePaneViewBase {\n    constructor(series, model) {\n        super(series, model);\n        this._internal__renderer = new CompositeRenderer();\n        this._private__baselineAreaRenderer = new PaneRendererBaselineArea();\n        this._private__baselineLineRenderer = new PaneRendererBaselineLine();\n        this._internal__renderer._internal_setRenderers([this._private__baselineAreaRenderer, this._private__baselineLineRenderer]);\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        const baselineProps = this._internal__series._internal_options();\n        const baseLevelCoordinate = this._internal__series._internal_priceScale()._internal_priceToCoordinate(baselineProps.baseValue.price, firstValue._internal_value);\n        const barWidth = this._internal__model._internal_timeScale()._internal_barSpacing();\n        this._private__baselineAreaRenderer._internal_setData({\n            _internal_items: this._internal__items,\n            _internal_lineWidth: baselineProps.lineWidth,\n            _internal_lineStyle: baselineProps.lineStyle,\n            _internal_lineType: baselineProps.lineType,\n            _internal_baseLevelCoordinate: baseLevelCoordinate,\n            _internal_invertFilledArea: false,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: barWidth,\n        });\n        this._private__baselineLineRenderer._internal_setData({\n            _internal_items: this._internal__items,\n            _internal_lineWidth: baselineProps.lineWidth,\n            _internal_lineStyle: baselineProps.lineStyle,\n            _internal_lineType: baselineProps.lineType,\n            _internal_baseLevelCoordinate: baseLevelCoordinate,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: barWidth,\n        });\n    }\n}\n\nclass PaneRendererCandlesticks extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        // scaled with pixelRatio\n        this._private__barWidth = 0;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal__drawImpl(renderingScope) {\n        if (this._private__data === null || this._private__data._internal_bars.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        const { horizontalPixelRatio } = renderingScope;\n        // now we know pixelRatio and we could calculate barWidth effectively\n        this._private__barWidth = optimalCandlestickWidth(this._private__data._internal_barSpacing, horizontalPixelRatio);\n        // grid and crosshair have line width = Math.floor(pixelRatio)\n        // if this value is odd, we have to make candlesticks' width odd\n        // if this value is even, we have to make candlesticks' width even\n        // in order of keeping crosshair-over-candlesticks drawing symmetric\n        if (this._private__barWidth >= 2) {\n            const wickWidth = Math.floor(horizontalPixelRatio);\n            if ((wickWidth % 2) !== (this._private__barWidth % 2)) {\n                this._private__barWidth--;\n            }\n        }\n        const bars = this._private__data._internal_bars;\n        if (this._private__data._internal_wickVisible) {\n            this._private__drawWicks(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n        if (this._private__data._internal_borderVisible) {\n            this._private__drawBorder(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        if (!this._private__data._internal_borderVisible || this._private__barWidth > borderWidth * 2) {\n            this._private__drawCandles(renderingScope, bars, this._private__data._internal_visibleRange);\n        }\n    }\n    _private__drawWicks(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevWickColor = '';\n        let wickWidth = Math.min(Math.floor(horizontalPixelRatio), Math.floor(this._private__data._internal_barSpacing * horizontalPixelRatio));\n        wickWidth = Math.max(Math.floor(horizontalPixelRatio), Math.min(wickWidth, this._private__barWidth));\n        const wickOffset = Math.floor(wickWidth * 0.5);\n        let prevEdge = null;\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            if (bar._internal_barWickColor !== prevWickColor) {\n                ctx.fillStyle = bar._internal_barWickColor;\n                prevWickColor = bar._internal_barWickColor;\n            }\n            const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const high = Math.round(bar._internal_highY * verticalPixelRatio);\n            const low = Math.round(bar._internal_lowY * verticalPixelRatio);\n            const scaledX = Math.round(horizontalPixelRatio * bar._internal_x);\n            let left = scaledX - wickOffset;\n            const right = left + wickWidth - 1;\n            if (prevEdge !== null) {\n                left = Math.max(prevEdge + 1, left);\n                left = Math.min(left, right);\n            }\n            const width = right - left + 1;\n            ctx.fillRect(left, high, width, top - high);\n            ctx.fillRect(left, bottom + 1, width, low - bottom);\n            prevEdge = right;\n        }\n    }\n    _private__calculateBorderWidth(pixelRatio) {\n        let borderWidth = Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio);\n        if (this._private__barWidth <= 2 * borderWidth) {\n            borderWidth = Math.floor((this._private__barWidth - 1) * 0.5);\n        }\n        const res = Math.max(Math.floor(pixelRatio), borderWidth);\n        if (this._private__barWidth <= res * 2) {\n            // do not draw bodies, restore original value\n            return Math.max(Math.floor(pixelRatio), Math.floor(1 /* Constants.BarBorderWidth */ * pixelRatio));\n        }\n        return res;\n    }\n    _private__drawBorder(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevBorderColor = '';\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        let prevEdge = null;\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            if (bar._internal_barBorderColor !== prevBorderColor) {\n                ctx.fillStyle = bar._internal_barBorderColor;\n                prevBorderColor = bar._internal_barBorderColor;\n            }\n            let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n            // this is important to calculate right before patching left\n            const right = left + this._private__barWidth - 1;\n            const top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            const bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            if (prevEdge !== null) {\n                left = Math.max(prevEdge + 1, left);\n                left = Math.min(left, right);\n            }\n            if (this._private__data._internal_barSpacing * horizontalPixelRatio > 2 * borderWidth) {\n                fillRectInnerBorder(ctx, left, top, right - left + 1, bottom - top + 1, borderWidth);\n            }\n            else {\n                const width = right - left + 1;\n                ctx.fillRect(left, top, width, bottom - top + 1);\n            }\n            prevEdge = right;\n        }\n    }\n    _private__drawCandles(renderingScope, bars, visibleRange) {\n        if (this._private__data === null) {\n            return;\n        }\n        const { context: ctx, horizontalPixelRatio, verticalPixelRatio } = renderingScope;\n        let prevBarColor = '';\n        const borderWidth = this._private__calculateBorderWidth(horizontalPixelRatio);\n        for (let i = visibleRange.from; i < visibleRange.to; i++) {\n            const bar = bars[i];\n            let top = Math.round(Math.min(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            let bottom = Math.round(Math.max(bar._internal_openY, bar._internal_closeY) * verticalPixelRatio);\n            let left = Math.round(bar._internal_x * horizontalPixelRatio) - Math.floor(this._private__barWidth * 0.5);\n            let right = left + this._private__barWidth - 1;\n            if (bar._internal_barColor !== prevBarColor) {\n                const barColor = bar._internal_barColor;\n                ctx.fillStyle = barColor;\n                prevBarColor = barColor;\n            }\n            if (this._private__data._internal_borderVisible) {\n                left += borderWidth;\n                top += borderWidth;\n                right -= borderWidth;\n                bottom -= borderWidth;\n            }\n            if (top > bottom) {\n                continue;\n            }\n            ctx.fillRect(left, top, right - left + 1, bottom - top + 1);\n        }\n    }\n}\n\nclass SeriesCandlesticksPaneView extends BarsPaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererCandlesticks();\n    }\n    _internal__createRawItem(time, bar, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createDefaultItem(time, bar, colorer)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const candlestickStyleProps = this._internal__series._internal_options();\n        this._internal__renderer._internal_setData({\n            _internal_bars: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_wickVisible: candlestickStyleProps.wickVisible,\n            _internal_borderVisible: candlestickStyleProps.borderVisible,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n        });\n    }\n}\n\nconst showSpacingMinimalBarWidth = 1;\nconst alignToMinimalWidthLimit = 4;\nclass PaneRendererHistogram extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__precalculatedCache = [];\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n        this._private__precalculatedCache = [];\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        if (!this._private__precalculatedCache.length) {\n            this._private__fillPrecalculatedCache(horizontalPixelRatio);\n        }\n        const tickWidth = Math.max(1, Math.floor(verticalPixelRatio));\n        const histogramBase = Math.round((this._private__data._internal_histogramBase) * verticalPixelRatio);\n        const topHistogramBase = histogramBase - Math.floor(tickWidth / 2);\n        const bottomHistogramBase = topHistogramBase + tickWidth;\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            const y = Math.round(item._internal_y * verticalPixelRatio);\n            ctx.fillStyle = item._internal_barColor;\n            let top;\n            let bottom;\n            if (y <= topHistogramBase) {\n                top = y;\n                bottom = bottomHistogramBase;\n            }\n            else {\n                top = topHistogramBase;\n                bottom = y - Math.floor(tickWidth / 2) + tickWidth;\n            }\n            ctx.fillRect(current._internal_left, top, current._internal_right - current._internal_left + 1, bottom - top);\n        }\n    }\n    // eslint-disable-next-line complexity\n    _private__fillPrecalculatedCache(pixelRatio) {\n        if (this._private__data === null || this._private__data._internal_items.length === 0 || this._private__data._internal_visibleRange === null) {\n            this._private__precalculatedCache = [];\n            return;\n        }\n        const spacing = Math.ceil(this._private__data._internal_barSpacing * pixelRatio) <= showSpacingMinimalBarWidth ? 0 : Math.max(1, Math.floor(pixelRatio));\n        const columnWidth = Math.round(this._private__data._internal_barSpacing * pixelRatio) - spacing;\n        this._private__precalculatedCache = new Array(this._private__data._internal_visibleRange.to - this._private__data._internal_visibleRange.from);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            // force cast to avoid ensureDefined call\n            const x = Math.round(item._internal_x * pixelRatio);\n            let left;\n            let right;\n            if (columnWidth % 2) {\n                const halfWidth = (columnWidth - 1) / 2;\n                left = x - halfWidth;\n                right = x + halfWidth;\n            }\n            else {\n                // shift pixel to left\n                const halfWidth = columnWidth / 2;\n                left = x - halfWidth;\n                right = x + halfWidth - 1;\n            }\n            this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from] = {\n                _internal_left: left,\n                _internal_right: right,\n                _internal_roundedCenter: x,\n                _internal_center: (item._internal_x * pixelRatio),\n                _internal_time: item._internal_time,\n            };\n        }\n        // correct positions\n        for (let i = this._private__data._internal_visibleRange.from + 1; i < this._private__data._internal_visibleRange.to; i++) {\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            const prev = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from - 1];\n            if (current._internal_time !== prev._internal_time + 1) {\n                continue;\n            }\n            if (current._internal_left - prev._internal_right !== (spacing + 1)) {\n                // have to align\n                if (prev._internal_roundedCenter > prev._internal_center) {\n                    // prev wasshifted to left, so add pixel to right\n                    prev._internal_right = current._internal_left - spacing - 1;\n                }\n                else {\n                    // extend current to left\n                    current._internal_left = prev._internal_right + spacing + 1;\n                }\n            }\n        }\n        let minWidth = Math.ceil(this._private__data._internal_barSpacing * pixelRatio);\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n            // this could happen if barspacing < 1\n            if (current._internal_right < current._internal_left) {\n                current._internal_right = current._internal_left;\n            }\n            const width = current._internal_right - current._internal_left + 1;\n            minWidth = Math.min(width, minWidth);\n        }\n        if (spacing > 0 && minWidth < alignToMinimalWidthLimit) {\n            for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n                const current = this._private__precalculatedCache[i - this._private__data._internal_visibleRange.from];\n                const width = current._internal_right - current._internal_left + 1;\n                if (width > minWidth) {\n                    if (current._internal_roundedCenter > current._internal_center) {\n                        current._internal_right -= 1;\n                    }\n                    else {\n                        current._internal_left += 1;\n                    }\n                }\n            }\n        }\n    }\n}\n\nclass SeriesHistogramPaneView extends LinePaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererHistogram();\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const data = {\n            _internal_items: this._internal__items,\n            _internal_barSpacing: this._internal__model._internal_timeScale()._internal_barSpacing(),\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_histogramBase: this._internal__series._internal_priceScale()._internal_priceToCoordinate(this._internal__series._internal_options().base, ensureNotNull(this._internal__series._internal_firstValue())._internal_value),\n        };\n        this._internal__renderer._internal_setData(data);\n    }\n}\n\nclass SeriesLinePaneView extends LinePaneViewBase {\n    constructor() {\n        super(...arguments);\n        this._internal__renderer = new PaneRendererLine();\n    }\n    _internal__createRawItem(time, price, colorer) {\n        return Object.assign(Object.assign({}, this._internal__createRawItemBase(time, price)), colorer._internal_barStyle(time));\n    }\n    _internal__prepareRendererData() {\n        const lineStyleProps = this._internal__series._internal_options();\n        const data = {\n            _internal_items: this._internal__items,\n            _internal_lineStyle: lineStyleProps.lineStyle,\n            _internal_lineType: lineStyleProps.lineType,\n            _internal_lineWidth: lineStyleProps.lineWidth,\n            _internal_visibleRange: this._internal__itemsVisibleRange,\n            _internal_barWidth: this._internal__model._internal_timeScale()._internal_barSpacing(),\n        };\n        this._internal__renderer._internal_setData(data);\n    }\n}\n\nconst defaultReplacementRe = /[2-9]/g;\nclass TextWidthCache {\n    constructor(size = 50) {\n        this._private__actualSize = 0;\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__tick2Labels = {};\n        this._private__cache = new Map();\n        this._private__maxSize = size;\n    }\n    _internal_reset() {\n        this._private__actualSize = 0;\n        this._private__cache.clear();\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__tick2Labels = {};\n    }\n    _internal_measureText(ctx, text, optimizationReplacementRe) {\n        return this._private__getMetrics(ctx, text, optimizationReplacementRe).width;\n    }\n    _internal_yMidCorrection(ctx, text, optimizationReplacementRe) {\n        const metrics = this._private__getMetrics(ctx, text, optimizationReplacementRe);\n        // if actualBoundingBoxAscent/actualBoundingBoxDescent are not supported we use 0 as a fallback\n        return ((metrics.actualBoundingBoxAscent || 0) - (metrics.actualBoundingBoxDescent || 0)) / 2;\n    }\n    _private__getMetrics(ctx, text, optimizationReplacementRe) {\n        const re = optimizationReplacementRe || defaultReplacementRe;\n        const cacheString = String(text).replace(re, '0');\n        if (this._private__cache.has(cacheString)) {\n            return ensureDefined(this._private__cache.get(cacheString))._internal_metrics;\n        }\n        if (this._private__actualSize === this._private__maxSize) {\n            const oldestValue = this._private__tick2Labels[this._private__oldestTick];\n            delete this._private__tick2Labels[this._private__oldestTick];\n            this._private__cache.delete(oldestValue);\n            this._private__oldestTick++;\n            this._private__actualSize--;\n        }\n        ctx.save();\n        ctx.textBaseline = 'middle';\n        const metrics = ctx.measureText(cacheString);\n        ctx.restore();\n        if (metrics.width === 0 && !!text.length) {\n            // measureText can return 0 in FF depending on a canvas size, don't cache it\n            return metrics;\n        }\n        this._private__cache.set(cacheString, { _internal_metrics: metrics, _internal_tick: this._private__usageTick });\n        this._private__tick2Labels[this._private__usageTick] = cacheString;\n        this._private__actualSize++;\n        this._private__usageTick++;\n        return metrics;\n    }\n}\n\nclass PanePriceAxisViewRenderer {\n    constructor(textWidthCache) {\n        this._private__priceAxisViewRenderer = null;\n        this._private__rendererOptions = null;\n        this._private__align = 'right';\n        this._private__textWidthCache = textWidthCache;\n    }\n    _internal_setParams(priceAxisViewRenderer, rendererOptions, align) {\n        this._private__priceAxisViewRenderer = priceAxisViewRenderer;\n        this._private__rendererOptions = rendererOptions;\n        this._private__align = align;\n    }\n    _internal_draw(target) {\n        if (this._private__rendererOptions === null || this._private__priceAxisViewRenderer === null) {\n            return;\n        }\n        this._private__priceAxisViewRenderer._internal_draw(target, this._private__rendererOptions, this._private__textWidthCache, this._private__align);\n    }\n}\nclass PanePriceAxisView {\n    constructor(priceAxisView, dataSource, chartModel) {\n        this._private__priceAxisView = priceAxisView;\n        this._private__textWidthCache = new TextWidthCache(50); // when should we clear cache?\n        this._private__dataSource = dataSource;\n        this._private__chartModel = chartModel;\n        this._private__fontSize = -1;\n        this._private__renderer = new PanePriceAxisViewRenderer(this._private__textWidthCache);\n    }\n    _internal_renderer() {\n        const pane = this._private__chartModel._internal_paneForSource(this._private__dataSource);\n        if (pane === null) {\n            return null;\n        }\n        // this price scale will be used to find label placement only (left, right, none)\n        const priceScale = pane._internal_isOverlay(this._private__dataSource) ? pane._internal_defaultVisiblePriceScale() : this._private__dataSource._internal_priceScale();\n        if (priceScale === null) {\n            return null;\n        }\n        const position = pane._internal_priceScalePosition(priceScale);\n        if (position === 'overlay') {\n            return null;\n        }\n        const options = this._private__chartModel._internal_priceAxisRendererOptions();\n        if (options._internal_fontSize !== this._private__fontSize) {\n            this._private__fontSize = options._internal_fontSize;\n            this._private__textWidthCache._internal_reset();\n        }\n        this._private__renderer._internal_setParams(this._private__priceAxisView._internal_paneRenderer(), options, position);\n        return this._private__renderer;\n    }\n}\n\nclass HorizontalLineRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_hitTest(x, y) {\n        var _a;\n        if (!((_a = this._private__data) === null || _a === void 0 ? void 0 : _a._internal_visible)) {\n            return null;\n        }\n        const { _internal_y: itemY, _internal_lineWidth: lineWidth, _internal_externalId: externalId } = this._private__data;\n        // add a fixed area threshold around line (Y + width) for hit test\n        if (y >= itemY - lineWidth - 7 /* Constants.HitTestThreshold */ && y <= itemY + lineWidth + 7 /* Constants.HitTestThreshold */) {\n            return {\n                _internal_hitTestData: this._private__data,\n                _internal_externalId: externalId,\n            };\n        }\n        return null;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        if (this._private__data._internal_visible === false) {\n            return;\n        }\n        const y = Math.round(this._private__data._internal_y * verticalPixelRatio);\n        if (y < 0 || y > bitmapSize.height) {\n            return;\n        }\n        ctx.lineCap = 'butt';\n        ctx.strokeStyle = this._private__data._internal_color;\n        ctx.lineWidth = Math.floor(this._private__data._internal_lineWidth * horizontalPixelRatio);\n        setLineStyle(ctx, this._private__data._internal_lineStyle);\n        drawHorizontalLine(ctx, y, 0, bitmapSize.width);\n    }\n}\n\nclass SeriesHorizontalLinePaneView {\n    constructor(series) {\n        this._internal__lineRendererData = {\n            _internal_y: 0,\n            _internal_color: 'rgba(0, 0, 0, 0)',\n            _internal_lineWidth: 1,\n            _internal_lineStyle: 0 /* LineStyle.Solid */,\n            _internal_visible: false,\n        };\n        this._internal__lineRenderer = new HorizontalLineRenderer();\n        this._private__invalidated = true;\n        this._internal__series = series;\n        this._internal__model = series._internal_model();\n        this._internal__lineRenderer._internal_setData(this._internal__lineRendererData);\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (!this._internal__series._internal_visible()) {\n            return null;\n        }\n        if (this._private__invalidated) {\n            this._internal__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._internal__lineRenderer;\n    }\n}\n\nclass SeriesHorizontalBaseLinePaneView extends SeriesHorizontalLinePaneView {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(series) {\n        super(series);\n    }\n    _internal__updateImpl() {\n        this._internal__lineRendererData._internal_visible = false;\n        const priceScale = this._internal__series._internal_priceScale();\n        const mode = priceScale._internal_mode()._internal_mode;\n        if (mode !== 2 /* PriceScaleMode.Percentage */ && mode !== 3 /* PriceScaleMode.IndexedTo100 */) {\n            return;\n        }\n        const seriesOptions = this._internal__series._internal_options();\n        if (!seriesOptions.baseLineVisible || !this._internal__series._internal_visible()) {\n            return;\n        }\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        this._internal__lineRendererData._internal_visible = true;\n        this._internal__lineRendererData._internal_y = priceScale._internal_priceToCoordinate(firstValue._internal_value, firstValue._internal_value);\n        this._internal__lineRendererData._internal_color = seriesOptions.baseLineColor;\n        this._internal__lineRendererData._internal_lineWidth = seriesOptions.baseLineWidth;\n        this._internal__lineRendererData._internal_lineStyle = seriesOptions.baseLineStyle;\n    }\n}\n\nclass SeriesLastPriceAnimationRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_data() {\n        return this._private__data;\n    }\n    _internal__drawImpl({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) {\n        const data = this._private__data;\n        if (data === null) {\n            return;\n        }\n        const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        const correction = (tickWidth % 2) / 2;\n        const centerX = Math.round(data._internal_center.x * horizontalPixelRatio) + correction; // correct x coordinate only\n        const centerY = data._internal_center.y * verticalPixelRatio;\n        ctx.fillStyle = data._internal_seriesLineColor;\n        ctx.beginPath();\n        // TODO: it is better to have different horizontal and vertical radii\n        const centerPointRadius = Math.max(2, data._internal_seriesLineWidth * 1.5) * horizontalPixelRatio;\n        ctx.arc(centerX, centerY, centerPointRadius, 0, 2 * Math.PI, false);\n        ctx.fill();\n        ctx.fillStyle = data._internal_fillColor;\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio, 0, 2 * Math.PI, false);\n        ctx.fill();\n        ctx.lineWidth = tickWidth;\n        ctx.strokeStyle = data._internal_strokeColor;\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, data._internal_radius * horizontalPixelRatio + tickWidth / 2, 0, 2 * Math.PI, false);\n        ctx.stroke();\n    }\n}\n\nconst animationStagesData = [\n    {\n        _internal_start: 0,\n        _internal_end: 0.25 /* Constants.Stage1Period */,\n        _internal_startRadius: 4 /* Constants.Stage1StartCircleRadius */,\n        _internal_endRadius: 10 /* Constants.Stage1EndCircleRadius */,\n        _internal_startFillAlpha: 0.25 /* Constants.Stage1StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage1EndFillAlpha */,\n        _internal_startStrokeAlpha: 0.4 /* Constants.Stage1StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0.8 /* Constants.Stage1EndStrokeAlpha */,\n    },\n    {\n        _internal_start: 0.25 /* Constants.Stage1Period */,\n        _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n        _internal_startRadius: 10 /* Constants.Stage2StartCircleRadius */,\n        _internal_endRadius: 14 /* Constants.Stage2EndCircleRadius */,\n        _internal_startFillAlpha: 0 /* Constants.Stage2StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage2EndFillAlpha */,\n        _internal_startStrokeAlpha: 0.8 /* Constants.Stage2StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0 /* Constants.Stage2EndStrokeAlpha */,\n    },\n    {\n        _internal_start: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */,\n        _internal_end: 0.25 /* Constants.Stage1Period */ + 0.275 /* Constants.Stage2Period */ + 0.475 /* Constants.Stage3Period */,\n        _internal_startRadius: 14 /* Constants.Stage3StartCircleRadius */,\n        _internal_endRadius: 14 /* Constants.Stage3EndCircleRadius */,\n        _internal_startFillAlpha: 0 /* Constants.Stage3StartFillAlpha */,\n        _internal_endFillAlpha: 0 /* Constants.Stage3EndFillAlpha */,\n        _internal_startStrokeAlpha: 0 /* Constants.Stage3StartStrokeAlpha */,\n        _internal_endStrokeAlpha: 0 /* Constants.Stage3EndStrokeAlpha */,\n    },\n];\nfunction color(seriesLineColor, stage, startAlpha, endAlpha) {\n    const alpha = startAlpha + (endAlpha - startAlpha) * stage;\n    return applyAlpha(seriesLineColor, alpha);\n}\nfunction radius(stage, startRadius, endRadius) {\n    return startRadius + (endRadius - startRadius) * stage;\n}\nfunction animationData(durationSinceStart, lineColor) {\n    const globalStage = (durationSinceStart % 2600 /* Constants.AnimationPeriod */) / 2600 /* Constants.AnimationPeriod */;\n    let currentStageData;\n    for (const stageData of animationStagesData) {\n        if (globalStage >= stageData._internal_start && globalStage <= stageData._internal_end) {\n            currentStageData = stageData;\n            break;\n        }\n    }\n    assert(currentStageData !== undefined, 'Last price animation internal logic error');\n    const subStage = (globalStage - currentStageData._internal_start) / (currentStageData._internal_end - currentStageData._internal_start);\n    return {\n        _internal_fillColor: color(lineColor, subStage, currentStageData._internal_startFillAlpha, currentStageData._internal_endFillAlpha),\n        _internal_strokeColor: color(lineColor, subStage, currentStageData._internal_startStrokeAlpha, currentStageData._internal_endStrokeAlpha),\n        _internal_radius: radius(subStage, currentStageData._internal_startRadius, currentStageData._internal_endRadius),\n    };\n}\nclass SeriesLastPriceAnimationPaneView {\n    constructor(series) {\n        this._private__renderer = new SeriesLastPriceAnimationRenderer();\n        this._private__invalidated = true;\n        this._private__stageInvalidated = true;\n        this._private__startTime = performance.now();\n        this._private__endTime = this._private__startTime - 1;\n        this._private__series = series;\n    }\n    _internal_onDataCleared() {\n        this._private__endTime = this._private__startTime - 1;\n        this._internal_update();\n    }\n    _internal_onNewRealtimeDataReceived() {\n        this._internal_update();\n        if (this._private__series._internal_options().lastPriceAnimation === 2 /* LastPriceAnimationMode.OnDataUpdate */) {\n            const now = performance.now();\n            const timeToAnimationEnd = this._private__endTime - now;\n            if (timeToAnimationEnd > 0) {\n                if (timeToAnimationEnd < 2600 /* Constants.AnimationPeriod */ / 4) {\n                    this._private__endTime += 2600 /* Constants.AnimationPeriod */;\n                }\n                return;\n            }\n            this._private__startTime = now;\n            this._private__endTime = now + 2600 /* Constants.AnimationPeriod */;\n        }\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_invalidateStage() {\n        this._private__stageInvalidated = true;\n    }\n    _internal_visible() {\n        // center point is always visible if lastPriceAnimation is not LastPriceAnimationMode.Disabled\n        return this._private__series._internal_options().lastPriceAnimation !== 0 /* LastPriceAnimationMode.Disabled */;\n    }\n    _internal_animationActive() {\n        switch (this._private__series._internal_options().lastPriceAnimation) {\n            case 0 /* LastPriceAnimationMode.Disabled */:\n                return false;\n            case 1 /* LastPriceAnimationMode.Continuous */:\n                return true;\n            case 2 /* LastPriceAnimationMode.OnDataUpdate */:\n                return performance.now() <= this._private__endTime;\n        }\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n            this._private__stageInvalidated = false;\n        }\n        else if (this._private__stageInvalidated) {\n            this._private__updateRendererDataStage();\n            this._private__stageInvalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        this._private__renderer._internal_setData(null);\n        const timeScale = this._private__series._internal_model()._internal_timeScale();\n        const visibleRange = timeScale._internal_visibleStrictRange();\n        const firstValue = this._private__series._internal_firstValue();\n        if (visibleRange === null || firstValue === null) {\n            return;\n        }\n        const lastValue = this._private__series._internal_lastValueData(true);\n        if (lastValue._internal_noData || !visibleRange._internal_contains(lastValue._internal_index)) {\n            return;\n        }\n        const lastValuePoint = {\n            x: timeScale._internal_indexToCoordinate(lastValue._internal_index),\n            y: this._private__series._internal_priceScale()._internal_priceToCoordinate(lastValue._internal_price, firstValue._internal_value),\n        };\n        const seriesLineColor = lastValue._internal_color;\n        const seriesLineWidth = this._private__series._internal_options().lineWidth;\n        const data = animationData(this._private__duration(), seriesLineColor);\n        this._private__renderer._internal_setData({\n            _internal_seriesLineColor: seriesLineColor,\n            _internal_seriesLineWidth: seriesLineWidth,\n            _internal_fillColor: data._internal_fillColor,\n            _internal_strokeColor: data._internal_strokeColor,\n            _internal_radius: data._internal_radius,\n            _internal_center: lastValuePoint,\n        });\n    }\n    _private__updateRendererDataStage() {\n        const rendererData = this._private__renderer._internal_data();\n        if (rendererData !== null) {\n            const data = animationData(this._private__duration(), rendererData._internal_seriesLineColor);\n            rendererData._internal_fillColor = data._internal_fillColor;\n            rendererData._internal_strokeColor = data._internal_strokeColor;\n            rendererData._internal_radius = data._internal_radius;\n        }\n    }\n    _private__duration() {\n        return this._internal_animationActive() ? performance.now() - this._private__startTime : 2600 /* Constants.AnimationPeriod */ - 1;\n    }\n}\n\nfunction size(barSpacing, coeff) {\n    const result = Math.min(Math.max(barSpacing, 12 /* Constants.MinShapeSize */), 30 /* Constants.MaxShapeSize */) * coeff;\n    return ceiledOdd(result);\n}\nfunction shapeSize(shape, originalSize) {\n    switch (shape) {\n        case 'arrowDown':\n        case 'arrowUp':\n            return size(originalSize, 1);\n        case 'circle':\n            return size(originalSize, 0.8);\n        case 'square':\n            return size(originalSize, 0.7);\n    }\n}\nfunction calculateShapeHeight(barSpacing) {\n    return ceiledEven(size(barSpacing, 1));\n}\nfunction shapeMargin(barSpacing) {\n    return Math.max(size(barSpacing, 0.1), 3 /* Constants.MinShapeMargin */);\n}\n\nfunction drawSquare(ctx, centerX, centerY, size) {\n    const squareSize = shapeSize('square', size);\n    const halfSize = (squareSize - 1) / 2;\n    const left = centerX - halfSize;\n    const top = centerY - halfSize;\n    ctx.fillRect(left, top, squareSize, squareSize);\n}\nfunction hitTestSquare(centerX, centerY, size, x, y) {\n    const squareSize = shapeSize('square', size);\n    const halfSize = (squareSize - 1) / 2;\n    const left = centerX - halfSize;\n    const top = centerY - halfSize;\n    return x >= left && x <= left + squareSize &&\n        y >= top && y <= top + squareSize;\n}\n\nfunction drawArrow(up, ctx, centerX, centerY, size) {\n    const arrowSize = shapeSize('arrowUp', size);\n    const halfArrowSize = (arrowSize - 1) / 2;\n    const baseSize = ceiledOdd(size / 2);\n    const halfBaseSize = (baseSize - 1) / 2;\n    ctx.beginPath();\n    if (up) {\n        ctx.moveTo(centerX - halfArrowSize, centerY);\n        ctx.lineTo(centerX, centerY - halfArrowSize);\n        ctx.lineTo(centerX + halfArrowSize, centerY);\n        ctx.lineTo(centerX + halfBaseSize, centerY);\n        ctx.lineTo(centerX + halfBaseSize, centerY + halfArrowSize);\n        ctx.lineTo(centerX - halfBaseSize, centerY + halfArrowSize);\n        ctx.lineTo(centerX - halfBaseSize, centerY);\n    }\n    else {\n        ctx.moveTo(centerX - halfArrowSize, centerY);\n        ctx.lineTo(centerX, centerY + halfArrowSize);\n        ctx.lineTo(centerX + halfArrowSize, centerY);\n        ctx.lineTo(centerX + halfBaseSize, centerY);\n        ctx.lineTo(centerX + halfBaseSize, centerY - halfArrowSize);\n        ctx.lineTo(centerX - halfBaseSize, centerY - halfArrowSize);\n        ctx.lineTo(centerX - halfBaseSize, centerY);\n    }\n    ctx.fill();\n}\nfunction hitTestArrow(up, centerX, centerY, size, x, y) {\n    // TODO: implement arrow hit test\n    return hitTestSquare(centerX, centerY, size, x, y);\n}\n\nfunction drawCircle(ctx, centerX, centerY, size) {\n    const circleSize = shapeSize('circle', size);\n    const halfSize = (circleSize - 1) / 2;\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, halfSize, 0, 2 * Math.PI, false);\n    ctx.fill();\n}\nfunction hitTestCircle(centerX, centerY, size, x, y) {\n    const circleSize = shapeSize('circle', size);\n    const tolerance = 2 + circleSize / 2;\n    const xOffset = centerX - x;\n    const yOffset = centerY - y;\n    const dist = Math.sqrt(xOffset * xOffset + yOffset * yOffset);\n    return dist <= tolerance;\n}\n\nfunction drawText(ctx, text, x, y) {\n    ctx.fillText(text, x, y);\n}\nfunction hitTestText(textX, textY, textWidth, textHeight, x, y) {\n    const halfHeight = textHeight / 2;\n    return x >= textX && x <= textX + textWidth &&\n        y >= textY - halfHeight && y <= textY + halfHeight;\n}\n\nclass SeriesMarkersRenderer extends MediaCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n        this._private__textWidthCache = new TextWidthCache();\n        this._private__fontSize = -1;\n        this._private__fontFamily = '';\n        this._private__font = '';\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal_setParams(fontSize, fontFamily) {\n        if (this._private__fontSize !== fontSize || this._private__fontFamily !== fontFamily) {\n            this._private__fontSize = fontSize;\n            this._private__fontFamily = fontFamily;\n            this._private__font = makeFont(fontSize, fontFamily);\n            this._private__textWidthCache._internal_reset();\n        }\n    }\n    _internal_hitTest(x, y) {\n        if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n            return null;\n        }\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            if (hitTestItem(item, x, y)) {\n                return {\n                    _internal_hitTestData: item._internal_internalId,\n                    _internal_externalId: item._internal_externalId,\n                };\n            }\n        }\n        return null;\n    }\n    _internal__drawImpl({ context: ctx }, isHovered, hitTestData) {\n        if (this._private__data === null || this._private__data._internal_visibleRange === null) {\n            return;\n        }\n        ctx.textBaseline = 'middle';\n        ctx.font = this._private__font;\n        for (let i = this._private__data._internal_visibleRange.from; i < this._private__data._internal_visibleRange.to; i++) {\n            const item = this._private__data._internal_items[i];\n            if (item._internal_text !== undefined) {\n                item._internal_text._internal_width = this._private__textWidthCache._internal_measureText(ctx, item._internal_text._internal_content);\n                item._internal_text._internal_height = this._private__fontSize;\n                item._internal_text._internal_x = item._internal_x - item._internal_text._internal_width / 2;\n            }\n            drawItem(item, ctx);\n        }\n    }\n}\nfunction drawItem(item, ctx) {\n    ctx.fillStyle = item._internal_color;\n    if (item._internal_text !== undefined) {\n        drawText(ctx, item._internal_text._internal_content, item._internal_text._internal_x, item._internal_text._internal_y);\n    }\n    drawShape(item, ctx);\n}\nfunction drawShape(item, ctx) {\n    if (item._internal_size === 0) {\n        return;\n    }\n    switch (item._internal_shape) {\n        case 'arrowDown':\n            drawArrow(false, ctx, item._internal_x, item._internal_y, item._internal_size);\n            return;\n        case 'arrowUp':\n            drawArrow(true, ctx, item._internal_x, item._internal_y, item._internal_size);\n            return;\n        case 'circle':\n            drawCircle(ctx, item._internal_x, item._internal_y, item._internal_size);\n            return;\n        case 'square':\n            drawSquare(ctx, item._internal_x, item._internal_y, item._internal_size);\n            return;\n    }\n    ensureNever(item._internal_shape);\n}\nfunction hitTestItem(item, x, y) {\n    if (item._internal_text !== undefined && hitTestText(item._internal_text._internal_x, item._internal_text._internal_y, item._internal_text._internal_width, item._internal_text._internal_height, x, y)) {\n        return true;\n    }\n    return hitTestShape(item, x, y);\n}\nfunction hitTestShape(item, x, y) {\n    if (item._internal_size === 0) {\n        return false;\n    }\n    switch (item._internal_shape) {\n        case 'arrowDown':\n            return hitTestArrow(true, item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'arrowUp':\n            return hitTestArrow(false, item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'circle':\n            return hitTestCircle(item._internal_x, item._internal_y, item._internal_size, x, y);\n        case 'square':\n            return hitTestSquare(item._internal_x, item._internal_y, item._internal_size, x, y);\n    }\n}\n\n// eslint-disable-next-line max-params\nfunction fillSizeAndY(rendererItem, marker, seriesData, offsets, textHeight, shapeMargin, priceScale, timeScale, firstValue) {\n    const inBarPrice = isNumber(seriesData) ? seriesData : seriesData._internal_close;\n    const highPrice = isNumber(seriesData) ? seriesData : seriesData._internal_high;\n    const lowPrice = isNumber(seriesData) ? seriesData : seriesData._internal_low;\n    const sizeMultiplier = isNumber(marker.size) ? Math.max(marker.size, 0) : 1;\n    const shapeSize = calculateShapeHeight(timeScale._internal_barSpacing()) * sizeMultiplier;\n    const halfSize = shapeSize / 2;\n    rendererItem._internal_size = shapeSize;\n    switch (marker.position) {\n        case 'inBar': {\n            rendererItem._internal_y = priceScale._internal_priceToCoordinate(inBarPrice, firstValue);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n            }\n            return;\n        }\n        case 'aboveBar': {\n            rendererItem._internal_y = (priceScale._internal_priceToCoordinate(highPrice, firstValue) - halfSize - offsets._internal_aboveBar);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y - halfSize - textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n                offsets._internal_aboveBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n            }\n            offsets._internal_aboveBar += shapeSize + shapeMargin;\n            return;\n        }\n        case 'belowBar': {\n            rendererItem._internal_y = (priceScale._internal_priceToCoordinate(lowPrice, firstValue) + halfSize + offsets._internal_belowBar);\n            if (rendererItem._internal_text !== undefined) {\n                rendererItem._internal_text._internal_y = rendererItem._internal_y + halfSize + shapeMargin + textHeight * (0.5 + 0.1 /* Constants.TextMargin */);\n                offsets._internal_belowBar += textHeight * (1 + 2 * 0.1 /* Constants.TextMargin */);\n            }\n            offsets._internal_belowBar += shapeSize + shapeMargin;\n            return;\n        }\n    }\n    ensureNever(marker.position);\n}\nclass SeriesMarkersPaneView {\n    constructor(series, model) {\n        this._private__invalidated = true;\n        this._private__dataInvalidated = true;\n        this._private__autoScaleMarginsInvalidated = true;\n        this._private__autoScaleMargins = null;\n        this._private__renderer = new SeriesMarkersRenderer();\n        this._private__series = series;\n        this._private__model = model;\n        this._private__data = {\n            _internal_items: [],\n            _internal_visibleRange: null,\n        };\n    }\n    _internal_update(updateType) {\n        this._private__invalidated = true;\n        this._private__autoScaleMarginsInvalidated = true;\n        if (updateType === 'data') {\n            this._private__dataInvalidated = true;\n        }\n    }\n    _internal_renderer(addAnchors) {\n        if (!this._private__series._internal_visible()) {\n            return null;\n        }\n        if (this._private__invalidated) {\n            this._internal__makeValid();\n        }\n        const layout = this._private__model._internal_options().layout;\n        this._private__renderer._internal_setParams(layout.fontSize, layout.fontFamily);\n        this._private__renderer._internal_setData(this._private__data);\n        return this._private__renderer;\n    }\n    _internal_autoScaleMargins() {\n        if (this._private__autoScaleMarginsInvalidated) {\n            if (this._private__series._internal_indexedMarkers().length > 0) {\n                const barSpacing = this._private__model._internal_timeScale()._internal_barSpacing();\n                const shapeMargin$1 = shapeMargin(barSpacing);\n                const marginsAboveAndBelow = calculateShapeHeight(barSpacing) * 1.5 + shapeMargin$1 * 2;\n                this._private__autoScaleMargins = {\n                    above: marginsAboveAndBelow,\n                    below: marginsAboveAndBelow,\n                };\n            }\n            else {\n                this._private__autoScaleMargins = null;\n            }\n            this._private__autoScaleMarginsInvalidated = false;\n        }\n        return this._private__autoScaleMargins;\n    }\n    _internal__makeValid() {\n        const priceScale = this._private__series._internal_priceScale();\n        const timeScale = this._private__model._internal_timeScale();\n        const seriesMarkers = this._private__series._internal_indexedMarkers();\n        if (this._private__dataInvalidated) {\n            this._private__data._internal_items = seriesMarkers.map((marker) => ({\n                _internal_time: marker.time,\n                _internal_x: 0,\n                _internal_y: 0,\n                _internal_size: 0,\n                _internal_shape: marker.shape,\n                _internal_color: marker.color,\n                _internal_internalId: marker.internalId,\n                _internal_externalId: marker.id,\n                _internal_text: undefined,\n            }));\n            this._private__dataInvalidated = false;\n        }\n        const layoutOptions = this._private__model._internal_options().layout;\n        this._private__data._internal_visibleRange = null;\n        const visibleBars = timeScale._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return;\n        }\n        const firstValue = this._private__series._internal_firstValue();\n        if (firstValue === null) {\n            return;\n        }\n        if (this._private__data._internal_items.length === 0) {\n            return;\n        }\n        let prevTimeIndex = NaN;\n        const shapeMargin$1 = shapeMargin(timeScale._internal_barSpacing());\n        const offsets = {\n            _internal_aboveBar: shapeMargin$1,\n            _internal_belowBar: shapeMargin$1,\n        };\n        this._private__data._internal_visibleRange = visibleTimedValues(this._private__data._internal_items, visibleBars, true);\n        for (let index = this._private__data._internal_visibleRange.from; index < this._private__data._internal_visibleRange.to; index++) {\n            const marker = seriesMarkers[index];\n            if (marker.time !== prevTimeIndex) {\n                // new bar, reset stack counter\n                offsets._internal_aboveBar = shapeMargin$1;\n                offsets._internal_belowBar = shapeMargin$1;\n                prevTimeIndex = marker.time;\n            }\n            const rendererItem = this._private__data._internal_items[index];\n            rendererItem._internal_x = timeScale._internal_indexToCoordinate(marker.time);\n            if (marker.text !== undefined && marker.text.length > 0) {\n                rendererItem._internal_text = {\n                    _internal_content: marker.text,\n                    _internal_x: 0,\n                    _internal_y: 0,\n                    _internal_width: 0,\n                    _internal_height: 0,\n                };\n            }\n            const dataAt = this._private__series._internal_dataAt(marker.time);\n            if (dataAt === null) {\n                continue;\n            }\n            fillSizeAndY(rendererItem, marker, dataAt, offsets, layoutOptions.fontSize, shapeMargin$1, priceScale, timeScale, firstValue._internal_value);\n        }\n        this._private__invalidated = false;\n    }\n}\n\nclass SeriesPriceLinePaneView extends SeriesHorizontalLinePaneView {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(series) {\n        super(series);\n    }\n    _internal__updateImpl() {\n        const data = this._internal__lineRendererData;\n        data._internal_visible = false;\n        const seriesOptions = this._internal__series._internal_options();\n        if (!seriesOptions.priceLineVisible || !this._internal__series._internal_visible()) {\n            return;\n        }\n        const lastValueData = this._internal__series._internal_lastValueData(seriesOptions.priceLineSource === 0 /* PriceLineSource.LastBar */);\n        if (lastValueData._internal_noData) {\n            return;\n        }\n        data._internal_visible = true;\n        data._internal_y = lastValueData._internal_coordinate;\n        data._internal_color = this._internal__series._internal_priceLineColor(lastValueData._internal_color);\n        data._internal_lineWidth = seriesOptions.priceLineWidth;\n        data._internal_lineStyle = seriesOptions.priceLineStyle;\n    }\n}\n\nclass SeriesPriceAxisView extends PriceAxisView {\n    constructor(source) {\n        super();\n        this._private__source = source;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonRendererData) {\n        axisRendererData._internal_visible = false;\n        paneRendererData._internal_visible = false;\n        const source = this._private__source;\n        if (!source._internal_visible()) {\n            return;\n        }\n        const seriesOptions = source._internal_options();\n        const showSeriesLastValue = seriesOptions.lastValueVisible;\n        const showSymbolLabel = source._internal_title() !== '';\n        const showPriceAndPercentage = seriesOptions.seriesLastValueMode === 0 /* PriceAxisLastValueMode.LastPriceAndPercentageValue */;\n        const lastValueData = source._internal_lastValueData(false);\n        if (lastValueData._internal_noData) {\n            return;\n        }\n        if (showSeriesLastValue) {\n            axisRendererData._internal_text = this._internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage);\n            axisRendererData._internal_visible = axisRendererData._internal_text.length !== 0;\n        }\n        if (showSymbolLabel || showPriceAndPercentage) {\n            paneRendererData._internal_text = this._internal__paneText(lastValueData, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage);\n            paneRendererData._internal_visible = paneRendererData._internal_text.length > 0;\n        }\n        const lastValueColor = source._internal_priceLineColor(lastValueData._internal_color);\n        const colors = generateContrastColors(lastValueColor);\n        commonRendererData._internal_background = colors._internal_background;\n        commonRendererData._internal_coordinate = lastValueData._internal_coordinate;\n        paneRendererData._internal_borderColor = source._internal_model()._internal_backgroundColorAtYPercentFromTop(lastValueData._internal_coordinate / source._internal_priceScale()._internal_height());\n        axisRendererData._internal_borderColor = lastValueColor;\n        axisRendererData._internal_color = colors._internal_foreground;\n        paneRendererData._internal_color = colors._internal_foreground;\n    }\n    _internal__paneText(lastValue, showSeriesLastValue, showSymbolLabel, showPriceAndPercentage) {\n        let result = '';\n        const title = this._private__source._internal_title();\n        if (showSymbolLabel && title.length !== 0) {\n            result += `${title} `;\n        }\n        if (showSeriesLastValue && showPriceAndPercentage) {\n            result += this._private__source._internal_priceScale()._internal_isPercentage() ?\n                lastValue._internal_formattedPriceAbsolute : lastValue._internal_formattedPricePercentage;\n        }\n        return result.trim();\n    }\n    _internal__axisText(lastValueData, showSeriesLastValue, showPriceAndPercentage) {\n        if (!showSeriesLastValue) {\n            return '';\n        }\n        if (!showPriceAndPercentage) {\n            return lastValueData._internal_text;\n        }\n        return this._private__source._internal_priceScale()._internal_isPercentage() ?\n            lastValueData._internal_formattedPricePercentage : lastValueData._internal_formattedPriceAbsolute;\n    }\n}\n\nclass PriceRangeImpl {\n    constructor(minValue, maxValue) {\n        this._private__minValue = minValue;\n        this._private__maxValue = maxValue;\n    }\n    _internal_equals(pr) {\n        if (pr === null) {\n            return false;\n        }\n        return this._private__minValue === pr._private__minValue && this._private__maxValue === pr._private__maxValue;\n    }\n    _internal_clone() {\n        return new PriceRangeImpl(this._private__minValue, this._private__maxValue);\n    }\n    _internal_minValue() {\n        return this._private__minValue;\n    }\n    _internal_maxValue() {\n        return this._private__maxValue;\n    }\n    _internal_length() {\n        return this._private__maxValue - this._private__minValue;\n    }\n    _internal_isEmpty() {\n        return this._private__maxValue === this._private__minValue || Number.isNaN(this._private__maxValue) || Number.isNaN(this._private__minValue);\n    }\n    _internal_merge(anotherRange) {\n        if (anotherRange === null) {\n            return this;\n        }\n        return new PriceRangeImpl(Math.min(this._internal_minValue(), anotherRange._internal_minValue()), Math.max(this._internal_maxValue(), anotherRange._internal_maxValue()));\n    }\n    _internal_scaleAroundCenter(coeff) {\n        if (!isNumber(coeff)) {\n            return;\n        }\n        const delta = this._private__maxValue - this._private__minValue;\n        if (delta === 0) {\n            return;\n        }\n        const center = (this._private__maxValue + this._private__minValue) * 0.5;\n        let maxDelta = this._private__maxValue - center;\n        let minDelta = this._private__minValue - center;\n        maxDelta *= coeff;\n        minDelta *= coeff;\n        this._private__maxValue = center + maxDelta;\n        this._private__minValue = center + minDelta;\n    }\n    _internal_shift(delta) {\n        if (!isNumber(delta)) {\n            return;\n        }\n        this._private__maxValue += delta;\n        this._private__minValue += delta;\n    }\n    _internal_toRaw() {\n        return {\n            minValue: this._private__minValue,\n            maxValue: this._private__maxValue,\n        };\n    }\n    static _internal_fromRaw(raw) {\n        return (raw === null) ? null : new PriceRangeImpl(raw.minValue, raw.maxValue);\n    }\n}\n\nclass AutoscaleInfoImpl {\n    constructor(priceRange, margins) {\n        this._private__priceRange = priceRange;\n        this._private__margins = margins || null;\n    }\n    _internal_priceRange() {\n        return this._private__priceRange;\n    }\n    _internal_margins() {\n        return this._private__margins;\n    }\n    _internal_toRaw() {\n        if (this._private__priceRange === null) {\n            return null;\n        }\n        return {\n            priceRange: this._private__priceRange._internal_toRaw(),\n            margins: this._private__margins || undefined,\n        };\n    }\n    static _internal_fromRaw(raw) {\n        return (raw === null) ? null : new AutoscaleInfoImpl(PriceRangeImpl._internal_fromRaw(raw.priceRange), raw.margins);\n    }\n}\n\nclass CustomPriceLinePaneView extends SeriesHorizontalLinePaneView {\n    constructor(series, priceLine) {\n        super(series);\n        this._private__priceLine = priceLine;\n    }\n    _internal__updateImpl() {\n        const data = this._internal__lineRendererData;\n        data._internal_visible = false;\n        const lineOptions = this._private__priceLine._internal_options();\n        if (!this._internal__series._internal_visible() || !lineOptions.lineVisible) {\n            return;\n        }\n        const y = this._private__priceLine._internal_yCoord();\n        if (y === null) {\n            return;\n        }\n        data._internal_visible = true;\n        data._internal_y = y;\n        data._internal_color = lineOptions.color;\n        data._internal_lineWidth = lineOptions.lineWidth;\n        data._internal_lineStyle = lineOptions.lineStyle;\n        data._internal_externalId = this._private__priceLine._internal_options().id;\n    }\n}\n\nclass CustomPriceLinePriceAxisView extends PriceAxisView {\n    constructor(series, priceLine) {\n        super();\n        this._private__series = series;\n        this._private__priceLine = priceLine;\n    }\n    _internal__updateRendererData(axisRendererData, paneRendererData, commonData) {\n        axisRendererData._internal_visible = false;\n        paneRendererData._internal_visible = false;\n        const options = this._private__priceLine._internal_options();\n        const labelVisible = options.axisLabelVisible;\n        const showPaneLabel = options.title !== '';\n        const series = this._private__series;\n        if (!labelVisible || !series._internal_visible()) {\n            return;\n        }\n        const y = this._private__priceLine._internal_yCoord();\n        if (y === null) {\n            return;\n        }\n        if (showPaneLabel) {\n            paneRendererData._internal_text = options.title;\n            paneRendererData._internal_visible = true;\n        }\n        paneRendererData._internal_borderColor = series._internal_model()._internal_backgroundColorAtYPercentFromTop(y / series._internal_priceScale()._internal_height());\n        axisRendererData._internal_text = this._private__formatPrice(options.price);\n        axisRendererData._internal_visible = true;\n        const colors = generateContrastColors(options.axisLabelColor || options.color);\n        commonData._internal_background = colors._internal_background;\n        const textColor = options.axisLabelTextColor || colors._internal_foreground;\n        axisRendererData._internal_color = textColor; // price text\n        paneRendererData._internal_color = textColor; // title text\n        commonData._internal_coordinate = y;\n    }\n    _private__formatPrice(price) {\n        const firstValue = this._private__series._internal_firstValue();\n        if (firstValue === null) {\n            return '';\n        }\n        return this._private__series._internal_priceScale()._internal_formatPrice(price, firstValue._internal_value);\n    }\n}\n\nclass CustomPriceLine {\n    constructor(series, options) {\n        this._private__series = series;\n        this._private__options = options;\n        this._private__priceLineView = new CustomPriceLinePaneView(series, this);\n        this._private__priceAxisView = new CustomPriceLinePriceAxisView(series, this);\n        this._private__panePriceAxisView = new PanePriceAxisView(this._private__priceAxisView, series, series._internal_model());\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._internal_update();\n        this._private__series._internal_model()._internal_lightUpdate();\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_paneView() {\n        return this._private__priceLineView;\n    }\n    _internal_labelPaneView() {\n        return this._private__panePriceAxisView;\n    }\n    _internal_priceAxisView() {\n        return this._private__priceAxisView;\n    }\n    _internal_update() {\n        this._private__priceLineView._internal_update();\n        this._private__priceAxisView._internal_update();\n    }\n    _internal_yCoord() {\n        const series = this._private__series;\n        const priceScale = series._internal_priceScale();\n        const timeScale = series._internal_model()._internal_timeScale();\n        if (timeScale._internal_isEmpty() || priceScale._internal_isEmpty()) {\n            return null;\n        }\n        const firstValue = series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return priceScale._internal_priceToCoordinate(this._private__options.price, firstValue._internal_value);\n    }\n}\n\nclass PriceDataSource extends DataSource {\n    constructor(model) {\n        super();\n        this._private__model = model;\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n}\n\nconst barStyleFnMap = {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Bar: (findBar, barStyle, barIndex, precomputedBars) => {\n        var _a;\n        const upColor = barStyle.upColor;\n        const downColor = barStyle.downColor;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : (isUp ? upColor : downColor),\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Candlestick: (findBar, candlestickStyle, barIndex, precomputedBars) => {\n        var _a, _b, _c;\n        const upColor = candlestickStyle.upColor;\n        const downColor = candlestickStyle.downColor;\n        const borderUpColor = candlestickStyle.borderUpColor;\n        const borderDownColor = candlestickStyle.borderDownColor;\n        const wickUpColor = candlestickStyle.wickUpColor;\n        const wickDownColor = candlestickStyle.wickDownColor;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isUp = ensure(currentBar._internal_value[0 /* PlotRowValueIndex.Open */]) <= ensure(currentBar._internal_value[3 /* PlotRowValueIndex.Close */]);\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : (isUp ? upColor : downColor),\n            _internal_barBorderColor: (_b = currentBar._internal_borderColor) !== null && _b !== void 0 ? _b : (isUp ? borderUpColor : borderDownColor),\n            _internal_barWickColor: (_c = currentBar._internal_wickColor) !== null && _c !== void 0 ? _c : (isUp ? wickUpColor : wickDownColor),\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Area: (findBar, areaStyle, barIndex, precomputedBars) => {\n        var _a, _b, _c, _d;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: (_a = currentBar._internal_lineColor) !== null && _a !== void 0 ? _a : areaStyle.lineColor,\n            _internal_lineColor: (_b = currentBar._internal_lineColor) !== null && _b !== void 0 ? _b : areaStyle.lineColor,\n            _internal_topColor: (_c = currentBar._internal_topColor) !== null && _c !== void 0 ? _c : areaStyle.topColor,\n            _internal_bottomColor: (_d = currentBar._internal_bottomColor) !== null && _d !== void 0 ? _d : areaStyle.bottomColor,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Baseline: (findBar, baselineStyle, barIndex, precomputedBars) => {\n        var _a, _b, _c, _d, _e, _f;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        const isAboveBaseline = currentBar._internal_value[3 /* PlotRowValueIndex.Close */] >= baselineStyle.baseValue.price;\n        return {\n            _internal_barColor: isAboveBaseline ? baselineStyle.topLineColor : baselineStyle.bottomLineColor,\n            _internal_topLineColor: (_a = currentBar._internal_topLineColor) !== null && _a !== void 0 ? _a : baselineStyle.topLineColor,\n            _internal_bottomLineColor: (_b = currentBar._internal_bottomLineColor) !== null && _b !== void 0 ? _b : baselineStyle.bottomLineColor,\n            _internal_topFillColor1: (_c = currentBar._internal_topFillColor1) !== null && _c !== void 0 ? _c : baselineStyle.topFillColor1,\n            _internal_topFillColor2: (_d = currentBar._internal_topFillColor2) !== null && _d !== void 0 ? _d : baselineStyle.topFillColor2,\n            _internal_bottomFillColor1: (_e = currentBar._internal_bottomFillColor1) !== null && _e !== void 0 ? _e : baselineStyle.bottomFillColor1,\n            _internal_bottomFillColor2: (_f = currentBar._internal_bottomFillColor2) !== null && _f !== void 0 ? _f : baselineStyle.bottomFillColor2,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Line: (findBar, lineStyle, barIndex, precomputedBars) => {\n        var _a, _b;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : lineStyle.color,\n            _internal_lineColor: (_b = currentBar._internal_color) !== null && _b !== void 0 ? _b : lineStyle.color,\n        };\n    },\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Histogram: (findBar, histogramStyle, barIndex, precomputedBars) => {\n        var _a;\n        const currentBar = ensureNotNull(findBar(barIndex, precomputedBars));\n        return {\n            _internal_barColor: (_a = currentBar._internal_color) !== null && _a !== void 0 ? _a : histogramStyle.color,\n        };\n    },\n};\nclass SeriesBarColorer {\n    constructor(series) {\n        this._private__findBar = (barIndex, precomputedBars) => {\n            if (precomputedBars !== undefined) {\n                return precomputedBars._internal_value;\n            }\n            return this._private__series._internal_bars()._internal_valueAt(barIndex);\n        };\n        this._private__series = series;\n        this._private__styleGetter = barStyleFnMap[series._internal_seriesType()];\n    }\n    _internal_barStyle(barIndex, precomputedBars) {\n        // precomputedBars: {value: [Array BarValues], previousValue: [Array BarValues] | undefined}\n        // Used to avoid binary search if bars are already known\n        return this._private__styleGetter(this._private__findBar, this._private__series._internal_options(), barIndex, precomputedBars);\n    }\n}\n\n/**\n * Search direction if no data found at provided index\n */\nvar MismatchDirection;\n(function (MismatchDirection) {\n    /**\n     * Search the nearest left item\n     */\n    MismatchDirection[MismatchDirection[\"NearestLeft\"] = -1] = \"NearestLeft\";\n    /**\n     * Do not search\n     */\n    MismatchDirection[MismatchDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Search the nearest right item\n     */\n    MismatchDirection[MismatchDirection[\"NearestRight\"] = 1] = \"NearestRight\";\n})(MismatchDirection || (MismatchDirection = {}));\n// TODO: think about changing it dynamically\nconst CHUNK_SIZE = 30;\n/**\n * PlotList is an array of plot rows\n * each plot row consists of key (index in timescale) and plot value map\n */\nclass PlotList {\n    constructor() {\n        this._private__items = [];\n        this._private__minMaxCache = new Map();\n        this._private__rowSearchCache = new Map();\n    }\n    // @returns Last row\n    _internal_last() {\n        return this._internal_size() > 0 ? this._private__items[this._private__items.length - 1] : null;\n    }\n    _internal_firstIndex() {\n        return this._internal_size() > 0 ? this._private__indexAt(0) : null;\n    }\n    _internal_lastIndex() {\n        return this._internal_size() > 0 ? this._private__indexAt((this._private__items.length - 1)) : null;\n    }\n    _internal_size() {\n        return this._private__items.length;\n    }\n    _internal_isEmpty() {\n        return this._internal_size() === 0;\n    }\n    _internal_contains(index) {\n        return this._private__search(index, 0 /* MismatchDirection.None */) !== null;\n    }\n    _internal_valueAt(index) {\n        return this._internal_search(index);\n    }\n    _internal_search(index, searchMode = 0 /* MismatchDirection.None */) {\n        const pos = this._private__search(index, searchMode);\n        if (pos === null) {\n            return null;\n        }\n        return Object.assign(Object.assign({}, this._private__valueAt(pos)), { _internal_index: this._private__indexAt(pos) });\n    }\n    _internal_rows() {\n        return this._private__items;\n    }\n    _internal_minMaxOnRangeCached(start, end, plots) {\n        // this code works for single series only\n        // could fail after whitespaces implementation\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        let result = null;\n        for (const plot of plots) {\n            const plotMinMax = this._private__minMaxOnRangeCachedImpl(start, end, plot);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        return result;\n    }\n    _internal_setData(plotRows) {\n        this._private__rowSearchCache.clear();\n        this._private__minMaxCache.clear();\n        this._private__items = plotRows;\n    }\n    _private__indexAt(offset) {\n        return this._private__items[offset]._internal_index;\n    }\n    _private__valueAt(offset) {\n        return this._private__items[offset];\n    }\n    _private__search(index, searchMode) {\n        const exactPos = this._private__bsearch(index);\n        if (exactPos === null && searchMode !== 0 /* MismatchDirection.None */) {\n            switch (searchMode) {\n                case -1 /* MismatchDirection.NearestLeft */:\n                    return this._private__searchNearestLeft(index);\n                case 1 /* MismatchDirection.NearestRight */:\n                    return this._private__searchNearestRight(index);\n                default:\n                    throw new TypeError('Unknown search mode');\n            }\n        }\n        return exactPos;\n    }\n    _private__searchNearestLeft(index) {\n        let nearestLeftPos = this._private__lowerbound(index);\n        if (nearestLeftPos > 0) {\n            nearestLeftPos = nearestLeftPos - 1;\n        }\n        return (nearestLeftPos !== this._private__items.length && this._private__indexAt(nearestLeftPos) < index) ? nearestLeftPos : null;\n    }\n    _private__searchNearestRight(index) {\n        const nearestRightPos = this._private__upperbound(index);\n        return (nearestRightPos !== this._private__items.length && index < this._private__indexAt(nearestRightPos)) ? nearestRightPos : null;\n    }\n    _private__bsearch(index) {\n        const start = this._private__lowerbound(index);\n        if (start !== this._private__items.length && !(index < this._private__items[start]._internal_index)) {\n            return start;\n        }\n        return null;\n    }\n    _private__lowerbound(index) {\n        return lowerbound(this._private__items, index, (a, b) => a._internal_index < b);\n    }\n    _private__upperbound(index) {\n        return upperbound(this._private__items, index, (a, b) => b._internal_index > a);\n    }\n    _private__plotMinMax(startIndex, endIndexExclusive, plotIndex) {\n        let result = null;\n        for (let i = startIndex; i < endIndexExclusive; i++) {\n            const values = this._private__items[i]._internal_value;\n            const v = values[plotIndex];\n            if (Number.isNaN(v)) {\n                continue;\n            }\n            if (result === null) {\n                result = { _internal_min: v, _internal_max: v };\n            }\n            else {\n                if (v < result._internal_min) {\n                    result._internal_min = v;\n                }\n                if (v > result._internal_max) {\n                    result._internal_max = v;\n                }\n            }\n        }\n        return result;\n    }\n    _private__minMaxOnRangeCachedImpl(start, end, plotIndex) {\n        // this code works for single series only\n        // could fail after whitespaces implementation\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        let result = null;\n        // assume that bar indexes only increase\n        const firstIndex = ensureNotNull(this._internal_firstIndex());\n        const lastIndex = ensureNotNull(this._internal_lastIndex());\n        const s = Math.max(start, firstIndex);\n        const e = Math.min(end, lastIndex);\n        const cachedLow = Math.ceil(s / CHUNK_SIZE) * CHUNK_SIZE;\n        const cachedHigh = Math.max(cachedLow, Math.floor(e / CHUNK_SIZE) * CHUNK_SIZE);\n        {\n            const startIndex = this._private__lowerbound(s);\n            const endIndex = this._private__upperbound(Math.min(e, cachedLow, end)); // non-inclusive end\n            const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        let minMaxCache = this._private__minMaxCache.get(plotIndex);\n        if (minMaxCache === undefined) {\n            minMaxCache = new Map();\n            this._private__minMaxCache.set(plotIndex, minMaxCache);\n        }\n        // now go cached\n        for (let c = Math.max(cachedLow + 1, s); c < cachedHigh; c += CHUNK_SIZE) {\n            const chunkIndex = Math.floor(c / CHUNK_SIZE);\n            let chunkMinMax = minMaxCache.get(chunkIndex);\n            if (chunkMinMax === undefined) {\n                const chunkStart = this._private__lowerbound(chunkIndex * CHUNK_SIZE);\n                const chunkEnd = this._private__upperbound((chunkIndex + 1) * CHUNK_SIZE - 1);\n                chunkMinMax = this._private__plotMinMax(chunkStart, chunkEnd, plotIndex);\n                minMaxCache.set(chunkIndex, chunkMinMax);\n            }\n            result = mergeMinMax(result, chunkMinMax);\n        }\n        // tail\n        {\n            const startIndex = this._private__lowerbound(cachedHigh);\n            const endIndex = this._private__upperbound(e); // non-inclusive end\n            const plotMinMax = this._private__plotMinMax(startIndex, endIndex, plotIndex);\n            result = mergeMinMax(result, plotMinMax);\n        }\n        return result;\n    }\n}\nfunction mergeMinMax(first, second) {\n    if (first === null) {\n        return second;\n    }\n    else {\n        if (second === null) {\n            return first;\n        }\n        else {\n            // merge MinMax values\n            const min = Math.min(first._internal_min, second._internal_min);\n            const max = Math.max(first._internal_max, second._internal_max);\n            return { _internal_min: min, _internal_max: max };\n        }\n    }\n}\n\nfunction createSeriesPlotList() {\n    return new PlotList();\n}\n\nclass Series extends PriceDataSource {\n    constructor(model, options, seriesType) {\n        super(model);\n        this._private__data = createSeriesPlotList();\n        this._private__priceLineView = new SeriesPriceLinePaneView(this);\n        this._private__customPriceLines = [];\n        this._private__baseHorizontalLineView = new SeriesHorizontalBaseLinePaneView(this);\n        this._private__lastPriceAnimationPaneView = null;\n        this._private__barColorerCache = null;\n        this._private__markers = [];\n        this._private__indexedMarkers = [];\n        this._private__animationTimeoutId = null;\n        this._private__options = options;\n        this._private__seriesType = seriesType;\n        const priceAxisView = new SeriesPriceAxisView(this);\n        this._private__priceAxisViews = [priceAxisView];\n        this._private__panePriceAxisView = new PanePriceAxisView(priceAxisView, this, model);\n        if (seriesType === 'Area' || seriesType === 'Line' || seriesType === 'Baseline') {\n            this._private__lastPriceAnimationPaneView = new SeriesLastPriceAnimationPaneView(this);\n        }\n        this._private__recreateFormatter();\n        this._private__recreatePaneViews();\n    }\n    _internal_destroy() {\n        if (this._private__animationTimeoutId !== null) {\n            clearTimeout(this._private__animationTimeoutId);\n        }\n    }\n    _internal_priceLineColor(lastBarColor) {\n        return this._private__options.priceLineColor || lastBarColor;\n    }\n    _internal_lastValueData(globalLast) {\n        const noDataRes = { _internal_noData: true };\n        const priceScale = this._internal_priceScale();\n        if (this._internal_model()._internal_timeScale()._internal_isEmpty() || priceScale._internal_isEmpty() || this._private__data._internal_isEmpty()) {\n            return noDataRes;\n        }\n        const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n        const firstValue = this._internal_firstValue();\n        if (visibleBars === null || firstValue === null) {\n            return noDataRes;\n        }\n        // find range of bars inside range\n        // TODO: make it more optimal\n        let bar;\n        let lastIndex;\n        if (globalLast) {\n            const lastBar = this._private__data._internal_last();\n            if (lastBar === null) {\n                return noDataRes;\n            }\n            bar = lastBar;\n            lastIndex = lastBar._internal_index;\n        }\n        else {\n            const endBar = this._private__data._internal_search(visibleBars._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n            if (endBar === null) {\n                return noDataRes;\n            }\n            bar = this._private__data._internal_valueAt(endBar._internal_index);\n            if (bar === null) {\n                return noDataRes;\n            }\n            lastIndex = endBar._internal_index;\n        }\n        const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n        const barColorer = this._internal_barColorer();\n        const style = barColorer._internal_barStyle(lastIndex, { _internal_value: bar });\n        const coordinate = priceScale._internal_priceToCoordinate(price, firstValue._internal_value);\n        return {\n            _internal_noData: false,\n            _internal_price: price,\n            _internal_text: priceScale._internal_formatPrice(price, firstValue._internal_value),\n            _internal_formattedPriceAbsolute: priceScale._internal_formatPriceAbsolute(price),\n            _internal_formattedPricePercentage: priceScale._internal_formatPricePercentage(price, firstValue._internal_value),\n            _internal_color: style._internal_barColor,\n            _internal_coordinate: coordinate,\n            _internal_index: lastIndex,\n        };\n    }\n    _internal_barColorer() {\n        if (this._private__barColorerCache !== null) {\n            return this._private__barColorerCache;\n        }\n        this._private__barColorerCache = new SeriesBarColorer(this);\n        return this._private__barColorerCache;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        const targetPriceScaleId = options.priceScaleId;\n        if (targetPriceScaleId !== undefined && targetPriceScaleId !== this._private__options.priceScaleId) {\n            // series cannot do it itself, ask model\n            this._internal_model()._internal_moveSeriesToScale(this, targetPriceScaleId);\n        }\n        merge(this._private__options, options);\n        if (options.priceFormat !== undefined) {\n            this._private__recreateFormatter();\n            // updated formatter might affect rendering  and as a consequence of this the width of price axis might be changed\n            // thus we need to force the chart to do a full update to apply changes correctly\n            // full update is quite heavy operation in terms of performance\n            // but updating formatter looks like quite rare so forcing a full update here shouldn't affect the performance a lot\n            this._internal_model()._internal_fullUpdate();\n        }\n        this._internal_model()._internal_updateSource(this);\n        // a series might affect crosshair by some options (like crosshair markers)\n        // that's why we need to update crosshair as well\n        this._internal_model()._internal_updateCrosshair();\n        this._private__paneView._internal_update('options');\n    }\n    _internal_setData(data, updateInfo) {\n        this._private__data._internal_setData(data);\n        this._private__recalculateMarkers();\n        this._private__paneView._internal_update('data');\n        this._private__markersPaneView._internal_update('data');\n        if (this._private__lastPriceAnimationPaneView !== null) {\n            if (updateInfo && updateInfo._internal_lastBarUpdatedOrNewBarsAddedToTheRight) {\n                this._private__lastPriceAnimationPaneView._internal_onNewRealtimeDataReceived();\n            }\n            else if (data.length === 0) {\n                this._private__lastPriceAnimationPaneView._internal_onDataCleared();\n            }\n        }\n        const sourcePane = this._internal_model()._internal_paneForSource(this);\n        this._internal_model()._internal_recalculatePane(sourcePane);\n        this._internal_model()._internal_updateSource(this);\n        this._internal_model()._internal_updateCrosshair();\n        this._internal_model()._internal_lightUpdate();\n    }\n    _internal_setMarkers(data) {\n        this._private__markers = data;\n        this._private__recalculateMarkers();\n        const sourcePane = this._internal_model()._internal_paneForSource(this);\n        this._private__markersPaneView._internal_update('data');\n        this._internal_model()._internal_recalculatePane(sourcePane);\n        this._internal_model()._internal_updateSource(this);\n        this._internal_model()._internal_updateCrosshair();\n        this._internal_model()._internal_lightUpdate();\n    }\n    _internal_markers() {\n        return this._private__markers;\n    }\n    _internal_indexedMarkers() {\n        return this._private__indexedMarkers;\n    }\n    _internal_createPriceLine(options) {\n        const result = new CustomPriceLine(this, options);\n        this._private__customPriceLines.push(result);\n        this._internal_model()._internal_updateSource(this);\n        return result;\n    }\n    _internal_removePriceLine(line) {\n        const index = this._private__customPriceLines.indexOf(line);\n        if (index !== -1) {\n            this._private__customPriceLines.splice(index, 1);\n        }\n        this._internal_model()._internal_updateSource(this);\n    }\n    _internal_seriesType() {\n        return this._private__seriesType;\n    }\n    _internal_firstValue() {\n        const bar = this._internal_firstBar();\n        if (bar === null) {\n            return null;\n        }\n        return {\n            _internal_value: bar._internal_value[3 /* PlotRowValueIndex.Close */],\n            _internal_timePoint: bar._internal_time,\n        };\n    }\n    _internal_firstBar() {\n        const visibleBars = this._internal_model()._internal_timeScale()._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return null;\n        }\n        const startTimePoint = visibleBars._internal_left();\n        return this._private__data._internal_search(startTimePoint, 1 /* MismatchDirection.NearestRight */);\n    }\n    _internal_bars() {\n        return this._private__data;\n    }\n    _internal_dataAt(time) {\n        const prices = this._private__data._internal_valueAt(time);\n        if (prices === null) {\n            return null;\n        }\n        if (this._private__seriesType === 'Bar' || this._private__seriesType === 'Candlestick') {\n            return {\n                _internal_open: prices._internal_value[0 /* PlotRowValueIndex.Open */],\n                _internal_high: prices._internal_value[1 /* PlotRowValueIndex.High */],\n                _internal_low: prices._internal_value[2 /* PlotRowValueIndex.Low */],\n                _internal_close: prices._internal_value[3 /* PlotRowValueIndex.Close */],\n            };\n        }\n        else {\n            return prices._internal_value[3 /* PlotRowValueIndex.Close */];\n        }\n    }\n    _internal_topPaneViews(pane) {\n        const animationPaneView = this._private__lastPriceAnimationPaneView;\n        if (animationPaneView === null || !animationPaneView._internal_visible()) {\n            return [];\n        }\n        if (this._private__animationTimeoutId === null && animationPaneView._internal_animationActive()) {\n            this._private__animationTimeoutId = setTimeout(() => {\n                this._private__animationTimeoutId = null;\n                this._internal_model()._internal_cursorUpdate();\n            }, 0);\n        }\n        animationPaneView._internal_invalidateStage();\n        return [animationPaneView];\n    }\n    _internal_paneViews() {\n        const res = [];\n        if (!this._private__isOverlay()) {\n            res.push(this._private__baseHorizontalLineView);\n        }\n        res.push(this._private__paneView, this._private__priceLineView, this._private__markersPaneView);\n        const priceLineViews = this._private__customPriceLines.map((line) => line._internal_paneView());\n        res.push(...priceLineViews);\n        return res;\n    }\n    _internal_labelPaneViews(pane) {\n        return [\n            this._private__panePriceAxisView,\n            ...this._private__customPriceLines.map((line) => line._internal_labelPaneView()),\n        ];\n    }\n    _internal_priceAxisViews(pane, priceScale) {\n        if (priceScale !== this._internal__priceScale && !this._private__isOverlay()) {\n            return [];\n        }\n        const result = [...this._private__priceAxisViews];\n        for (const customPriceLine of this._private__customPriceLines) {\n            result.push(customPriceLine._internal_priceAxisView());\n        }\n        return result;\n    }\n    _internal_autoscaleInfo(startTimePoint, endTimePoint) {\n        if (this._private__options.autoscaleInfoProvider !== undefined) {\n            const autoscaleInfo = this._private__options.autoscaleInfoProvider(() => {\n                const res = this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n                return (res === null) ? null : res._internal_toRaw();\n            });\n            return AutoscaleInfoImpl._internal_fromRaw(autoscaleInfo);\n        }\n        return this._private__autoscaleInfoImpl(startTimePoint, endTimePoint);\n    }\n    _internal_minMove() {\n        return this._private__options.priceFormat.minMove;\n    }\n    _internal_formatter() {\n        return this._private__formatter;\n    }\n    _internal_updateAllViews() {\n        var _a;\n        this._private__paneView._internal_update();\n        this._private__markersPaneView._internal_update();\n        for (const priceAxisView of this._private__priceAxisViews) {\n            priceAxisView._internal_update();\n        }\n        for (const customPriceLine of this._private__customPriceLines) {\n            customPriceLine._internal_update();\n        }\n        this._private__priceLineView._internal_update();\n        this._private__baseHorizontalLineView._internal_update();\n        (_a = this._private__lastPriceAnimationPaneView) === null || _a === void 0 ? void 0 : _a._internal_update();\n    }\n    _internal_priceScale() {\n        return ensureNotNull(super._internal_priceScale());\n    }\n    _internal_markerDataAtIndex(index) {\n        const getValue = (this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline') &&\n            this._private__options.crosshairMarkerVisible;\n        if (!getValue) {\n            return null;\n        }\n        const bar = this._private__data._internal_valueAt(index);\n        if (bar === null) {\n            return null;\n        }\n        const price = bar._internal_value[3 /* PlotRowValueIndex.Close */];\n        const radius = this._private__markerRadius();\n        const borderColor = this._private__markerBorderColor();\n        const borderWidth = this._private__markerBorderWidth();\n        const backgroundColor = this._private__markerBackgroundColor(index);\n        return { _internal_price: price, _internal_radius: radius, _internal_borderColor: borderColor, _internal_borderWidth: borderWidth, _internal_backgroundColor: backgroundColor };\n    }\n    _internal_title() {\n        return this._private__options.title;\n    }\n    _internal_visible() {\n        return this._private__options.visible;\n    }\n    _private__isOverlay() {\n        const priceScale = this._internal_priceScale();\n        return !isDefaultPriceScale(priceScale._internal_id());\n    }\n    _private__autoscaleInfoImpl(startTimePoint, endTimePoint) {\n        if (!isInteger(startTimePoint) || !isInteger(endTimePoint) || this._private__data._internal_isEmpty()) {\n            return null;\n        }\n        // TODO: refactor this\n        // series data is strongly hardcoded to keep bars\n        const plots = this._private__seriesType === 'Line' || this._private__seriesType === 'Area' || this._private__seriesType === 'Baseline' || this._private__seriesType === 'Histogram'\n            ? [3 /* PlotRowValueIndex.Close */]\n            : [2 /* PlotRowValueIndex.Low */, 1 /* PlotRowValueIndex.High */];\n        const barsMinMax = this._private__data._internal_minMaxOnRangeCached(startTimePoint, endTimePoint, plots);\n        let range = barsMinMax !== null ? new PriceRangeImpl(barsMinMax._internal_min, barsMinMax._internal_max) : null;\n        if (this._internal_seriesType() === 'Histogram') {\n            const base = this._private__options.base;\n            const rangeWithBase = new PriceRangeImpl(base, base);\n            range = range !== null ? range._internal_merge(rangeWithBase) : rangeWithBase;\n        }\n        return new AutoscaleInfoImpl(range, this._private__markersPaneView._internal_autoScaleMargins());\n    }\n    _private__markerRadius() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline':\n                return this._private__options.crosshairMarkerRadius;\n        }\n        return 0;\n    }\n    _private__markerBorderColor() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline': {\n                const crosshairMarkerBorderColor = this._private__options.crosshairMarkerBorderColor;\n                if (crosshairMarkerBorderColor.length !== 0) {\n                    return crosshairMarkerBorderColor;\n                }\n            }\n        }\n        return null;\n    }\n    _private__markerBorderWidth() {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline':\n                return this._private__options.crosshairMarkerBorderWidth;\n        }\n        return 0;\n    }\n    _private__markerBackgroundColor(index) {\n        switch (this._private__seriesType) {\n            case 'Line':\n            case 'Area':\n            case 'Baseline': {\n                const crosshairMarkerBackgroundColor = this._private__options.crosshairMarkerBackgroundColor;\n                if (crosshairMarkerBackgroundColor.length !== 0) {\n                    return crosshairMarkerBackgroundColor;\n                }\n            }\n        }\n        return this._internal_barColorer()._internal_barStyle(index)._internal_barColor;\n    }\n    _private__recreateFormatter() {\n        switch (this._private__options.priceFormat.type) {\n            case 'custom': {\n                this._private__formatter = { format: this._private__options.priceFormat.formatter };\n                break;\n            }\n            case 'volume': {\n                this._private__formatter = new VolumeFormatter(this._private__options.priceFormat.precision);\n                break;\n            }\n            case 'percent': {\n                this._private__formatter = new PercentageFormatter(this._private__options.priceFormat.precision);\n                break;\n            }\n            default: {\n                const priceScale = Math.pow(10, this._private__options.priceFormat.precision);\n                this._private__formatter = new PriceFormatter(priceScale, this._private__options.priceFormat.minMove * priceScale);\n            }\n        }\n        if (this._internal__priceScale !== null) {\n            this._internal__priceScale._internal_updateFormatter();\n        }\n    }\n    _private__recalculateMarkers() {\n        const timeScale = this._internal_model()._internal_timeScale();\n        if (!timeScale._internal_hasPoints() || this._private__data._internal_isEmpty()) {\n            this._private__indexedMarkers = [];\n            return;\n        }\n        const firstDataIndex = ensureNotNull(this._private__data._internal_firstIndex());\n        this._private__indexedMarkers = this._private__markers.map((marker, index) => {\n            // the first find index on the time scale (across all series)\n            const timePointIndex = ensureNotNull(timeScale._internal_timeToIndex(marker.time, true));\n            // and then search that index inside the series data\n            const searchMode = timePointIndex < firstDataIndex ? 1 /* MismatchDirection.NearestRight */ : -1 /* MismatchDirection.NearestLeft */;\n            const seriesDataIndex = ensureNotNull(this._private__data._internal_search(timePointIndex, searchMode))._internal_index;\n            return {\n                time: seriesDataIndex,\n                position: marker.position,\n                shape: marker.shape,\n                color: marker.color,\n                id: marker.id,\n                internalId: index,\n                text: marker.text,\n                size: marker.size,\n            };\n        });\n    }\n    _private__recreatePaneViews() {\n        this._private__markersPaneView = new SeriesMarkersPaneView(this, this._internal_model());\n        switch (this._private__seriesType) {\n            case 'Bar': {\n                this._private__paneView = new SeriesBarsPaneView(this, this._internal_model());\n                break;\n            }\n            case 'Candlestick': {\n                this._private__paneView = new SeriesCandlesticksPaneView(this, this._internal_model());\n                break;\n            }\n            case 'Line': {\n                this._private__paneView = new SeriesLinePaneView(this, this._internal_model());\n                break;\n            }\n            case 'Area': {\n                this._private__paneView = new SeriesAreaPaneView(this, this._internal_model());\n                break;\n            }\n            case 'Baseline': {\n                this._private__paneView = new SeriesBaselinePaneView(this, this._internal_model());\n                break;\n            }\n            case 'Histogram': {\n                this._private__paneView = new SeriesHistogramPaneView(this, this._internal_model());\n                break;\n            }\n            default: throw Error('Unknown chart style assigned: ' + this._private__seriesType);\n        }\n    }\n}\n\nclass Magnet {\n    constructor(options) {\n        this._private__options = options;\n    }\n    _internal_align(price, index, pane) {\n        let res = price;\n        if (this._private__options.mode === 0 /* CrosshairMode.Normal */) {\n            return res;\n        }\n        const defaultPriceScale = pane._internal_defaultPriceScale();\n        const firstValue = defaultPriceScale._internal_firstValue();\n        if (firstValue === null) {\n            return res;\n        }\n        const y = defaultPriceScale._internal_priceToCoordinate(price, firstValue);\n        // get all serieses from the pane\n        const serieses = pane._internal_dataSources().filter(((ds) => (ds instanceof Series)));\n        const candidates = serieses.reduce((acc, series) => {\n            if (pane._internal_isOverlay(series) || !series._internal_visible()) {\n                return acc;\n            }\n            const ps = series._internal_priceScale();\n            const bars = series._internal_bars();\n            if (ps._internal_isEmpty() || !bars._internal_contains(index)) {\n                return acc;\n            }\n            const bar = bars._internal_valueAt(index);\n            if (bar === null) {\n                return acc;\n            }\n            // convert bar to pixels\n            const firstPrice = ensure(series._internal_firstValue());\n            return acc.concat([ps._internal_priceToCoordinate(bar._internal_value[3 /* PlotRowValueIndex.Close */], firstPrice._internal_value)]);\n        }, []);\n        if (candidates.length === 0) {\n            return res;\n        }\n        candidates.sort((y1, y2) => Math.abs(y1 - y) - Math.abs(y2 - y));\n        const nearest = candidates[0];\n        res = defaultPriceScale._internal_coordinateToPrice(nearest, firstValue);\n        return res;\n    }\n}\n\nclass GridRenderer extends BitmapCoordinatesPaneRenderer {\n    constructor() {\n        super(...arguments);\n        this._private__data = null;\n    }\n    _internal_setData(data) {\n        this._private__data = data;\n    }\n    _internal__drawImpl({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (this._private__data === null) {\n            return;\n        }\n        const lineWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n        ctx.lineWidth = lineWidth;\n        strokeInPixel(ctx, () => {\n            const data = ensureNotNull(this._private__data);\n            if (data._internal_vertLinesVisible) {\n                ctx.strokeStyle = data._internal_vertLinesColor;\n                setLineStyle(ctx, data._internal_vertLineStyle);\n                ctx.beginPath();\n                for (const timeMark of data._internal_timeMarks) {\n                    const x = Math.round(timeMark._internal_coord * horizontalPixelRatio);\n                    ctx.moveTo(x, -lineWidth);\n                    ctx.lineTo(x, bitmapSize.height + lineWidth);\n                }\n                ctx.stroke();\n            }\n            if (data._internal_horzLinesVisible) {\n                ctx.strokeStyle = data._internal_horzLinesColor;\n                setLineStyle(ctx, data._internal_horzLineStyle);\n                ctx.beginPath();\n                for (const priceMark of data._internal_priceMarks) {\n                    const y = Math.round(priceMark._internal_coord * verticalPixelRatio);\n                    ctx.moveTo(-lineWidth, y);\n                    ctx.lineTo(bitmapSize.width + lineWidth, y);\n                }\n                ctx.stroke();\n            }\n        });\n    }\n}\n\nclass GridPaneView {\n    constructor(pane) {\n        this._private__renderer = new GridRenderer();\n        this._private__invalidated = true;\n        this._private__pane = pane;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            const gridOptions = this._private__pane._internal_model()._internal_options().grid;\n            const data = {\n                _internal_horzLinesVisible: gridOptions.horzLines.visible,\n                _internal_vertLinesVisible: gridOptions.vertLines.visible,\n                _internal_horzLinesColor: gridOptions.horzLines.color,\n                _internal_vertLinesColor: gridOptions.vertLines.color,\n                _internal_horzLineStyle: gridOptions.horzLines.style,\n                _internal_vertLineStyle: gridOptions.vertLines.style,\n                _internal_priceMarks: this._private__pane._internal_defaultPriceScale()._internal_marks(),\n                _internal_timeMarks: this._private__pane._internal_model()._internal_timeScale()._internal_marks() || [],\n            };\n            this._private__renderer._internal_setData(data);\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n}\n\nclass Grid {\n    constructor(pane) {\n        this._private__paneView = new GridPaneView(pane);\n    }\n    _internal_paneView() {\n        return this._private__paneView;\n    }\n}\n\nconst defLogFormula = {\n    _internal_logicalOffset: 4,\n    _internal_coordOffset: 0.0001,\n};\nfunction fromPercent(value, baseValue) {\n    if (baseValue < 0) {\n        value = -value;\n    }\n    return (value / 100) * baseValue + baseValue;\n}\nfunction toPercent(value, baseValue) {\n    const result = 100 * (value - baseValue) / baseValue;\n    return (baseValue < 0 ? -result : result);\n}\nfunction toPercentRange(priceRange, baseValue) {\n    const minPercent = toPercent(priceRange._internal_minValue(), baseValue);\n    const maxPercent = toPercent(priceRange._internal_maxValue(), baseValue);\n    return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction fromIndexedTo100(value, baseValue) {\n    value -= 100;\n    if (baseValue < 0) {\n        value = -value;\n    }\n    return (value / 100) * baseValue + baseValue;\n}\nfunction toIndexedTo100(value, baseValue) {\n    const result = 100 * (value - baseValue) / baseValue + 100;\n    return (baseValue < 0 ? -result : result);\n}\nfunction toIndexedTo100Range(priceRange, baseValue) {\n    const minPercent = toIndexedTo100(priceRange._internal_minValue(), baseValue);\n    const maxPercent = toIndexedTo100(priceRange._internal_maxValue(), baseValue);\n    return new PriceRangeImpl(minPercent, maxPercent);\n}\nfunction toLog(price, logFormula) {\n    const m = Math.abs(price);\n    if (m < 1e-15) {\n        return 0;\n    }\n    const res = log10(m + logFormula._internal_coordOffset) + logFormula._internal_logicalOffset;\n    return ((price < 0) ? -res : res);\n}\nfunction fromLog(logical, logFormula) {\n    const m = Math.abs(logical);\n    if (m < 1e-15) {\n        return 0;\n    }\n    const res = Math.pow(10, m - logFormula._internal_logicalOffset) - logFormula._internal_coordOffset;\n    return (logical < 0) ? -res : res;\n}\nfunction convertPriceRangeToLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return null;\n    }\n    const min = toLog(priceRange._internal_minValue(), logFormula);\n    const max = toLog(priceRange._internal_maxValue(), logFormula);\n    return new PriceRangeImpl(min, max);\n}\nfunction canConvertPriceRangeFromLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return false;\n    }\n    const min = fromLog(priceRange._internal_minValue(), logFormula);\n    const max = fromLog(priceRange._internal_maxValue(), logFormula);\n    return isFinite(min) && isFinite(max);\n}\nfunction convertPriceRangeFromLog(priceRange, logFormula) {\n    if (priceRange === null) {\n        return null;\n    }\n    const min = fromLog(priceRange._internal_minValue(), logFormula);\n    const max = fromLog(priceRange._internal_maxValue(), logFormula);\n    return new PriceRangeImpl(min, max);\n}\nfunction logFormulaForPriceRange(range) {\n    if (range === null) {\n        return defLogFormula;\n    }\n    const diff = Math.abs(range._internal_maxValue() - range._internal_minValue());\n    if (diff >= 1 || diff < 1e-15) {\n        return defLogFormula;\n    }\n    const digits = Math.ceil(Math.abs(Math.log10(diff)));\n    const logicalOffset = defLogFormula._internal_logicalOffset + digits;\n    const coordOffset = 1 / Math.pow(10, logicalOffset);\n    return {\n        _internal_logicalOffset: logicalOffset,\n        _internal_coordOffset: coordOffset,\n    };\n}\nfunction logFormulasAreSame(f1, f2) {\n    return f1._internal_logicalOffset === f2._internal_logicalOffset && f1._internal_coordOffset === f2._internal_coordOffset;\n}\n\nclass PriceTickSpanCalculator {\n    constructor(base, integralDividers) {\n        this._private__base = base;\n        this._private__integralDividers = integralDividers;\n        if (isBaseDecimal(this._private__base)) {\n            this._private__fractionalDividers = [2, 2.5, 2];\n        }\n        else {\n            this._private__fractionalDividers = [];\n            for (let baseRest = this._private__base; baseRest !== 1;) {\n                if ((baseRest % 2) === 0) {\n                    this._private__fractionalDividers.push(2);\n                    baseRest /= 2;\n                }\n                else if ((baseRest % 5) === 0) {\n                    this._private__fractionalDividers.push(2, 2.5);\n                    baseRest /= 5;\n                }\n                else {\n                    throw new Error('unexpected base');\n                }\n                if (this._private__fractionalDividers.length > 100) {\n                    throw new Error('something wrong with base');\n                }\n            }\n        }\n    }\n    _internal_tickSpan(high, low, maxTickSpan) {\n        const minMovement = (this._private__base === 0) ? (0) : (1 / this._private__base);\n        let resultTickSpan = Math.pow(10, Math.max(0, Math.ceil(log10(high - low))));\n        let index = 0;\n        let c = this._private__integralDividers[0];\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            // the second part is actual for small with very small values like 1e-10\n            // greaterOrEqual fails for such values\n            const resultTickSpanLargerMinMovement = greaterOrEqual(resultTickSpan, minMovement, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > (minMovement + 1e-14 /* Constants.TickSpanEpsilon */);\n            const resultTickSpanLargerMaxTickSpan = greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */);\n            const resultTickSpanLarger1 = greaterOrEqual(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */);\n            const haveToContinue = resultTickSpanLargerMinMovement && resultTickSpanLargerMaxTickSpan && resultTickSpanLarger1;\n            if (!haveToContinue) {\n                break;\n            }\n            resultTickSpan /= c;\n            c = this._private__integralDividers[++index % this._private__integralDividers.length];\n        }\n        if (resultTickSpan <= (minMovement + 1e-14 /* Constants.TickSpanEpsilon */)) {\n            resultTickSpan = minMovement;\n        }\n        resultTickSpan = Math.max(1, resultTickSpan);\n        if ((this._private__fractionalDividers.length > 0) && equal(resultTickSpan, 1, 1e-14 /* Constants.TickSpanEpsilon */)) {\n            index = 0;\n            c = this._private__fractionalDividers[0];\n            while (greaterOrEqual(resultTickSpan, maxTickSpan * c, 1e-14 /* Constants.TickSpanEpsilon */) && resultTickSpan > (minMovement + 1e-14 /* Constants.TickSpanEpsilon */)) {\n                resultTickSpan /= c;\n                c = this._private__fractionalDividers[++index % this._private__fractionalDividers.length];\n            }\n        }\n        return resultTickSpan;\n    }\n}\n\nconst TICK_DENSITY = 2.5;\nclass PriceTickMarkBuilder {\n    constructor(priceScale, base, coordinateToLogicalFunc, logicalToCoordinateFunc) {\n        this._private__marks = [];\n        this._private__priceScale = priceScale;\n        this._private__base = base;\n        this._private__coordinateToLogicalFunc = coordinateToLogicalFunc;\n        this._private__logicalToCoordinateFunc = logicalToCoordinateFunc;\n    }\n    _internal_tickSpan(high, low) {\n        if (high < low) {\n            throw new Error('high < low');\n        }\n        const scaleHeight = this._private__priceScale._internal_height();\n        const markHeight = this._private__tickMarkHeight();\n        const maxTickSpan = (high - low) * markHeight / scaleHeight;\n        const spanCalculator1 = new PriceTickSpanCalculator(this._private__base, [2, 2.5, 2]);\n        const spanCalculator2 = new PriceTickSpanCalculator(this._private__base, [2, 2, 2.5]);\n        const spanCalculator3 = new PriceTickSpanCalculator(this._private__base, [2.5, 2, 2]);\n        const spans = [];\n        spans.push(spanCalculator1._internal_tickSpan(high, low, maxTickSpan), spanCalculator2._internal_tickSpan(high, low, maxTickSpan), spanCalculator3._internal_tickSpan(high, low, maxTickSpan));\n        return min(spans);\n    }\n    _internal_rebuildTickMarks() {\n        const priceScale = this._private__priceScale;\n        const firstValue = priceScale._internal_firstValue();\n        if (firstValue === null) {\n            this._private__marks = [];\n            return;\n        }\n        const scaleHeight = priceScale._internal_height();\n        const bottom = this._private__coordinateToLogicalFunc(scaleHeight - 1, firstValue);\n        const top = this._private__coordinateToLogicalFunc(0, firstValue);\n        const extraTopBottomMargin = this._private__priceScale._internal_options().entireTextOnly ? this._private__fontHeight() / 2 : 0;\n        const minCoord = extraTopBottomMargin;\n        const maxCoord = scaleHeight - 1 - extraTopBottomMargin;\n        const high = Math.max(bottom, top);\n        const low = Math.min(bottom, top);\n        if (high === low) {\n            this._private__marks = [];\n            return;\n        }\n        let span = this._internal_tickSpan(high, low);\n        let mod = high % span;\n        mod += mod < 0 ? span : 0;\n        const sign = (high >= low) ? 1 : -1;\n        let prevCoord = null;\n        let targetIndex = 0;\n        for (let logical = high - mod; logical > low; logical -= span) {\n            const coord = this._private__logicalToCoordinateFunc(logical, firstValue, true);\n            // check if there is place for it\n            // this is required for log scale\n            if (prevCoord !== null && Math.abs(coord - prevCoord) < this._private__tickMarkHeight()) {\n                continue;\n            }\n            // check if a tick mark is partially visible and skip it if entireTextOnly is true\n            if (coord < minCoord || coord > maxCoord) {\n                continue;\n            }\n            if (targetIndex < this._private__marks.length) {\n                this._private__marks[targetIndex]._internal_coord = coord;\n                this._private__marks[targetIndex]._internal_label = priceScale._internal_formatLogical(logical);\n            }\n            else {\n                this._private__marks.push({\n                    _internal_coord: coord,\n                    _internal_label: priceScale._internal_formatLogical(logical),\n                });\n            }\n            targetIndex++;\n            prevCoord = coord;\n            if (priceScale._internal_isLog()) {\n                // recalc span\n                span = this._internal_tickSpan(logical * sign, low);\n            }\n        }\n        this._private__marks.length = targetIndex;\n    }\n    _internal_marks() {\n        return this._private__marks;\n    }\n    _private__fontHeight() {\n        return this._private__priceScale._internal_fontSize();\n    }\n    _private__tickMarkHeight() {\n        return Math.ceil(this._private__fontHeight() * TICK_DENSITY);\n    }\n}\n\nfunction sortSources(sources) {\n    return sources.slice().sort((s1, s2) => {\n        return (ensureNotNull(s1._internal_zorder()) - ensureNotNull(s2._internal_zorder()));\n    });\n}\n\n/**\n * Represents the price scale mode.\n */\nvar PriceScaleMode;\n(function (PriceScaleMode) {\n    /**\n     * Price scale shows prices. Price range changes linearly.\n     */\n    PriceScaleMode[PriceScaleMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Price scale shows prices. Price range changes logarithmically.\n     */\n    PriceScaleMode[PriceScaleMode[\"Logarithmic\"] = 1] = \"Logarithmic\";\n    /**\n     * Price scale shows percentage values according the first visible value of the price scale.\n     * The first visible value is 0% in this mode.\n     */\n    PriceScaleMode[PriceScaleMode[\"Percentage\"] = 2] = \"Percentage\";\n    /**\n     * The same as percentage mode, but the first value is moved to 100.\n     */\n    PriceScaleMode[PriceScaleMode[\"IndexedTo100\"] = 3] = \"IndexedTo100\";\n})(PriceScaleMode || (PriceScaleMode = {}));\nconst percentageFormatter = new PercentageFormatter();\nconst defaultPriceFormatter = new PriceFormatter(100, 1);\nclass PriceScale {\n    constructor(id, options, layoutOptions, localizationOptions) {\n        this._private__height = 0;\n        this._private__internalHeightCache = null;\n        this._private__priceRange = null;\n        this._private__priceRangeSnapshot = null;\n        this._private__invalidatedForRange = { _internal_isValid: false, _internal_visibleBars: null };\n        this._private__marginAbove = 0;\n        this._private__marginBelow = 0;\n        this._private__onMarksChanged = new Delegate();\n        this._private__modeChanged = new Delegate();\n        this._private__dataSources = [];\n        this._private__cachedOrderedSources = null;\n        this._private__marksCache = null;\n        this._private__scaleStartPoint = null;\n        this._private__scrollStartPoint = null;\n        this._private__formatter = defaultPriceFormatter;\n        this._private__logFormula = logFormulaForPriceRange(null);\n        this._private__id = id;\n        this._private__options = options;\n        this._private__layoutOptions = layoutOptions;\n        this._private__localizationOptions = localizationOptions;\n        this._private__markBuilder = new PriceTickMarkBuilder(this, 100, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n    }\n    _internal_id() {\n        return this._private__id;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._internal_updateFormatter();\n        if (options.mode !== undefined) {\n            this._internal_setMode({ _internal_mode: options.mode });\n        }\n        if (options.scaleMargins !== undefined) {\n            const top = ensureDefined(options.scaleMargins.top);\n            const bottom = ensureDefined(options.scaleMargins.bottom);\n            if (top < 0 || top > 1) {\n                throw new Error(`Invalid top margin - expect value between 0 and 1, given=${top}`);\n            }\n            if (bottom < 0 || bottom > 1 || top + bottom > 1) {\n                throw new Error(`Invalid bottom margin - expect value between 0 and 1, given=${bottom}`);\n            }\n            if (top + bottom > 1) {\n                throw new Error(`Invalid margins - sum of margins must be less than 1, given=${top + bottom}`);\n            }\n            this._private__invalidateInternalHeightCache();\n            this._private__marksCache = null;\n        }\n    }\n    _internal_isAutoScale() {\n        return this._private__options.autoScale;\n    }\n    _internal_isLog() {\n        return this._private__options.mode === 1 /* PriceScaleMode.Logarithmic */;\n    }\n    _internal_isPercentage() {\n        return this._private__options.mode === 2 /* PriceScaleMode.Percentage */;\n    }\n    _internal_isIndexedTo100() {\n        return this._private__options.mode === 3 /* PriceScaleMode.IndexedTo100 */;\n    }\n    _internal_mode() {\n        return {\n            _internal_autoScale: this._private__options.autoScale,\n            _internal_isInverted: this._private__options.invertScale,\n            _internal_mode: this._private__options.mode,\n        };\n    }\n    // eslint-disable-next-line complexity\n    _internal_setMode(newMode) {\n        const oldMode = this._internal_mode();\n        let priceRange = null;\n        if (newMode._internal_autoScale !== undefined) {\n            this._private__options.autoScale = newMode._internal_autoScale;\n        }\n        if (newMode._internal_mode !== undefined) {\n            this._private__options.mode = newMode._internal_mode;\n            if (newMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || newMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */) {\n                this._private__options.autoScale = true;\n            }\n            // TODO: Remove after making rebuildTickMarks lazy\n            this._private__invalidatedForRange._internal_isValid = false;\n        }\n        // define which scale converted from\n        if (oldMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n            if (canConvertPriceRangeFromLog(this._private__priceRange, this._private__logFormula)) {\n                priceRange = convertPriceRangeFromLog(this._private__priceRange, this._private__logFormula);\n                if (priceRange !== null) {\n                    this._internal_setPriceRange(priceRange);\n                }\n            }\n            else {\n                this._private__options.autoScale = true;\n            }\n        }\n        // define which scale converted to\n        if (newMode._internal_mode === 1 /* PriceScaleMode.Logarithmic */ && newMode._internal_mode !== oldMode._internal_mode) {\n            priceRange = convertPriceRangeToLog(this._private__priceRange, this._private__logFormula);\n            if (priceRange !== null) {\n                this._internal_setPriceRange(priceRange);\n            }\n        }\n        const modeChanged = oldMode._internal_mode !== this._private__options.mode;\n        if (modeChanged && (oldMode._internal_mode === 2 /* PriceScaleMode.Percentage */ || this._internal_isPercentage())) {\n            this._internal_updateFormatter();\n        }\n        if (modeChanged && (oldMode._internal_mode === 3 /* PriceScaleMode.IndexedTo100 */ || this._internal_isIndexedTo100())) {\n            this._internal_updateFormatter();\n        }\n        if (newMode._internal_isInverted !== undefined && oldMode._internal_isInverted !== newMode._internal_isInverted) {\n            this._private__options.invertScale = newMode._internal_isInverted;\n            this._private__onIsInvertedChanged();\n        }\n        this._private__modeChanged._internal_fire(oldMode, this._internal_mode());\n    }\n    _internal_modeChanged() {\n        return this._private__modeChanged;\n    }\n    _internal_fontSize() {\n        return this._private__layoutOptions.fontSize;\n    }\n    _internal_height() {\n        return this._private__height;\n    }\n    _internal_setHeight(value) {\n        if (this._private__height === value) {\n            return;\n        }\n        this._private__height = value;\n        this._private__invalidateInternalHeightCache();\n        this._private__marksCache = null;\n    }\n    _internal_internalHeight() {\n        if (this._private__internalHeightCache) {\n            return this._private__internalHeightCache;\n        }\n        const res = this._internal_height() - this._private__topMarginPx() - this._private__bottomMarginPx();\n        this._private__internalHeightCache = res;\n        return res;\n    }\n    _internal_priceRange() {\n        this._private__makeSureItIsValid();\n        return this._private__priceRange;\n    }\n    _internal_setPriceRange(newPriceRange, isForceSetValue) {\n        const oldPriceRange = this._private__priceRange;\n        if (!isForceSetValue &&\n            !(oldPriceRange === null && newPriceRange !== null) &&\n            (oldPriceRange === null || oldPriceRange._internal_equals(newPriceRange))) {\n            return;\n        }\n        this._private__marksCache = null;\n        this._private__priceRange = newPriceRange;\n    }\n    _internal_isEmpty() {\n        this._private__makeSureItIsValid();\n        return this._private__height === 0 || !this._private__priceRange || this._private__priceRange._internal_isEmpty();\n    }\n    _internal_invertedCoordinate(coordinate) {\n        return this._internal_isInverted() ? coordinate : this._internal_height() - 1 - coordinate;\n    }\n    _internal_priceToCoordinate(price, baseValue) {\n        if (this._internal_isPercentage()) {\n            price = toPercent(price, baseValue);\n        }\n        else if (this._internal_isIndexedTo100()) {\n            price = toIndexedTo100(price, baseValue);\n        }\n        return this._private__logicalToCoordinate(price, baseValue);\n    }\n    _internal_pointsArrayToCoordinates(points, baseValue, visibleRange) {\n        this._private__makeSureItIsValid();\n        const bh = this._private__bottomMarginPx();\n        const range = ensureNotNull(this._internal_priceRange());\n        const min = range._internal_minValue();\n        const max = range._internal_maxValue();\n        const ih = (this._internal_internalHeight() - 1);\n        const isInverted = this._internal_isInverted();\n        const hmm = ih / (max - min);\n        const fromIndex = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const toIndex = (visibleRange === undefined) ? points.length : visibleRange.to;\n        const transformFn = this._private__getCoordinateTransformer();\n        for (let i = fromIndex; i < toIndex; i++) {\n            const point = points[i];\n            const price = point._internal_price;\n            if (isNaN(price)) {\n                continue;\n            }\n            let logical = price;\n            if (transformFn !== null) {\n                logical = transformFn(point._internal_price, baseValue);\n            }\n            const invCoordinate = bh + hmm * (logical - min);\n            const coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            point._internal_y = coordinate;\n        }\n    }\n    _internal_barPricesToCoordinates(pricesList, baseValue, visibleRange) {\n        this._private__makeSureItIsValid();\n        const bh = this._private__bottomMarginPx();\n        const range = ensureNotNull(this._internal_priceRange());\n        const min = range._internal_minValue();\n        const max = range._internal_maxValue();\n        const ih = (this._internal_internalHeight() - 1);\n        const isInverted = this._internal_isInverted();\n        const hmm = ih / (max - min);\n        const fromIndex = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const toIndex = (visibleRange === undefined) ? pricesList.length : visibleRange.to;\n        const transformFn = this._private__getCoordinateTransformer();\n        for (let i = fromIndex; i < toIndex; i++) {\n            const bar = pricesList[i];\n            let openLogical = bar._internal_open;\n            let highLogical = bar._internal_high;\n            let lowLogical = bar._internal_low;\n            let closeLogical = bar._internal_close;\n            if (transformFn !== null) {\n                openLogical = transformFn(bar._internal_open, baseValue);\n                highLogical = transformFn(bar._internal_high, baseValue);\n                lowLogical = transformFn(bar._internal_low, baseValue);\n                closeLogical = transformFn(bar._internal_close, baseValue);\n            }\n            let invCoordinate = bh + hmm * (openLogical - min);\n            let coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_openY = coordinate;\n            invCoordinate = bh + hmm * (highLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_highY = coordinate;\n            invCoordinate = bh + hmm * (lowLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_lowY = coordinate;\n            invCoordinate = bh + hmm * (closeLogical - min);\n            coordinate = isInverted ? invCoordinate : this._private__height - 1 - invCoordinate;\n            bar._internal_closeY = coordinate;\n        }\n    }\n    _internal_coordinateToPrice(coordinate, baseValue) {\n        const logical = this._private__coordinateToLogical(coordinate, baseValue);\n        return this._internal_logicalToPrice(logical, baseValue);\n    }\n    _internal_logicalToPrice(logical, baseValue) {\n        let value = logical;\n        if (this._internal_isPercentage()) {\n            value = fromPercent(value, baseValue);\n        }\n        else if (this._internal_isIndexedTo100()) {\n            value = fromIndexedTo100(value, baseValue);\n        }\n        return value;\n    }\n    _internal_dataSources() {\n        return this._private__dataSources;\n    }\n    _internal_orderedSources() {\n        if (this._private__cachedOrderedSources) {\n            return this._private__cachedOrderedSources;\n        }\n        let sources = [];\n        for (let i = 0; i < this._private__dataSources.length; i++) {\n            const ds = this._private__dataSources[i];\n            if (ds._internal_zorder() === null) {\n                ds._internal_setZorder(i + 1);\n            }\n            sources.push(ds);\n        }\n        sources = sortSources(sources);\n        this._private__cachedOrderedSources = sources;\n        return this._private__cachedOrderedSources;\n    }\n    _internal_addDataSource(source) {\n        if (this._private__dataSources.indexOf(source) !== -1) {\n            return;\n        }\n        this._private__dataSources.push(source);\n        this._internal_updateFormatter();\n        this._internal_invalidateSourcesCache();\n    }\n    _internal_removeDataSource(source) {\n        const index = this._private__dataSources.indexOf(source);\n        if (index === -1) {\n            throw new Error('source is not attached to scale');\n        }\n        this._private__dataSources.splice(index, 1);\n        if (this._private__dataSources.length === 0) {\n            this._internal_setMode({\n                _internal_autoScale: true,\n            });\n            // if no sources on price scale let's clear price range cache as well as enabling auto scale\n            this._internal_setPriceRange(null);\n        }\n        this._internal_updateFormatter();\n        this._internal_invalidateSourcesCache();\n    }\n    _internal_firstValue() {\n        // TODO: cache the result\n        let result = null;\n        for (const source of this._private__dataSources) {\n            const firstValue = source._internal_firstValue();\n            if (firstValue === null) {\n                continue;\n            }\n            if (result === null || firstValue._internal_timePoint < result._internal_timePoint) {\n                result = firstValue;\n            }\n        }\n        return result === null ? null : result._internal_value;\n    }\n    _internal_isInverted() {\n        return this._private__options.invertScale;\n    }\n    _internal_marks() {\n        const firstValueIsNull = this._internal_firstValue() === null;\n        // do not recalculate marks if firstValueIsNull is true because in this case we'll always get empty result\n        // this could happen in case when a series had some data and then you set empty data to it (in a simplified case)\n        // we could display an empty price scale, but this is not good from UX\n        // so in this case we need to keep an previous marks to display them on the scale\n        // as one of possible examples for this situation could be the following:\n        // let's say you have a study/indicator attached to a price scale and then you decide to stop it, i.e. remove its data because of its visibility\n        // a user will see the previous marks on the scale until you turn on your study back or remove it from the chart completely\n        if (this._private__marksCache !== null && (firstValueIsNull || this._private__marksCache._internal_firstValueIsNull === firstValueIsNull)) {\n            return this._private__marksCache._internal_marks;\n        }\n        this._private__markBuilder._internal_rebuildTickMarks();\n        const marks = this._private__markBuilder._internal_marks();\n        this._private__marksCache = { _internal_marks: marks, _internal_firstValueIsNull: firstValueIsNull };\n        this._private__onMarksChanged._internal_fire();\n        return marks;\n    }\n    _internal_onMarksChanged() {\n        return this._private__onMarksChanged;\n    }\n    _internal_startScale(x) {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        if (this._private__scaleStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        // invert x\n        this._private__scaleStartPoint = this._private__height - x;\n        this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n    }\n    _internal_scaleTo(x) {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        if (this._private__scaleStartPoint === null) {\n            return;\n        }\n        this._internal_setMode({\n            _internal_autoScale: false,\n        });\n        // invert x\n        x = this._private__height - x;\n        if (x < 0) {\n            x = 0;\n        }\n        let scaleCoeff = (this._private__scaleStartPoint + (this._private__height - 1) * 0.2) / (x + (this._private__height - 1) * 0.2);\n        const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n        scaleCoeff = Math.max(scaleCoeff, 0.1);\n        newPriceRange._internal_scaleAroundCenter(scaleCoeff);\n        this._internal_setPriceRange(newPriceRange);\n    }\n    _internal_endScale() {\n        if (this._internal_isPercentage() || this._internal_isIndexedTo100()) {\n            return;\n        }\n        this._private__scaleStartPoint = null;\n        this._private__priceRangeSnapshot = null;\n    }\n    _internal_startScroll(x) {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint !== null || this._private__priceRangeSnapshot !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scrollStartPoint = x;\n        this._private__priceRangeSnapshot = ensureNotNull(this._internal_priceRange())._internal_clone();\n    }\n    _internal_scrollTo(x) {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        const priceUnitsPerPixel = ensureNotNull(this._internal_priceRange())._internal_length() / (this._internal_internalHeight() - 1);\n        let pixelDelta = x - this._private__scrollStartPoint;\n        if (this._internal_isInverted()) {\n            pixelDelta *= -1;\n        }\n        const priceDelta = pixelDelta * priceUnitsPerPixel;\n        const newPriceRange = ensureNotNull(this._private__priceRangeSnapshot)._internal_clone();\n        newPriceRange._internal_shift(priceDelta);\n        this._internal_setPriceRange(newPriceRange, true);\n        this._private__marksCache = null;\n    }\n    _internal_endScroll() {\n        if (this._internal_isAutoScale()) {\n            return;\n        }\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        this._private__scrollStartPoint = null;\n        this._private__priceRangeSnapshot = null;\n    }\n    _internal_formatter() {\n        if (!this._private__formatter) {\n            this._internal_updateFormatter();\n        }\n        return this._private__formatter;\n    }\n    _internal_formatPrice(price, firstValue) {\n        switch (this._private__options.mode) {\n            case 2 /* PriceScaleMode.Percentage */:\n                return this._internal_formatter().format(toPercent(price, firstValue));\n            case 3 /* PriceScaleMode.IndexedTo100 */:\n                return this._internal_formatter().format(toIndexedTo100(price, firstValue));\n            default:\n                return this._private__formatPrice(price);\n        }\n    }\n    _internal_formatLogical(logical) {\n        switch (this._private__options.mode) {\n            case 2 /* PriceScaleMode.Percentage */:\n            case 3 /* PriceScaleMode.IndexedTo100 */:\n                return this._internal_formatter().format(logical);\n            default:\n                return this._private__formatPrice(logical);\n        }\n    }\n    _internal_formatPriceAbsolute(price) {\n        return this._private__formatPrice(price, ensureNotNull(this._private__formatterSource())._internal_formatter());\n    }\n    _internal_formatPricePercentage(price, baseValue) {\n        price = toPercent(price, baseValue);\n        return percentageFormatter.format(price);\n    }\n    _internal_sourcesForAutoScale() {\n        return this._private__dataSources;\n    }\n    _internal_recalculatePriceRange(visibleBars) {\n        this._private__invalidatedForRange = {\n            _internal_visibleBars: visibleBars,\n            _internal_isValid: false,\n        };\n    }\n    _internal_updateAllViews() {\n        this._private__dataSources.forEach((s) => s._internal_updateAllViews());\n    }\n    _internal_updateFormatter() {\n        this._private__marksCache = null;\n        const formatterSource = this._private__formatterSource();\n        let base = 100;\n        if (formatterSource !== null) {\n            base = Math.round(1 / formatterSource._internal_minMove());\n        }\n        this._private__formatter = defaultPriceFormatter;\n        if (this._internal_isPercentage()) {\n            this._private__formatter = percentageFormatter;\n            base = 100;\n        }\n        else if (this._internal_isIndexedTo100()) {\n            this._private__formatter = new PriceFormatter(100, 1);\n            base = 100;\n        }\n        else {\n            if (formatterSource !== null) {\n                // user\n                this._private__formatter = formatterSource._internal_formatter();\n            }\n        }\n        this._private__markBuilder = new PriceTickMarkBuilder(this, base, this._private__coordinateToLogical.bind(this), this._private__logicalToCoordinate.bind(this));\n        this._private__markBuilder._internal_rebuildTickMarks();\n    }\n    _internal_invalidateSourcesCache() {\n        this._private__cachedOrderedSources = null;\n    }\n    /**\n     * @returns The {@link IPriceDataSource} that will be used as the \"formatter source\" (take minMove for formatter).\n     */\n    _private__formatterSource() {\n        return this._private__dataSources[0] || null;\n    }\n    _private__topMarginPx() {\n        return this._internal_isInverted()\n            ? this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow\n            : this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove;\n    }\n    _private__bottomMarginPx() {\n        return this._internal_isInverted()\n            ? this._private__options.scaleMargins.top * this._internal_height() + this._private__marginAbove\n            : this._private__options.scaleMargins.bottom * this._internal_height() + this._private__marginBelow;\n    }\n    _private__makeSureItIsValid() {\n        if (!this._private__invalidatedForRange._internal_isValid) {\n            this._private__invalidatedForRange._internal_isValid = true;\n            this._private__recalculatePriceRangeImpl();\n        }\n    }\n    _private__invalidateInternalHeightCache() {\n        this._private__internalHeightCache = null;\n    }\n    _private__logicalToCoordinate(logical, baseValue) {\n        this._private__makeSureItIsValid();\n        if (this._internal_isEmpty()) {\n            return 0;\n        }\n        logical = this._internal_isLog() && logical ? toLog(logical, this._private__logFormula) : logical;\n        const range = ensureNotNull(this._internal_priceRange());\n        const invCoordinate = this._private__bottomMarginPx() +\n            (this._internal_internalHeight() - 1) * (logical - range._internal_minValue()) / range._internal_length();\n        const coordinate = this._internal_invertedCoordinate(invCoordinate);\n        return coordinate;\n    }\n    _private__coordinateToLogical(coordinate, baseValue) {\n        this._private__makeSureItIsValid();\n        if (this._internal_isEmpty()) {\n            return 0;\n        }\n        const invCoordinate = this._internal_invertedCoordinate(coordinate);\n        const range = ensureNotNull(this._internal_priceRange());\n        const logical = range._internal_minValue() + range._internal_length() *\n            ((invCoordinate - this._private__bottomMarginPx()) / (this._internal_internalHeight() - 1));\n        return this._internal_isLog() ? fromLog(logical, this._private__logFormula) : logical;\n    }\n    _private__onIsInvertedChanged() {\n        this._private__marksCache = null;\n        this._private__markBuilder._internal_rebuildTickMarks();\n    }\n    // eslint-disable-next-line complexity\n    _private__recalculatePriceRangeImpl() {\n        const visibleBars = this._private__invalidatedForRange._internal_visibleBars;\n        if (visibleBars === null) {\n            return;\n        }\n        let priceRange = null;\n        const sources = this._internal_sourcesForAutoScale();\n        let marginAbove = 0;\n        let marginBelow = 0;\n        for (const source of sources) {\n            if (!source._internal_visible()) {\n                continue;\n            }\n            const firstValue = source._internal_firstValue();\n            if (firstValue === null) {\n                continue;\n            }\n            const autoScaleInfo = source._internal_autoscaleInfo(visibleBars._internal_left(), visibleBars._internal_right());\n            let sourceRange = autoScaleInfo && autoScaleInfo._internal_priceRange();\n            if (sourceRange !== null) {\n                switch (this._private__options.mode) {\n                    case 1 /* PriceScaleMode.Logarithmic */:\n                        sourceRange = convertPriceRangeToLog(sourceRange, this._private__logFormula);\n                        break;\n                    case 2 /* PriceScaleMode.Percentage */:\n                        sourceRange = toPercentRange(sourceRange, firstValue._internal_value);\n                        break;\n                    case 3 /* PriceScaleMode.IndexedTo100 */:\n                        sourceRange = toIndexedTo100Range(sourceRange, firstValue._internal_value);\n                        break;\n                }\n                if (priceRange === null) {\n                    priceRange = sourceRange;\n                }\n                else {\n                    priceRange = priceRange._internal_merge(ensureNotNull(sourceRange));\n                }\n                if (autoScaleInfo !== null) {\n                    const margins = autoScaleInfo._internal_margins();\n                    if (margins !== null) {\n                        marginAbove = Math.max(marginAbove, margins.above);\n                        marginBelow = Math.max(marginAbove, margins.below);\n                    }\n                }\n            }\n        }\n        if (marginAbove !== this._private__marginAbove || marginBelow !== this._private__marginBelow) {\n            this._private__marginAbove = marginAbove;\n            this._private__marginBelow = marginBelow;\n            this._private__marksCache = null;\n            this._private__invalidateInternalHeightCache();\n        }\n        if (priceRange !== null) {\n            // keep current range is new is empty\n            if (priceRange._internal_minValue() === priceRange._internal_maxValue()) {\n                const formatterSource = this._private__formatterSource();\n                const minMove = formatterSource === null || this._internal_isPercentage() || this._internal_isIndexedTo100() ? 1 : formatterSource._internal_minMove();\n                // if price range is degenerated to 1 point let's extend it by 10 min move values\n                // to avoid incorrect range and empty (blank) scale (in case of min tick much greater than 1)\n                const extendValue = 5 * minMove;\n                if (this._internal_isLog()) {\n                    priceRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n                }\n                priceRange = new PriceRangeImpl(priceRange._internal_minValue() - extendValue, priceRange._internal_maxValue() + extendValue);\n                if (this._internal_isLog()) {\n                    priceRange = convertPriceRangeToLog(priceRange, this._private__logFormula);\n                }\n            }\n            if (this._internal_isLog()) {\n                const rawRange = convertPriceRangeFromLog(priceRange, this._private__logFormula);\n                const newLogFormula = logFormulaForPriceRange(rawRange);\n                if (!logFormulasAreSame(newLogFormula, this._private__logFormula)) {\n                    const rawSnapshot = this._private__priceRangeSnapshot !== null ? convertPriceRangeFromLog(this._private__priceRangeSnapshot, this._private__logFormula) : null;\n                    this._private__logFormula = newLogFormula;\n                    priceRange = convertPriceRangeToLog(rawRange, newLogFormula);\n                    if (rawSnapshot !== null) {\n                        this._private__priceRangeSnapshot = convertPriceRangeToLog(rawSnapshot, newLogFormula);\n                    }\n                }\n            }\n            this._internal_setPriceRange(priceRange);\n        }\n        else {\n            // reset empty to default\n            if (this._private__priceRange === null) {\n                this._internal_setPriceRange(new PriceRangeImpl(-0.5, 0.5));\n                this._private__logFormula = logFormulaForPriceRange(null);\n            }\n        }\n        this._private__invalidatedForRange._internal_isValid = true;\n    }\n    _private__getCoordinateTransformer() {\n        if (this._internal_isPercentage()) {\n            return toPercent;\n        }\n        else if (this._internal_isIndexedTo100()) {\n            return toIndexedTo100;\n        }\n        else if (this._internal_isLog()) {\n            return (price) => toLog(price, this._private__logFormula);\n        }\n        return null;\n    }\n    _private__formatPrice(price, fallbackFormatter) {\n        if (this._private__localizationOptions.priceFormatter === undefined) {\n            if (fallbackFormatter === undefined) {\n                fallbackFormatter = this._internal_formatter();\n            }\n            return fallbackFormatter.format(price);\n        }\n        return this._private__localizationOptions.priceFormatter(price);\n    }\n}\n\nconst DEFAULT_STRETCH_FACTOR = 1000;\nclass Pane {\n    constructor(timeScale, model) {\n        this._private__dataSources = [];\n        this._private__overlaySourcesByScaleId = new Map();\n        this._private__height = 0;\n        this._private__width = 0;\n        this._private__stretchFactor = DEFAULT_STRETCH_FACTOR;\n        this._private__cachedOrderedSources = null;\n        this._private__destroyed = new Delegate();\n        this._private__timeScale = timeScale;\n        this._private__model = model;\n        this._private__grid = new Grid(this);\n        const options = model._internal_options();\n        this._private__leftPriceScale = this._private__createPriceScale(\"left\" /* DefaultPriceScaleId.Left */, options.leftPriceScale);\n        this._private__rightPriceScale = this._private__createPriceScale(\"right\" /* DefaultPriceScaleId.Right */, options.rightPriceScale);\n        this._private__leftPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__leftPriceScale), this);\n        this._private__rightPriceScale._internal_modeChanged()._internal_subscribe(this._private__onPriceScaleModeChanged.bind(this, this._private__rightPriceScale), this);\n        this._internal_applyScaleOptions(options);\n    }\n    _internal_applyScaleOptions(options) {\n        if (options.leftPriceScale) {\n            this._private__leftPriceScale._internal_applyOptions(options.leftPriceScale);\n        }\n        if (options.rightPriceScale) {\n            this._private__rightPriceScale._internal_applyOptions(options.rightPriceScale);\n        }\n        if (options.localization) {\n            this._private__leftPriceScale._internal_updateFormatter();\n            this._private__rightPriceScale._internal_updateFormatter();\n        }\n        if (options.overlayPriceScales) {\n            const sourceArrays = Array.from(this._private__overlaySourcesByScaleId.values());\n            for (const arr of sourceArrays) {\n                const priceScale = ensureNotNull(arr[0]._internal_priceScale());\n                priceScale._internal_applyOptions(options.overlayPriceScales);\n                if (options.localization) {\n                    priceScale._internal_updateFormatter();\n                }\n            }\n        }\n    }\n    _internal_priceScaleById(id) {\n        switch (id) {\n            case \"left\" /* DefaultPriceScaleId.Left */: {\n                return this._private__leftPriceScale;\n            }\n            case \"right\" /* DefaultPriceScaleId.Right */: {\n                return this._private__rightPriceScale;\n            }\n        }\n        if (this._private__overlaySourcesByScaleId.has(id)) {\n            return ensureDefined(this._private__overlaySourcesByScaleId.get(id))[0]._internal_priceScale();\n        }\n        return null;\n    }\n    _internal_destroy() {\n        this._internal_model()._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n        this._private__leftPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n        this._private__rightPriceScale._internal_modeChanged()._internal_unsubscribeAll(this);\n        this._private__dataSources.forEach((source) => {\n            if (source._internal_destroy) {\n                source._internal_destroy();\n            }\n        });\n        this._private__destroyed._internal_fire();\n    }\n    _internal_stretchFactor() {\n        return this._private__stretchFactor;\n    }\n    _internal_setStretchFactor(factor) {\n        this._private__stretchFactor = factor;\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n    _internal_width() {\n        return this._private__width;\n    }\n    _internal_height() {\n        return this._private__height;\n    }\n    _internal_setWidth(width) {\n        this._private__width = width;\n        this._internal_updateAllSources();\n    }\n    _internal_setHeight(height) {\n        this._private__height = height;\n        this._private__leftPriceScale._internal_setHeight(height);\n        this._private__rightPriceScale._internal_setHeight(height);\n        // process overlays\n        this._private__dataSources.forEach((ds) => {\n            if (this._internal_isOverlay(ds)) {\n                const priceScale = ds._internal_priceScale();\n                if (priceScale !== null) {\n                    priceScale._internal_setHeight(height);\n                }\n            }\n        });\n        this._internal_updateAllSources();\n    }\n    _internal_dataSources() {\n        return this._private__dataSources;\n    }\n    _internal_isOverlay(source) {\n        const priceScale = source._internal_priceScale();\n        if (priceScale === null) {\n            return true;\n        }\n        return this._private__leftPriceScale !== priceScale && this._private__rightPriceScale !== priceScale;\n    }\n    _internal_addDataSource(source, targetScaleId, zOrder) {\n        const targetZOrder = (zOrder !== undefined) ? zOrder : this._private__getZOrderMinMax()._internal_maxZOrder + 1;\n        this._private__insertDataSource(source, targetScaleId, targetZOrder);\n    }\n    _internal_removeDataSource(source) {\n        const index = this._private__dataSources.indexOf(source);\n        assert(index !== -1, 'removeDataSource: invalid data source');\n        this._private__dataSources.splice(index, 1);\n        const priceScaleId = ensureNotNull(source._internal_priceScale())._internal_id();\n        if (this._private__overlaySourcesByScaleId.has(priceScaleId)) {\n            const overlaySources = ensureDefined(this._private__overlaySourcesByScaleId.get(priceScaleId));\n            const overlayIndex = overlaySources.indexOf(source);\n            if (overlayIndex !== -1) {\n                overlaySources.splice(overlayIndex, 1);\n                if (overlaySources.length === 0) {\n                    this._private__overlaySourcesByScaleId.delete(priceScaleId);\n                }\n            }\n        }\n        const priceScale = source._internal_priceScale();\n        // if source has owner, it returns owner's price scale\n        // and it does not have source in their list\n        if (priceScale && priceScale._internal_dataSources().indexOf(source) >= 0) {\n            priceScale._internal_removeDataSource(source);\n        }\n        if (priceScale !== null) {\n            priceScale._internal_invalidateSourcesCache();\n            this._internal_recalculatePriceScale(priceScale);\n        }\n        this._private__cachedOrderedSources = null;\n    }\n    _internal_priceScalePosition(priceScale) {\n        if (priceScale === this._private__leftPriceScale) {\n            return 'left';\n        }\n        if (priceScale === this._private__rightPriceScale) {\n            return 'right';\n        }\n        return 'overlay';\n    }\n    _internal_leftPriceScale() {\n        return this._private__leftPriceScale;\n    }\n    _internal_rightPriceScale() {\n        return this._private__rightPriceScale;\n    }\n    _internal_startScalePrice(priceScale, x) {\n        priceScale._internal_startScale(x);\n    }\n    _internal_scalePriceTo(priceScale, x) {\n        priceScale._internal_scaleTo(x);\n        // TODO: be more smart and update only affected views\n        this._internal_updateAllSources();\n    }\n    _internal_endScalePrice(priceScale) {\n        priceScale._internal_endScale();\n    }\n    _internal_startScrollPrice(priceScale, x) {\n        priceScale._internal_startScroll(x);\n    }\n    _internal_scrollPriceTo(priceScale, x) {\n        priceScale._internal_scrollTo(x);\n        this._internal_updateAllSources();\n    }\n    _internal_endScrollPrice(priceScale) {\n        priceScale._internal_endScroll();\n    }\n    _internal_updateAllSources() {\n        this._private__dataSources.forEach((source) => {\n            source._internal_updateAllViews();\n        });\n    }\n    _internal_defaultPriceScale() {\n        let priceScale = null;\n        if (this._private__model._internal_options().rightPriceScale.visible && this._private__rightPriceScale._internal_dataSources().length !== 0) {\n            priceScale = this._private__rightPriceScale;\n        }\n        else if (this._private__model._internal_options().leftPriceScale.visible && this._private__leftPriceScale._internal_dataSources().length !== 0) {\n            priceScale = this._private__leftPriceScale;\n        }\n        else if (this._private__dataSources.length !== 0) {\n            priceScale = this._private__dataSources[0]._internal_priceScale();\n        }\n        if (priceScale === null) {\n            priceScale = this._private__rightPriceScale;\n        }\n        return priceScale;\n    }\n    _internal_defaultVisiblePriceScale() {\n        let priceScale = null;\n        if (this._private__model._internal_options().rightPriceScale.visible) {\n            priceScale = this._private__rightPriceScale;\n        }\n        else if (this._private__model._internal_options().leftPriceScale.visible) {\n            priceScale = this._private__leftPriceScale;\n        }\n        return priceScale;\n    }\n    _internal_recalculatePriceScale(priceScale) {\n        if (priceScale === null || !priceScale._internal_isAutoScale()) {\n            return;\n        }\n        this._private__recalculatePriceScaleImpl(priceScale);\n    }\n    _internal_resetPriceScale(priceScale) {\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        priceScale._internal_setMode({ _internal_autoScale: true });\n        if (visibleBars !== null) {\n            priceScale._internal_recalculatePriceRange(visibleBars);\n        }\n        this._internal_updateAllSources();\n    }\n    _internal_momentaryAutoScale() {\n        this._private__recalculatePriceScaleImpl(this._private__leftPriceScale);\n        this._private__recalculatePriceScaleImpl(this._private__rightPriceScale);\n    }\n    _internal_recalculate() {\n        this._internal_recalculatePriceScale(this._private__leftPriceScale);\n        this._internal_recalculatePriceScale(this._private__rightPriceScale);\n        this._private__dataSources.forEach((ds) => {\n            if (this._internal_isOverlay(ds)) {\n                this._internal_recalculatePriceScale(ds._internal_priceScale());\n            }\n        });\n        this._internal_updateAllSources();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_orderedSources() {\n        if (this._private__cachedOrderedSources === null) {\n            this._private__cachedOrderedSources = sortSources(this._private__dataSources);\n        }\n        return this._private__cachedOrderedSources;\n    }\n    _internal_onDestroyed() {\n        return this._private__destroyed;\n    }\n    _internal_grid() {\n        return this._private__grid;\n    }\n    _private__recalculatePriceScaleImpl(priceScale) {\n        // TODO: can use this checks\n        const sourceForAutoScale = priceScale._internal_sourcesForAutoScale();\n        if (sourceForAutoScale && sourceForAutoScale.length > 0 && !this._private__timeScale._internal_isEmpty()) {\n            const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n            if (visibleBars !== null) {\n                priceScale._internal_recalculatePriceRange(visibleBars);\n            }\n        }\n        priceScale._internal_updateAllViews();\n    }\n    _private__getZOrderMinMax() {\n        const sources = this._internal_orderedSources();\n        if (sources.length === 0) {\n            return { _internal_minZOrder: 0, _internal_maxZOrder: 0 };\n        }\n        let minZOrder = 0;\n        let maxZOrder = 0;\n        for (let j = 0; j < sources.length; j++) {\n            const ds = sources[j];\n            const zOrder = ds._internal_zorder();\n            if (zOrder !== null) {\n                if (zOrder < minZOrder) {\n                    minZOrder = zOrder;\n                }\n                if (zOrder > maxZOrder) {\n                    maxZOrder = zOrder;\n                }\n            }\n        }\n        return { _internal_minZOrder: minZOrder, _internal_maxZOrder: maxZOrder };\n    }\n    _private__insertDataSource(source, priceScaleId, zOrder) {\n        let priceScale = this._internal_priceScaleById(priceScaleId);\n        if (priceScale === null) {\n            priceScale = this._private__createPriceScale(priceScaleId, this._private__model._internal_options().overlayPriceScales);\n        }\n        this._private__dataSources.push(source);\n        if (!isDefaultPriceScale(priceScaleId)) {\n            const overlaySources = this._private__overlaySourcesByScaleId.get(priceScaleId) || [];\n            overlaySources.push(source);\n            this._private__overlaySourcesByScaleId.set(priceScaleId, overlaySources);\n        }\n        priceScale._internal_addDataSource(source);\n        source._internal_setPriceScale(priceScale);\n        source._internal_setZorder(zOrder);\n        this._internal_recalculatePriceScale(priceScale);\n        this._private__cachedOrderedSources = null;\n    }\n    _private__onPriceScaleModeChanged(priceScale, oldMode, newMode) {\n        if (oldMode._internal_mode === newMode._internal_mode) {\n            return;\n        }\n        // momentary auto scale if we toggle percentage/indexedTo100 mode\n        this._private__recalculatePriceScaleImpl(priceScale);\n    }\n    _private__createPriceScale(id, options) {\n        const actualOptions = Object.assign({ visible: true, autoScale: true }, clone(options));\n        const priceScale = new PriceScale(id, actualOptions, this._private__model._internal_options().layout, this._private__model._internal_options().localization);\n        priceScale._internal_setHeight(this._internal_height());\n        return priceScale;\n    }\n}\n\nconst getMonth = (date) => date.getUTCMonth() + 1;\nconst getDay = (date) => date.getUTCDate();\nconst getYear = (date) => date.getUTCFullYear();\nconst dd = (date) => numberToStringWithLeadingZero(getDay(date), 2);\nconst MMMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1)\n    .toLocaleString(locale, { month: 'long' });\nconst MMM = (date, locale) => new Date(date.getUTCFullYear(), date.getUTCMonth(), 1)\n    .toLocaleString(locale, { month: 'short' });\nconst MM = (date) => numberToStringWithLeadingZero(getMonth(date), 2);\nconst yy = (date) => numberToStringWithLeadingZero(getYear(date) % 100, 2);\nconst yyyy = (date) => numberToStringWithLeadingZero(getYear(date), 4);\nfunction formatDate(date, format, locale) {\n    return format\n        .replace(/yyyy/g, yyyy(date))\n        .replace(/yy/g, yy(date))\n        .replace(/MMMM/g, MMMM(date, locale))\n        .replace(/MMM/g, MMM(date, locale))\n        .replace(/MM/g, MM(date))\n        .replace(/dd/g, dd(date));\n}\n\nclass DateFormatter {\n    constructor(dateFormat = 'yyyy-MM-dd', locale = 'default') {\n        this._private__dateFormat = dateFormat;\n        this._private__locale = locale;\n    }\n    _internal_format(date) {\n        return formatDate(date, this._private__dateFormat, this._private__locale);\n    }\n}\n\nclass TimeFormatter {\n    constructor(format) {\n        this._private__formatStr = format || '%h:%m:%s';\n    }\n    _internal_format(date) {\n        return this._private__formatStr.replace('%h', numberToStringWithLeadingZero(date.getUTCHours(), 2)).\n            replace('%m', numberToStringWithLeadingZero(date.getUTCMinutes(), 2)).\n            replace('%s', numberToStringWithLeadingZero(date.getUTCSeconds(), 2));\n    }\n}\n\nconst defaultParams = {\n    _internal_dateFormat: 'yyyy-MM-dd',\n    _internal_timeFormat: '%h:%m:%s',\n    _internal_dateTimeSeparator: ' ',\n    _internal_locale: 'default',\n};\nclass DateTimeFormatter {\n    constructor(params = {}) {\n        const formatterParams = Object.assign(Object.assign({}, defaultParams), params);\n        this._private__dateFormatter = new DateFormatter(formatterParams._internal_dateFormat, formatterParams._internal_locale);\n        this._private__timeFormatter = new TimeFormatter(formatterParams._internal_timeFormat);\n        this._private__separator = formatterParams._internal_dateTimeSeparator;\n    }\n    _internal_format(dateTime) {\n        return `${this._private__dateFormatter._internal_format(dateTime)}${this._private__separator}${this._private__timeFormatter._internal_format(dateTime)}`;\n    }\n}\n\nfunction defaultTickMarkFormatter(timePoint, tickMarkType, locale) {\n    const formatOptions = {};\n    switch (tickMarkType) {\n        case 0 /* TickMarkType.Year */:\n            formatOptions.year = 'numeric';\n            break;\n        case 1 /* TickMarkType.Month */:\n            formatOptions.month = 'short';\n            break;\n        case 2 /* TickMarkType.DayOfMonth */:\n            formatOptions.day = 'numeric';\n            break;\n        case 3 /* TickMarkType.Time */:\n            formatOptions.hour12 = false;\n            formatOptions.hour = '2-digit';\n            formatOptions.minute = '2-digit';\n            break;\n        case 4 /* TickMarkType.TimeWithSeconds */:\n            formatOptions.hour12 = false;\n            formatOptions.hour = '2-digit';\n            formatOptions.minute = '2-digit';\n            formatOptions.second = '2-digit';\n            break;\n    }\n    const date = timePoint._internal_businessDay === undefined\n        ? new Date(timePoint._internal_timestamp * 1000)\n        : new Date(Date.UTC(timePoint._internal_businessDay.year, timePoint._internal_businessDay.month - 1, timePoint._internal_businessDay.day));\n    // from given date we should use only as UTC date or timestamp\n    // but to format as locale date we can convert UTC date to local date\n    const localDateFromUtc = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n    return localDateFromUtc.toLocaleString(locale, formatOptions);\n}\n\nclass FormattedLabelsCache {\n    constructor(format, size = 50) {\n        this._private__actualSize = 0;\n        this._private__usageTick = 1;\n        this._private__oldestTick = 1;\n        this._private__cache = new Map();\n        this._private__tick2Labels = new Map();\n        this._private__format = format;\n        this._private__maxSize = size;\n    }\n    _internal_format(tickMark) {\n        const time = tickMark._internal_time;\n        const cacheKey = time._internal_businessDay === undefined\n            ? new Date(time._internal_timestamp * 1000).getTime()\n            : new Date(Date.UTC(time._internal_businessDay.year, time._internal_businessDay.month - 1, time._internal_businessDay.day)).getTime();\n        const tick = this._private__cache.get(cacheKey);\n        if (tick !== undefined) {\n            return tick._internal_string;\n        }\n        if (this._private__actualSize === this._private__maxSize) {\n            const oldestValue = this._private__tick2Labels.get(this._private__oldestTick);\n            this._private__tick2Labels.delete(this._private__oldestTick);\n            this._private__cache.delete(ensureDefined(oldestValue));\n            this._private__oldestTick++;\n            this._private__actualSize--;\n        }\n        const str = this._private__format(tickMark);\n        this._private__cache.set(cacheKey, { _internal_string: str, _internal_tick: this._private__usageTick });\n        this._private__tick2Labels.set(this._private__usageTick, cacheKey);\n        this._private__actualSize++;\n        this._private__usageTick++;\n        return str;\n    }\n}\n\nclass RangeImpl {\n    constructor(left, right) {\n        assert(left <= right, 'right should be >= left');\n        this._private__left = left;\n        this._private__right = right;\n    }\n    _internal_left() {\n        return this._private__left;\n    }\n    _internal_right() {\n        return this._private__right;\n    }\n    _internal_count() {\n        return this._private__right - this._private__left + 1;\n    }\n    _internal_contains(index) {\n        return this._private__left <= index && index <= this._private__right;\n    }\n    _internal_equals(other) {\n        return this._private__left === other._internal_left() && this._private__right === other._internal_right();\n    }\n}\nfunction areRangesEqual(first, second) {\n    if (first === null || second === null) {\n        return first === second;\n    }\n    return first._internal_equals(second);\n}\n\nclass TickMarks {\n    constructor() {\n        this._private__marksByWeight = new Map();\n        this._private__cache = null;\n    }\n    _internal_setTimeScalePoints(newPoints, firstChangedPointIndex) {\n        this._private__removeMarksSinceIndex(firstChangedPointIndex);\n        this._private__cache = null;\n        for (let index = firstChangedPointIndex; index < newPoints.length; ++index) {\n            const point = newPoints[index];\n            let marksForWeight = this._private__marksByWeight.get(point._internal_timeWeight);\n            if (marksForWeight === undefined) {\n                marksForWeight = [];\n                this._private__marksByWeight.set(point._internal_timeWeight, marksForWeight);\n            }\n            marksForWeight.push({\n                _internal_index: index,\n                _internal_time: point._internal_time,\n                _internal_weight: point._internal_timeWeight,\n                _internal_originalTime: point._internal_originalTime,\n            });\n        }\n    }\n    _internal_build(spacing, maxWidth) {\n        const maxIndexesPerMark = Math.ceil(maxWidth / spacing);\n        if (this._private__cache === null || this._private__cache._internal_maxIndexesPerMark !== maxIndexesPerMark) {\n            this._private__cache = {\n                _internal_marks: this._private__buildMarksImpl(maxIndexesPerMark),\n                _internal_maxIndexesPerMark: maxIndexesPerMark,\n            };\n        }\n        return this._private__cache._internal_marks;\n    }\n    _private__removeMarksSinceIndex(sinceIndex) {\n        if (sinceIndex === 0) {\n            this._private__marksByWeight.clear();\n            return;\n        }\n        const weightsToClear = [];\n        this._private__marksByWeight.forEach((marks, timeWeight) => {\n            if (sinceIndex <= marks[0]._internal_index) {\n                weightsToClear.push(timeWeight);\n            }\n            else {\n                marks.splice(lowerbound(marks, sinceIndex, (tm) => tm._internal_index < sinceIndex), Infinity);\n            }\n        });\n        for (const weight of weightsToClear) {\n            this._private__marksByWeight.delete(weight);\n        }\n    }\n    _private__buildMarksImpl(maxIndexesPerMark) {\n        let marks = [];\n        for (const weight of Array.from(this._private__marksByWeight.keys()).sort((a, b) => b - a)) {\n            if (!this._private__marksByWeight.get(weight)) {\n                continue;\n            }\n            // Built tickMarks are now prevMarks, and marks it as new array\n            const prevMarks = marks;\n            marks = [];\n            const prevMarksLength = prevMarks.length;\n            let prevMarksPointer = 0;\n            const currentWeight = ensureDefined(this._private__marksByWeight.get(weight));\n            const currentWeightLength = currentWeight.length;\n            let rightIndex = Infinity;\n            let leftIndex = -Infinity;\n            for (let i = 0; i < currentWeightLength; i++) {\n                const mark = currentWeight[i];\n                const currentIndex = mark._internal_index;\n                // Determine indexes with which current index will be compared\n                // All marks to the right is moved to new array\n                while (prevMarksPointer < prevMarksLength) {\n                    const lastMark = prevMarks[prevMarksPointer];\n                    const lastIndex = lastMark._internal_index;\n                    if (lastIndex < currentIndex) {\n                        prevMarksPointer++;\n                        marks.push(lastMark);\n                        leftIndex = lastIndex;\n                        rightIndex = Infinity;\n                    }\n                    else {\n                        rightIndex = lastIndex;\n                        break;\n                    }\n                }\n                if (rightIndex - currentIndex >= maxIndexesPerMark && currentIndex - leftIndex >= maxIndexesPerMark) {\n                    // TickMark fits. Place it into new array\n                    marks.push(mark);\n                    leftIndex = currentIndex;\n                }\n            }\n            // Place all unused tickMarks into new array;\n            for (; prevMarksPointer < prevMarksLength; prevMarksPointer++) {\n                marks.push(prevMarks[prevMarksPointer]);\n            }\n        }\n        return marks;\n    }\n}\n\nclass TimeScaleVisibleRange {\n    constructor(logicalRange) {\n        this._private__logicalRange = logicalRange;\n    }\n    _internal_strictRange() {\n        if (this._private__logicalRange === null) {\n            return null;\n        }\n        return new RangeImpl(Math.floor(this._private__logicalRange._internal_left()), Math.ceil(this._private__logicalRange._internal_right()));\n    }\n    _internal_logicalRange() {\n        return this._private__logicalRange;\n    }\n    static _internal_invalid() {\n        return new TimeScaleVisibleRange(null);\n    }\n}\n\n/**\n * Represents the type of a tick mark on the time axis.\n */\nvar TickMarkType;\n(function (TickMarkType) {\n    /**\n     * The start of the year (e.g. it's the first tick mark in a year).\n     */\n    TickMarkType[TickMarkType[\"Year\"] = 0] = \"Year\";\n    /**\n     * The start of the month (e.g. it's the first tick mark in a month).\n     */\n    TickMarkType[TickMarkType[\"Month\"] = 1] = \"Month\";\n    /**\n     * A day of the month.\n     */\n    TickMarkType[TickMarkType[\"DayOfMonth\"] = 2] = \"DayOfMonth\";\n    /**\n     * A time without seconds.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    TickMarkType[TickMarkType[\"Time\"] = 3] = \"Time\";\n    /**\n     * A time with seconds.\n     */\n    TickMarkType[TickMarkType[\"TimeWithSeconds\"] = 4] = \"TimeWithSeconds\";\n})(TickMarkType || (TickMarkType = {}));\nclass TimeScale {\n    constructor(model, options, localizationOptions) {\n        this._private__width = 0;\n        this._private__baseIndexOrNull = null;\n        this._private__points = [];\n        this._private__scrollStartPoint = null;\n        this._private__scaleStartPoint = null;\n        this._private__tickMarks = new TickMarks();\n        this._private__formattedByWeight = new Map();\n        this._private__visibleRange = TimeScaleVisibleRange._internal_invalid();\n        this._private__visibleRangeInvalidated = true;\n        this._private__visibleBarsChanged = new Delegate();\n        this._private__logicalRangeChanged = new Delegate();\n        this._private__optionsApplied = new Delegate();\n        this._private__commonTransitionStartState = null;\n        this._private__timeMarksCache = null;\n        this._private__labels = [];\n        this._private__options = options;\n        this._private__localizationOptions = localizationOptions;\n        this._private__rightOffset = options.rightOffset;\n        this._private__barSpacing = options.barSpacing;\n        this._private__model = model;\n        this._private__updateDateTimeFormatter();\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyLocalizationOptions(localizationOptions) {\n        merge(this._private__localizationOptions, localizationOptions);\n        this._private__invalidateTickMarks();\n        this._private__updateDateTimeFormatter();\n    }\n    _internal_applyOptions(options, localizationOptions) {\n        var _a;\n        merge(this._private__options, options);\n        if (this._private__options.fixLeftEdge) {\n            this._private__doFixLeftEdge();\n        }\n        if (this._private__options.fixRightEdge) {\n            this._private__doFixRightEdge();\n        }\n        // note that bar spacing should be applied before right offset\n        // because right offset depends on bar spacing\n        if (options.barSpacing !== undefined) {\n            this._private__model._internal_setBarSpacing(options.barSpacing);\n        }\n        if (options.rightOffset !== undefined) {\n            this._private__model._internal_setRightOffset(options.rightOffset);\n        }\n        if (options.minBarSpacing !== undefined) {\n            // yes, if we apply min bar spacing then we need to correct bar spacing\n            // the easiest way is to apply it once again\n            this._private__model._internal_setBarSpacing((_a = options.barSpacing) !== null && _a !== void 0 ? _a : this._private__barSpacing);\n        }\n        this._private__invalidateTickMarks();\n        this._private__updateDateTimeFormatter();\n        this._private__optionsApplied._internal_fire();\n    }\n    _internal_indexToTime(index) {\n        var _a, _b;\n        return (_b = (_a = this._private__points[index]) === null || _a === void 0 ? void 0 : _a._internal_time) !== null && _b !== void 0 ? _b : null;\n    }\n    _internal_indexToTimeScalePoint(index) {\n        var _a;\n        return (_a = this._private__points[index]) !== null && _a !== void 0 ? _a : null;\n    }\n    _internal_timeToIndex(time, findNearest) {\n        if (this._private__points.length < 1) {\n            // no time points available\n            return null;\n        }\n        if (time._internal_timestamp > this._private__points[this._private__points.length - 1]._internal_time._internal_timestamp) {\n            // special case\n            return findNearest ? this._private__points.length - 1 : null;\n        }\n        const index = lowerbound(this._private__points, time._internal_timestamp, (a, b) => a._internal_time._internal_timestamp < b);\n        if (time._internal_timestamp < this._private__points[index]._internal_time._internal_timestamp) {\n            return findNearest ? index : null;\n        }\n        return index;\n    }\n    _internal_isEmpty() {\n        return this._private__width === 0 || this._private__points.length === 0 || this._private__baseIndexOrNull === null;\n    }\n    _internal_hasPoints() {\n        return this._private__points.length > 0;\n    }\n    // strict range: integer indices of the bars in the visible range rounded in more wide direction\n    _internal_visibleStrictRange() {\n        this._private__updateVisibleRange();\n        return this._private__visibleRange._internal_strictRange();\n    }\n    _internal_visibleLogicalRange() {\n        this._private__updateVisibleRange();\n        return this._private__visibleRange._internal_logicalRange();\n    }\n    _internal_visibleTimeRange() {\n        const visibleBars = this._internal_visibleStrictRange();\n        if (visibleBars === null) {\n            return null;\n        }\n        const range = {\n            from: visibleBars._internal_left(),\n            to: visibleBars._internal_right(),\n        };\n        return this._internal_timeRangeForLogicalRange(range);\n    }\n    _internal_timeRangeForLogicalRange(range) {\n        const from = Math.round(range.from);\n        const to = Math.round(range.to);\n        const firstIndex = ensureNotNull(this._private__firstIndex());\n        const lastIndex = ensureNotNull(this._private__lastIndex());\n        return {\n            from: ensureNotNull(this._internal_indexToTime(Math.max(firstIndex, from))),\n            to: ensureNotNull(this._internal_indexToTime(Math.min(lastIndex, to))),\n        };\n    }\n    _internal_logicalRangeForTimeRange(range) {\n        return {\n            from: ensureNotNull(this._internal_timeToIndex(range.from, true)),\n            to: ensureNotNull(this._internal_timeToIndex(range.to, true)),\n        };\n    }\n    _internal_width() {\n        return this._private__width;\n    }\n    _internal_setWidth(newWidth) {\n        if (!isFinite(newWidth) || newWidth <= 0) {\n            return;\n        }\n        if (this._private__width === newWidth) {\n            return;\n        }\n        // when we change the width and we need to correct visible range because of fixing left edge\n        // we need to check the previous visible range rather than the new one\n        // because it might be updated by changing width, bar spacing, etc\n        // but we need to try to keep the same range\n        const previousVisibleRange = this._internal_visibleLogicalRange();\n        const oldWidth = this._private__width;\n        this._private__width = newWidth;\n        this._private__visibleRangeInvalidated = true;\n        if (this._private__options.lockVisibleTimeRangeOnResize && oldWidth !== 0) {\n            // recalculate bar spacing\n            const newBarSpacing = this._private__barSpacing * newWidth / oldWidth;\n            this._private__barSpacing = newBarSpacing;\n        }\n        // if time scale is scrolled to the end of data and we have fixed right edge\n        // keep left edge instead of right\n        // we need it to avoid \"shaking\" if the last bar visibility affects time scale width\n        if (this._private__options.fixLeftEdge) {\n            // note that logical left range means not the middle of a bar (it's the left border)\n            if (previousVisibleRange !== null && previousVisibleRange._internal_left() <= 0) {\n                const delta = oldWidth - newWidth;\n                // reduce  _rightOffset means move right\n                // we could move more than required - this will be fixed by _correctOffset()\n                this._private__rightOffset -= Math.round(delta / this._private__barSpacing) + 1;\n                this._private__visibleRangeInvalidated = true;\n            }\n        }\n        // updating bar spacing should be first because right offset depends on it\n        this._private__correctBarSpacing();\n        this._private__correctOffset();\n    }\n    _internal_indexToCoordinate(index) {\n        if (this._internal_isEmpty() || !isInteger(index)) {\n            return 0;\n        }\n        const baseIndex = this._internal_baseIndex();\n        const deltaFromRight = baseIndex + this._private__rightOffset - index;\n        const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n        return coordinate;\n    }\n    _internal_indexesToCoordinates(points, visibleRange) {\n        const baseIndex = this._internal_baseIndex();\n        const indexFrom = (visibleRange === undefined) ? 0 : visibleRange.from;\n        const indexTo = (visibleRange === undefined) ? points.length : visibleRange.to;\n        for (let i = indexFrom; i < indexTo; i++) {\n            const index = points[i]._internal_time;\n            const deltaFromRight = baseIndex + this._private__rightOffset - index;\n            const coordinate = this._private__width - (deltaFromRight + 0.5) * this._private__barSpacing - 1;\n            points[i]._internal_x = coordinate;\n        }\n    }\n    _internal_coordinateToIndex(x) {\n        return Math.ceil(this._private__coordinateToFloatIndex(x));\n    }\n    _internal_setRightOffset(offset) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__rightOffset = offset;\n        this._private__correctOffset();\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_barSpacing() {\n        return this._private__barSpacing;\n    }\n    _internal_setBarSpacing(newBarSpacing) {\n        this._private__setBarSpacing(newBarSpacing);\n        // do not allow scroll out of visible bars\n        this._private__correctOffset();\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_rightOffset() {\n        return this._private__rightOffset;\n    }\n    // eslint-disable-next-line complexity\n    _internal_marks() {\n        if (this._internal_isEmpty()) {\n            return null;\n        }\n        if (this._private__timeMarksCache !== null) {\n            return this._private__timeMarksCache;\n        }\n        const spacing = this._private__barSpacing;\n        const fontSize = this._private__model._internal_options().layout.fontSize;\n        const maxLabelWidth = (fontSize + 4) * 5;\n        const indexPerLabel = Math.round(maxLabelWidth / spacing);\n        const visibleBars = ensureNotNull(this._internal_visibleStrictRange());\n        const firstBar = Math.max(visibleBars._internal_left(), visibleBars._internal_left() - indexPerLabel);\n        const lastBar = Math.max(visibleBars._internal_right(), visibleBars._internal_right() - indexPerLabel);\n        const items = this._private__tickMarks._internal_build(spacing, maxLabelWidth);\n        // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second label on time scale\"\n        const earliestIndexOfSecondLabel = this._private__firstIndex() + indexPerLabel;\n        // according to indexPerLabel value this value means \"earliest index which _might be_ used as the second last label on time scale\"\n        const indexOfSecondLastLabel = this._private__lastIndex() - indexPerLabel;\n        const isAllScalingAndScrollingDisabled = this._private__isAllScalingAndScrollingDisabled();\n        const isLeftEdgeFixed = this._private__options.fixLeftEdge || isAllScalingAndScrollingDisabled;\n        const isRightEdgeFixed = this._private__options.fixRightEdge || isAllScalingAndScrollingDisabled;\n        let targetIndex = 0;\n        for (const tm of items) {\n            if (!(firstBar <= tm._internal_index && tm._internal_index <= lastBar)) {\n                continue;\n            }\n            let label;\n            if (targetIndex < this._private__labels.length) {\n                label = this._private__labels[targetIndex];\n                label._internal_coord = this._internal_indexToCoordinate(tm._internal_index);\n                label._internal_label = this._private__formatLabel(tm);\n                label._internal_weight = tm._internal_weight;\n            }\n            else {\n                label = {\n                    _internal_needAlignCoordinate: false,\n                    _internal_coord: this._internal_indexToCoordinate(tm._internal_index),\n                    _internal_label: this._private__formatLabel(tm),\n                    _internal_weight: tm._internal_weight,\n                };\n                this._private__labels.push(label);\n            }\n            if (this._private__barSpacing > (maxLabelWidth / 2) && !isAllScalingAndScrollingDisabled) {\n                // if there is enough space then let's show all tick marks as usual\n                label._internal_needAlignCoordinate = false;\n            }\n            else {\n                // if a user is able to scroll after a tick mark then show it as usual, otherwise the coordinate might be aligned\n                // if the index is for the second (last) label or later (earlier) then most likely this label might be displayed without correcting the coordinate\n                label._internal_needAlignCoordinate = (isLeftEdgeFixed && tm._internal_index <= earliestIndexOfSecondLabel) || (isRightEdgeFixed && tm._internal_index >= indexOfSecondLastLabel);\n            }\n            targetIndex++;\n        }\n        this._private__labels.length = targetIndex;\n        this._private__timeMarksCache = this._private__labels;\n        return this._private__labels;\n    }\n    _internal_restoreDefault() {\n        this._private__visibleRangeInvalidated = true;\n        this._internal_setBarSpacing(this._private__options.barSpacing);\n        this._internal_setRightOffset(this._private__options.rightOffset);\n    }\n    _internal_setBaseIndex(baseIndex) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__baseIndexOrNull = baseIndex;\n        this._private__correctOffset();\n        this._private__doFixLeftEdge();\n    }\n    /**\n     * Zoom in/out the scale around a `zoomPoint` on `scale` value.\n     *\n     * @param zoomPoint - X coordinate of the point to apply the zoom.\n     * If `rightBarStaysOnScroll` option is disabled, then will be used to restore right offset.\n     * @param scale - Zoom value (in 1/10 parts of current bar spacing).\n     * Negative value means zoom out, positive - zoom in.\n     */\n    _internal_zoom(zoomPoint, scale) {\n        const floatIndexAtZoomPoint = this._private__coordinateToFloatIndex(zoomPoint);\n        const barSpacing = this._internal_barSpacing();\n        const newBarSpacing = barSpacing + scale * (barSpacing / 10);\n        // zoom in/out bar spacing\n        this._internal_setBarSpacing(newBarSpacing);\n        if (!this._private__options.rightBarStaysOnScroll) {\n            // and then correct right offset to move index under zoomPoint back to its coordinate\n            this._internal_setRightOffset(this._internal_rightOffset() + (floatIndexAtZoomPoint - this._private__coordinateToFloatIndex(zoomPoint)));\n        }\n    }\n    _internal_startScale(x) {\n        if (this._private__scrollStartPoint) {\n            this._internal_endScroll();\n        }\n        if (this._private__scaleStartPoint !== null || this._private__commonTransitionStartState !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scaleStartPoint = x;\n        this._private__saveCommonTransitionsStartState();\n    }\n    _internal_scaleTo(x) {\n        if (this._private__commonTransitionStartState === null) {\n            return;\n        }\n        const startLengthFromRight = clamp(this._private__width - x, 0, this._private__width);\n        const currentLengthFromRight = clamp(this._private__width - ensureNotNull(this._private__scaleStartPoint), 0, this._private__width);\n        if (startLengthFromRight === 0 || currentLengthFromRight === 0) {\n            return;\n        }\n        this._internal_setBarSpacing(this._private__commonTransitionStartState._internal_barSpacing * startLengthFromRight / currentLengthFromRight);\n    }\n    _internal_endScale() {\n        if (this._private__scaleStartPoint === null) {\n            return;\n        }\n        this._private__scaleStartPoint = null;\n        this._private__clearCommonTransitionsStartState();\n    }\n    _internal_startScroll(x) {\n        if (this._private__scrollStartPoint !== null || this._private__commonTransitionStartState !== null) {\n            return;\n        }\n        if (this._internal_isEmpty()) {\n            return;\n        }\n        this._private__scrollStartPoint = x;\n        this._private__saveCommonTransitionsStartState();\n    }\n    _internal_scrollTo(x) {\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        const shiftInLogical = (this._private__scrollStartPoint - x) / this._internal_barSpacing();\n        this._private__rightOffset = ensureNotNull(this._private__commonTransitionStartState)._internal_rightOffset + shiftInLogical;\n        this._private__visibleRangeInvalidated = true;\n        // do not allow scroll out of visible bars\n        this._private__correctOffset();\n    }\n    _internal_endScroll() {\n        if (this._private__scrollStartPoint === null) {\n            return;\n        }\n        this._private__scrollStartPoint = null;\n        this._private__clearCommonTransitionsStartState();\n    }\n    _internal_scrollToRealTime() {\n        this._internal_scrollToOffsetAnimated(this._private__options.rightOffset);\n    }\n    _internal_scrollToOffsetAnimated(offset, animationDuration = 400 /* Constants.DefaultAnimationDuration */) {\n        if (!isFinite(offset)) {\n            throw new RangeError('offset is required and must be finite number');\n        }\n        if (!isFinite(animationDuration) || animationDuration <= 0) {\n            throw new RangeError('animationDuration (optional) must be finite positive number');\n        }\n        const source = this._private__rightOffset;\n        const animationStart = performance.now();\n        this._private__model._internal_setTimeScaleAnimation({\n            _internal_finished: (time) => (time - animationStart) / animationDuration >= 1,\n            _internal_getPosition: (time) => {\n                const animationProgress = (time - animationStart) / animationDuration;\n                const finishAnimation = animationProgress >= 1;\n                return finishAnimation ? offset : source + (offset - source) * animationProgress;\n            },\n        });\n    }\n    _internal_update(newPoints, firstChangedPointIndex) {\n        this._private__visibleRangeInvalidated = true;\n        this._private__points = newPoints;\n        this._private__tickMarks._internal_setTimeScalePoints(newPoints, firstChangedPointIndex);\n        this._private__correctOffset();\n    }\n    _internal_visibleBarsChanged() {\n        return this._private__visibleBarsChanged;\n    }\n    _internal_logicalRangeChanged() {\n        return this._private__logicalRangeChanged;\n    }\n    _internal_optionsApplied() {\n        return this._private__optionsApplied;\n    }\n    _internal_baseIndex() {\n        // null is used to known that baseIndex is not set yet\n        // so in methods which should known whether it is set or not\n        // we should check field `_baseIndexOrNull` instead of getter `baseIndex()`\n        // see minRightOffset for example\n        return this._private__baseIndexOrNull || 0;\n    }\n    _internal_setVisibleRange(range) {\n        const length = range._internal_count();\n        this._private__setBarSpacing(this._private__width / length);\n        this._private__rightOffset = range._internal_right() - this._internal_baseIndex();\n        this._private__correctOffset();\n        this._private__visibleRangeInvalidated = true;\n        this._private__model._internal_recalculateAllPanes();\n        this._private__model._internal_lightUpdate();\n    }\n    _internal_fitContent() {\n        const first = this._private__firstIndex();\n        const last = this._private__lastIndex();\n        if (first === null || last === null) {\n            return;\n        }\n        this._internal_setVisibleRange(new RangeImpl(first, last + this._private__options.rightOffset));\n    }\n    _internal_setLogicalRange(range) {\n        const barRange = new RangeImpl(range.from, range.to);\n        this._internal_setVisibleRange(barRange);\n    }\n    _internal_formatDateTime(timeScalePoint) {\n        if (this._private__localizationOptions.timeFormatter !== undefined) {\n            return this._private__localizationOptions.timeFormatter(timeScalePoint._internal_originalTime);\n        }\n        return this._private__dateTimeFormatter._internal_format(new Date(timeScalePoint._internal_time._internal_timestamp * 1000));\n    }\n    _private__isAllScalingAndScrollingDisabled() {\n        const { handleScroll, handleScale } = this._private__model._internal_options();\n        return !handleScroll.horzTouchDrag\n            && !handleScroll.mouseWheel\n            && !handleScroll.pressedMouseMove\n            && !handleScroll.vertTouchDrag\n            && !handleScale.axisDoubleClickReset.time\n            && !handleScale.axisPressedMouseMove.time\n            && !handleScale.mouseWheel\n            && !handleScale.pinch;\n    }\n    _private__firstIndex() {\n        return this._private__points.length === 0 ? null : 0;\n    }\n    _private__lastIndex() {\n        return this._private__points.length === 0 ? null : (this._private__points.length - 1);\n    }\n    _private__rightOffsetForCoordinate(x) {\n        return (this._private__width - 1 - x) / this._private__barSpacing;\n    }\n    _private__coordinateToFloatIndex(x) {\n        const deltaFromRight = this._private__rightOffsetForCoordinate(x);\n        const baseIndex = this._internal_baseIndex();\n        const index = baseIndex + this._private__rightOffset - deltaFromRight;\n        // JavaScript uses very strange rounding\n        // we need rounding to avoid problems with calculation errors\n        return Math.round(index * 1000000) / 1000000;\n    }\n    _private__setBarSpacing(newBarSpacing) {\n        const oldBarSpacing = this._private__barSpacing;\n        this._private__barSpacing = newBarSpacing;\n        this._private__correctBarSpacing();\n        // this._barSpacing might be changed in _correctBarSpacing\n        if (oldBarSpacing !== this._private__barSpacing) {\n            this._private__visibleRangeInvalidated = true;\n            this._private__resetTimeMarksCache();\n        }\n    }\n    _private__updateVisibleRange() {\n        if (!this._private__visibleRangeInvalidated) {\n            return;\n        }\n        this._private__visibleRangeInvalidated = false;\n        if (this._internal_isEmpty()) {\n            this._private__setVisibleRange(TimeScaleVisibleRange._internal_invalid());\n            return;\n        }\n        const baseIndex = this._internal_baseIndex();\n        const newBarsLength = this._private__width / this._private__barSpacing;\n        const rightBorder = this._private__rightOffset + baseIndex;\n        const leftBorder = rightBorder - newBarsLength + 1;\n        const logicalRange = new RangeImpl(leftBorder, rightBorder);\n        this._private__setVisibleRange(new TimeScaleVisibleRange(logicalRange));\n    }\n    _private__correctBarSpacing() {\n        const minBarSpacing = this._private__minBarSpacing();\n        if (this._private__barSpacing < minBarSpacing) {\n            this._private__barSpacing = minBarSpacing;\n            this._private__visibleRangeInvalidated = true;\n        }\n        if (this._private__width !== 0) {\n            // make sure that this (1 / Constants.MinVisibleBarsCount) >= coeff in max bar spacing (it's 0.5 here)\n            const maxBarSpacing = this._private__width * 0.5;\n            if (this._private__barSpacing > maxBarSpacing) {\n                this._private__barSpacing = maxBarSpacing;\n                this._private__visibleRangeInvalidated = true;\n            }\n        }\n    }\n    _private__minBarSpacing() {\n        // if both options are enabled then limit bar spacing so that zooming-out is not possible\n        // if it would cause either the first or last points to move too far from an edge\n        if (this._private__options.fixLeftEdge && this._private__options.fixRightEdge && this._private__points.length !== 0) {\n            return this._private__width / this._private__points.length;\n        }\n        return this._private__options.minBarSpacing;\n    }\n    _private__correctOffset() {\n        // block scrolling of to future\n        const maxRightOffset = this._private__maxRightOffset();\n        if (this._private__rightOffset > maxRightOffset) {\n            this._private__rightOffset = maxRightOffset;\n            this._private__visibleRangeInvalidated = true;\n        }\n        // block scrolling of to past\n        const minRightOffset = this._private__minRightOffset();\n        if (minRightOffset !== null && this._private__rightOffset < minRightOffset) {\n            this._private__rightOffset = minRightOffset;\n            this._private__visibleRangeInvalidated = true;\n        }\n    }\n    _private__minRightOffset() {\n        const firstIndex = this._private__firstIndex();\n        const baseIndex = this._private__baseIndexOrNull;\n        if (firstIndex === null || baseIndex === null) {\n            return null;\n        }\n        const barsEstimation = this._private__options.fixLeftEdge\n            ? this._private__width / this._private__barSpacing\n            : Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n        return firstIndex - baseIndex - 1 + barsEstimation;\n    }\n    _private__maxRightOffset() {\n        return this._private__options.fixRightEdge\n            ? 0\n            : (this._private__width / this._private__barSpacing) - Math.min(2 /* Constants.MinVisibleBarsCount */, this._private__points.length);\n    }\n    _private__saveCommonTransitionsStartState() {\n        this._private__commonTransitionStartState = {\n            _internal_barSpacing: this._internal_barSpacing(),\n            _internal_rightOffset: this._internal_rightOffset(),\n        };\n    }\n    _private__clearCommonTransitionsStartState() {\n        this._private__commonTransitionStartState = null;\n    }\n    _private__formatLabel(tickMark) {\n        let formatter = this._private__formattedByWeight.get(tickMark._internal_weight);\n        if (formatter === undefined) {\n            formatter = new FormattedLabelsCache((mark) => {\n                return this._private__formatLabelImpl(mark);\n            });\n            this._private__formattedByWeight.set(tickMark._internal_weight, formatter);\n        }\n        return formatter._internal_format(tickMark);\n    }\n    _private__formatLabelImpl(tickMark) {\n        const tickMarkType = weightToTickMarkType(tickMark._internal_weight, this._private__options.timeVisible, this._private__options.secondsVisible);\n        if (this._private__options.tickMarkFormatter !== undefined) {\n            const tickMarkString = this._private__options.tickMarkFormatter(tickMark._internal_originalTime, tickMarkType, this._private__localizationOptions.locale);\n            if (tickMarkString !== null) {\n                return tickMarkString;\n            }\n        }\n        return defaultTickMarkFormatter(tickMark._internal_time, tickMarkType, this._private__localizationOptions.locale);\n    }\n    _private__setVisibleRange(newVisibleRange) {\n        const oldVisibleRange = this._private__visibleRange;\n        this._private__visibleRange = newVisibleRange;\n        if (!areRangesEqual(oldVisibleRange._internal_strictRange(), this._private__visibleRange._internal_strictRange())) {\n            this._private__visibleBarsChanged._internal_fire();\n        }\n        if (!areRangesEqual(oldVisibleRange._internal_logicalRange(), this._private__visibleRange._internal_logicalRange())) {\n            this._private__logicalRangeChanged._internal_fire();\n        }\n        // TODO: reset only coords in case when this._visibleBars has not been changed\n        this._private__resetTimeMarksCache();\n    }\n    _private__resetTimeMarksCache() {\n        this._private__timeMarksCache = null;\n    }\n    _private__invalidateTickMarks() {\n        this._private__resetTimeMarksCache();\n        this._private__formattedByWeight.clear();\n    }\n    _private__updateDateTimeFormatter() {\n        const dateFormat = this._private__localizationOptions.dateFormat;\n        if (this._private__options.timeVisible) {\n            this._private__dateTimeFormatter = new DateTimeFormatter({\n                _internal_dateFormat: dateFormat,\n                _internal_timeFormat: this._private__options.secondsVisible ? '%h:%m:%s' : '%h:%m',\n                _internal_dateTimeSeparator: '   ',\n                _internal_locale: this._private__localizationOptions.locale,\n            });\n        }\n        else {\n            this._private__dateTimeFormatter = new DateFormatter(dateFormat, this._private__localizationOptions.locale);\n        }\n    }\n    _private__doFixLeftEdge() {\n        if (!this._private__options.fixLeftEdge) {\n            return;\n        }\n        const firstIndex = this._private__firstIndex();\n        if (firstIndex === null) {\n            return;\n        }\n        const visibleRange = this._internal_visibleStrictRange();\n        if (visibleRange === null) {\n            return;\n        }\n        const delta = visibleRange._internal_left() - firstIndex;\n        if (delta < 0) {\n            const leftEdgeOffset = this._private__rightOffset - delta - 1;\n            this._internal_setRightOffset(leftEdgeOffset);\n        }\n        this._private__correctBarSpacing();\n    }\n    _private__doFixRightEdge() {\n        this._private__correctOffset();\n        this._private__correctBarSpacing();\n    }\n}\n// eslint-disable-next-line complexity\nfunction weightToTickMarkType(weight, timeVisible, secondsVisible) {\n    switch (weight) {\n        case 0 /* TickMarkWeight.LessThanSecond */:\n        case 10 /* TickMarkWeight.Second */:\n            return timeVisible\n                ? (secondsVisible ? 4 /* TickMarkType.TimeWithSeconds */ : 3 /* TickMarkType.Time */)\n                : 2 /* TickMarkType.DayOfMonth */;\n        case 20 /* TickMarkWeight.Minute1 */:\n        case 21 /* TickMarkWeight.Minute5 */:\n        case 22 /* TickMarkWeight.Minute30 */:\n        case 30 /* TickMarkWeight.Hour1 */:\n        case 31 /* TickMarkWeight.Hour3 */:\n        case 32 /* TickMarkWeight.Hour6 */:\n        case 33 /* TickMarkWeight.Hour12 */:\n            return timeVisible ? 3 /* TickMarkType.Time */ : 2 /* TickMarkType.DayOfMonth */;\n        case 50 /* TickMarkWeight.Day */:\n            return 2 /* TickMarkType.DayOfMonth */;\n        case 60 /* TickMarkWeight.Month */:\n            return 1 /* TickMarkType.Month */;\n        case 70 /* TickMarkWeight.Year */:\n            return 0 /* TickMarkType.Year */;\n    }\n}\n\nclass WatermarkRenderer extends MediaCoordinatesPaneRenderer {\n    constructor(data) {\n        super();\n        this._private__metricsCache = new Map();\n        this._private__data = data;\n    }\n    _internal__drawImpl(renderingScope) { }\n    _internal__drawBackgroundImpl(renderingScope) {\n        if (!this._private__data._internal_visible) {\n            return;\n        }\n        const { context: ctx, mediaSize } = renderingScope;\n        let textHeight = 0;\n        for (const line of this._private__data._internal_lines) {\n            if (line._internal_text.length === 0) {\n                continue;\n            }\n            ctx.font = line._internal_font;\n            const textWidth = this._private__metrics(ctx, line._internal_text);\n            if (textWidth > mediaSize.width) {\n                line._internal_zoom = mediaSize.width / textWidth;\n            }\n            else {\n                line._internal_zoom = 1;\n            }\n            textHeight += line._internal_lineHeight * line._internal_zoom;\n        }\n        let vertOffset = 0;\n        switch (this._private__data._internal_vertAlign) {\n            case 'top':\n                vertOffset = 0;\n                break;\n            case 'center':\n                vertOffset = Math.max((mediaSize.height - textHeight) / 2, 0);\n                break;\n            case 'bottom':\n                vertOffset = Math.max((mediaSize.height - textHeight), 0);\n                break;\n        }\n        ctx.fillStyle = this._private__data._internal_color;\n        for (const line of this._private__data._internal_lines) {\n            ctx.save();\n            let horzOffset = 0;\n            switch (this._private__data._internal_horzAlign) {\n                case 'left':\n                    ctx.textAlign = 'left';\n                    horzOffset = line._internal_lineHeight / 2;\n                    break;\n                case 'center':\n                    ctx.textAlign = 'center';\n                    horzOffset = mediaSize.width / 2;\n                    break;\n                case 'right':\n                    ctx.textAlign = 'right';\n                    horzOffset = mediaSize.width - 1 - line._internal_lineHeight / 2;\n                    break;\n            }\n            ctx.translate(horzOffset, vertOffset);\n            ctx.textBaseline = 'top';\n            ctx.font = line._internal_font;\n            ctx.scale(line._internal_zoom, line._internal_zoom);\n            ctx.fillText(line._internal_text, 0, line._internal_vertOffset);\n            ctx.restore();\n            vertOffset += line._internal_lineHeight * line._internal_zoom;\n        }\n    }\n    _private__metrics(ctx, text) {\n        const fontCache = this._private__fontCache(ctx.font);\n        let result = fontCache.get(text);\n        if (result === undefined) {\n            result = ctx.measureText(text).width;\n            fontCache.set(text, result);\n        }\n        return result;\n    }\n    _private__fontCache(font) {\n        let fontCache = this._private__metricsCache.get(font);\n        if (fontCache === undefined) {\n            fontCache = new Map();\n            this._private__metricsCache.set(font, fontCache);\n        }\n        return fontCache;\n    }\n}\n\nclass WatermarkPaneView {\n    constructor(source) {\n        this._private__invalidated = true;\n        this._private__rendererData = {\n            _internal_visible: false,\n            _internal_color: '',\n            _internal_lines: [],\n            _internal_vertAlign: 'center',\n            _internal_horzAlign: 'center',\n        };\n        this._private__renderer = new WatermarkRenderer(this._private__rendererData);\n        this._private__source = source;\n    }\n    _internal_update() {\n        this._private__invalidated = true;\n    }\n    _internal_renderer() {\n        if (this._private__invalidated) {\n            this._private__updateImpl();\n            this._private__invalidated = false;\n        }\n        return this._private__renderer;\n    }\n    _private__updateImpl() {\n        const options = this._private__source._internal_options();\n        const data = this._private__rendererData;\n        data._internal_visible = options.visible;\n        if (!data._internal_visible) {\n            return;\n        }\n        data._internal_color = options.color;\n        data._internal_horzAlign = options.horzAlign;\n        data._internal_vertAlign = options.vertAlign;\n        data._internal_lines = [\n            {\n                _internal_text: options.text,\n                _internal_font: makeFont(options.fontSize, options.fontFamily, options.fontStyle),\n                _internal_lineHeight: options.fontSize * 1.2,\n                _internal_vertOffset: 0,\n                _internal_zoom: 0,\n            },\n        ];\n    }\n}\n\nclass Watermark extends DataSource {\n    constructor(model, options) {\n        super();\n        this._private__options = options;\n        this._private__paneView = new WatermarkPaneView(this);\n    }\n    _internal_priceAxisViews() {\n        return [];\n    }\n    _internal_paneViews() {\n        return [this._private__paneView];\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_updateAllViews() {\n        this._private__paneView._internal_update();\n    }\n}\n\n/// <reference types=\"_build-time-constants\" />\n/**\n * Determine how to exit the tracking mode.\n *\n * By default, mobile users will long press to deactivate the scroll and have the ability to check values and dates.\n * Another press is required to activate the scroll, be able to move left/right, zoom, etc.\n */\nvar TrackingModeExitMode;\n(function (TrackingModeExitMode) {\n    /**\n     * Tracking Mode will be deactivated on touch end event.\n     */\n    TrackingModeExitMode[TrackingModeExitMode[\"OnTouchEnd\"] = 0] = \"OnTouchEnd\";\n    /**\n     * Tracking Mode will be deactivated on the next tap event.\n     */\n    TrackingModeExitMode[TrackingModeExitMode[\"OnNextTap\"] = 1] = \"OnNextTap\";\n})(TrackingModeExitMode || (TrackingModeExitMode = {}));\nclass ChartModel {\n    constructor(invalidateHandler, options) {\n        this._private__panes = [];\n        this._private__serieses = [];\n        this._private__width = 0;\n        this._private__hoveredSource = null;\n        this._private__priceScalesOptionsChanged = new Delegate();\n        this._private__crosshairMoved = new Delegate();\n        this._private__gradientColorsCache = null;\n        this._private__invalidateHandler = invalidateHandler;\n        this._private__options = options;\n        this._private__rendererOptionsProvider = new PriceAxisRendererOptionsProvider(this);\n        this._private__timeScale = new TimeScale(this, options.timeScale, this._private__options.localization);\n        this._private__crosshair = new Crosshair(this, options.crosshair);\n        this._private__magnet = new Magnet(options.crosshair);\n        this._private__watermark = new Watermark(this, options.watermark);\n        this._internal_createPane();\n        this._private__panes[0]._internal_setStretchFactor(DEFAULT_STRETCH_FACTOR * 2);\n        this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n        this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n    }\n    _internal_fullUpdate() {\n        this._private__invalidate(InvalidateMask._internal_full());\n    }\n    _internal_lightUpdate() {\n        this._private__invalidate(InvalidateMask._internal_light());\n    }\n    _internal_cursorUpdate() {\n        this._private__invalidate(new InvalidateMask(1 /* InvalidationLevel.Cursor */));\n    }\n    _internal_updateSource(source) {\n        const inv = this._private__invalidationMaskForSource(source);\n        this._private__invalidate(inv);\n    }\n    _internal_hoveredSource() {\n        return this._private__hoveredSource;\n    }\n    _internal_setHoveredSource(source) {\n        const prevSource = this._private__hoveredSource;\n        this._private__hoveredSource = source;\n        if (prevSource !== null) {\n            this._internal_updateSource(prevSource._internal_source);\n        }\n        if (source !== null) {\n            this._internal_updateSource(source._internal_source);\n        }\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_applyOptions(options) {\n        merge(this._private__options, options);\n        this._private__panes.forEach((p) => p._internal_applyScaleOptions(options));\n        if (options.timeScale !== undefined) {\n            this._private__timeScale._internal_applyOptions(options.timeScale);\n        }\n        if (options.localization !== undefined) {\n            this._private__timeScale._internal_applyLocalizationOptions(options.localization);\n        }\n        if (options.leftPriceScale || options.rightPriceScale) {\n            this._private__priceScalesOptionsChanged._internal_fire();\n        }\n        this._private__backgroundTopColor = this._private__getBackgroundColor(0 /* BackgroundColorSide.Top */);\n        this._private__backgroundBottomColor = this._private__getBackgroundColor(1 /* BackgroundColorSide.Bottom */);\n        this._internal_fullUpdate();\n    }\n    _internal_applyPriceScaleOptions(priceScaleId, options) {\n        if (priceScaleId === \"left\" /* DefaultPriceScaleId.Left */) {\n            this._internal_applyOptions({\n                leftPriceScale: options,\n            });\n            return;\n        }\n        else if (priceScaleId === \"right\" /* DefaultPriceScaleId.Right */) {\n            this._internal_applyOptions({\n                rightPriceScale: options,\n            });\n            return;\n        }\n        const res = this._internal_findPriceScale(priceScaleId);\n        if (res === null) {\n            {\n                throw new Error(`Trying to apply price scale options with incorrect ID: ${priceScaleId}`);\n            }\n        }\n        res._internal_priceScale._internal_applyOptions(options);\n        this._private__priceScalesOptionsChanged._internal_fire();\n    }\n    _internal_findPriceScale(priceScaleId) {\n        for (const pane of this._private__panes) {\n            const priceScale = pane._internal_priceScaleById(priceScaleId);\n            if (priceScale !== null) {\n                return {\n                    _internal_pane: pane,\n                    _internal_priceScale: priceScale,\n                };\n            }\n        }\n        return null;\n    }\n    _internal_timeScale() {\n        return this._private__timeScale;\n    }\n    _internal_panes() {\n        return this._private__panes;\n    }\n    _internal_watermarkSource() {\n        return this._private__watermark;\n    }\n    _internal_crosshairSource() {\n        return this._private__crosshair;\n    }\n    _internal_crosshairMoved() {\n        return this._private__crosshairMoved;\n    }\n    _internal_setPaneHeight(pane, height) {\n        pane._internal_setHeight(height);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_setWidth(width) {\n        this._private__width = width;\n        this._private__timeScale._internal_setWidth(this._private__width);\n        this._private__panes.forEach((pane) => pane._internal_setWidth(width));\n        this._internal_recalculateAllPanes();\n    }\n    _internal_createPane(index) {\n        const pane = new Pane(this._private__timeScale, this);\n        if (index !== undefined) {\n            this._private__panes.splice(index, 0, pane);\n        }\n        else {\n            // adding to the end - common case\n            this._private__panes.push(pane);\n        }\n        const actualIndex = (index === undefined) ? this._private__panes.length - 1 : index;\n        // we always do autoscaling on the creation\n        // if autoscale option is true, it is ok, just recalculate by invalidation mask\n        // if autoscale option is false, autoscale anyway on the first draw\n        // also there is a scenario when autoscale is true in constructor and false later on applyOptions\n        const mask = InvalidateMask._internal_full();\n        mask._internal_invalidatePane(actualIndex, {\n            _internal_level: 0 /* InvalidationLevel.None */,\n            _internal_autoScale: true,\n        });\n        this._private__invalidate(mask);\n        return pane;\n    }\n    _internal_startScalePrice(pane, priceScale, x) {\n        pane._internal_startScalePrice(priceScale, x);\n    }\n    _internal_scalePriceTo(pane, priceScale, x) {\n        pane._internal_scalePriceTo(priceScale, x);\n        this._internal_updateCrosshair();\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_endScalePrice(pane, priceScale) {\n        pane._internal_endScalePrice(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_startScrollPrice(pane, priceScale, x) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_startScrollPrice(priceScale, x);\n    }\n    _internal_scrollPriceTo(pane, priceScale, x) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_scrollPriceTo(priceScale, x);\n        this._internal_updateCrosshair();\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_endScrollPrice(pane, priceScale) {\n        if (priceScale._internal_isAutoScale()) {\n            return;\n        }\n        pane._internal_endScrollPrice(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_resetPriceScale(pane, priceScale) {\n        pane._internal_resetPriceScale(priceScale);\n        this._private__invalidate(this._private__paneInvalidationMask(pane, 2 /* InvalidationLevel.Light */));\n    }\n    _internal_startScaleTime(position) {\n        this._private__timeScale._internal_startScale(position);\n    }\n    /**\n     * Zoom in/out the chart (depends on scale value).\n     *\n     * @param pointX - X coordinate of the point to apply the zoom (the point which should stay on its place)\n     * @param scale - Zoom value. Negative value means zoom out, positive - zoom in.\n     */\n    _internal_zoomTime(pointX, scale) {\n        const timeScale = this._internal_timeScale();\n        if (timeScale._internal_isEmpty() || scale === 0) {\n            return;\n        }\n        const timeScaleWidth = timeScale._internal_width();\n        pointX = Math.max(1, Math.min(pointX, timeScaleWidth));\n        timeScale._internal_zoom(pointX, scale);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_scrollChart(x) {\n        this._internal_startScrollTime(0);\n        this._internal_scrollTimeTo(x);\n        this._internal_endScrollTime();\n    }\n    _internal_scaleTimeTo(x) {\n        this._private__timeScale._internal_scaleTo(x);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_endScaleTime() {\n        this._private__timeScale._internal_endScale();\n        this._internal_lightUpdate();\n    }\n    _internal_startScrollTime(x) {\n        this._private__timeScale._internal_startScroll(x);\n    }\n    _internal_scrollTimeTo(x) {\n        this._private__timeScale._internal_scrollTo(x);\n        this._internal_recalculateAllPanes();\n    }\n    _internal_endScrollTime() {\n        this._private__timeScale._internal_endScroll();\n        this._internal_lightUpdate();\n    }\n    _internal_serieses() {\n        return this._private__serieses;\n    }\n    _internal_setAndSaveCurrentPosition(x, y, event, pane) {\n        this._private__crosshair._internal_saveOriginCoord(x, y);\n        let price = NaN;\n        let index = this._private__timeScale._internal_coordinateToIndex(x);\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        if (visibleBars !== null) {\n            index = Math.min(Math.max(visibleBars._internal_left(), index), visibleBars._internal_right());\n        }\n        const priceScale = pane._internal_defaultPriceScale();\n        const firstValue = priceScale._internal_firstValue();\n        if (firstValue !== null) {\n            price = priceScale._internal_coordinateToPrice(y, firstValue);\n        }\n        price = this._private__magnet._internal_align(price, index, pane);\n        this._private__crosshair._internal_setPosition(index, price, pane);\n        this._internal_cursorUpdate();\n        this._private__crosshairMoved._internal_fire(this._private__crosshair._internal_appliedIndex(), { x, y }, event);\n    }\n    _internal_clearCurrentPosition() {\n        const crosshair = this._internal_crosshairSource();\n        crosshair._internal_clearPosition();\n        this._internal_cursorUpdate();\n        this._private__crosshairMoved._internal_fire(null, null, null);\n    }\n    _internal_updateCrosshair() {\n        // apply magnet\n        const pane = this._private__crosshair._internal_pane();\n        if (pane !== null) {\n            const x = this._private__crosshair._internal_originCoordX();\n            const y = this._private__crosshair._internal_originCoordY();\n            this._internal_setAndSaveCurrentPosition(x, y, null, pane);\n        }\n        this._private__crosshair._internal_updateAllViews();\n    }\n    _internal_updateTimeScale(newBaseIndex, newPoints, firstChangedPointIndex) {\n        const oldFirstTime = this._private__timeScale._internal_indexToTime(0);\n        if (newPoints !== undefined && firstChangedPointIndex !== undefined) {\n            this._private__timeScale._internal_update(newPoints, firstChangedPointIndex);\n        }\n        const newFirstTime = this._private__timeScale._internal_indexToTime(0);\n        const currentBaseIndex = this._private__timeScale._internal_baseIndex();\n        const visibleBars = this._private__timeScale._internal_visibleStrictRange();\n        // if time scale cannot return current visible bars range (e.g. time scale has zero-width)\n        // then we do not need to update right offset to shift visible bars range to have the same right offset as we have before new bar\n        // (and actually we cannot)\n        if (visibleBars !== null && oldFirstTime !== null && newFirstTime !== null) {\n            const isLastSeriesBarVisible = visibleBars._internal_contains(currentBaseIndex);\n            const isLeftBarShiftToLeft = oldFirstTime._internal_timestamp > newFirstTime._internal_timestamp;\n            const isSeriesPointsAdded = newBaseIndex !== null && newBaseIndex > currentBaseIndex;\n            const isSeriesPointsAddedToRight = isSeriesPointsAdded && !isLeftBarShiftToLeft;\n            const needShiftVisibleRangeOnNewBar = isLastSeriesBarVisible && this._private__timeScale._internal_options().shiftVisibleRangeOnNewBar;\n            if (isSeriesPointsAddedToRight && !needShiftVisibleRangeOnNewBar) {\n                const compensationShift = newBaseIndex - currentBaseIndex;\n                this._private__timeScale._internal_setRightOffset(this._private__timeScale._internal_rightOffset() - compensationShift);\n            }\n        }\n        this._private__timeScale._internal_setBaseIndex(newBaseIndex);\n    }\n    _internal_recalculatePane(pane) {\n        if (pane !== null) {\n            pane._internal_recalculate();\n        }\n    }\n    _internal_paneForSource(source) {\n        const pane = this._private__panes.find((p) => p._internal_orderedSources().includes(source));\n        return pane === undefined ? null : pane;\n    }\n    _internal_recalculateAllPanes() {\n        this._private__watermark._internal_updateAllViews();\n        this._private__panes.forEach((p) => p._internal_recalculate());\n        this._internal_updateCrosshair();\n    }\n    _internal_destroy() {\n        this._private__panes.forEach((p) => p._internal_destroy());\n        this._private__panes.length = 0;\n        // to avoid memleaks\n        this._private__options.localization.priceFormatter = undefined;\n        this._private__options.localization.timeFormatter = undefined;\n    }\n    _internal_rendererOptionsProvider() {\n        return this._private__rendererOptionsProvider;\n    }\n    _internal_priceAxisRendererOptions() {\n        return this._private__rendererOptionsProvider._internal_options();\n    }\n    _internal_priceScalesOptionsChanged() {\n        return this._private__priceScalesOptionsChanged;\n    }\n    _internal_createSeries(seriesType, options) {\n        const pane = this._private__panes[0];\n        const series = this._private__createSeries(options, seriesType, pane);\n        this._private__serieses.push(series);\n        if (this._private__serieses.length === 1) {\n            // call fullUpdate to recalculate chart's parts geometry\n            this._internal_fullUpdate();\n        }\n        else {\n            this._internal_lightUpdate();\n        }\n        return series;\n    }\n    _internal_removeSeries(series) {\n        const pane = this._internal_paneForSource(series);\n        const seriesIndex = this._private__serieses.indexOf(series);\n        assert(seriesIndex !== -1, 'Series not found');\n        this._private__serieses.splice(seriesIndex, 1);\n        ensureNotNull(pane)._internal_removeDataSource(series);\n        if (series._internal_destroy) {\n            series._internal_destroy();\n        }\n    }\n    _internal_moveSeriesToScale(series, targetScaleId) {\n        const pane = ensureNotNull(this._internal_paneForSource(series));\n        pane._internal_removeDataSource(series);\n        // check if targetScaleId exists\n        const target = this._internal_findPriceScale(targetScaleId);\n        if (target === null) {\n            // new scale on the same pane\n            const zOrder = series._internal_zorder();\n            pane._internal_addDataSource(series, targetScaleId, zOrder);\n        }\n        else {\n            // if move to the new scale of the same pane, keep zorder\n            // if move to new pane\n            const zOrder = (target._internal_pane === pane) ? series._internal_zorder() : undefined;\n            target._internal_pane._internal_addDataSource(series, targetScaleId, zOrder);\n        }\n    }\n    _internal_fitContent() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setFitContent();\n        this._private__invalidate(mask);\n    }\n    _internal_setTargetLogicalRange(range) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_applyRange(range);\n        this._private__invalidate(mask);\n    }\n    _internal_resetTimeScale() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_resetTimeScale();\n        this._private__invalidate(mask);\n    }\n    _internal_setBarSpacing(spacing) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setBarSpacing(spacing);\n        this._private__invalidate(mask);\n    }\n    _internal_setRightOffset(offset) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setRightOffset(offset);\n        this._private__invalidate(mask);\n    }\n    _internal_setTimeScaleAnimation(animation) {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_setTimeScaleAnimation(animation);\n        this._private__invalidate(mask);\n    }\n    _internal_stopTimeScaleAnimation() {\n        const mask = InvalidateMask._internal_light();\n        mask._internal_stopTimeScaleAnimation();\n        this._private__invalidate(mask);\n    }\n    _internal_defaultVisiblePriceScaleId() {\n        return this._private__options.rightPriceScale.visible ? \"right\" /* DefaultPriceScaleId.Right */ : \"left\" /* DefaultPriceScaleId.Left */;\n    }\n    _internal_backgroundBottomColor() {\n        return this._private__backgroundBottomColor;\n    }\n    _internal_backgroundTopColor() {\n        return this._private__backgroundTopColor;\n    }\n    _internal_backgroundColorAtYPercentFromTop(percent) {\n        const bottomColor = this._private__backgroundBottomColor;\n        const topColor = this._private__backgroundTopColor;\n        if (bottomColor === topColor) {\n            // solid background\n            return bottomColor;\n        }\n        // gradient background\n        // percent should be from 0 to 100 (we're using only integer values to make cache more efficient)\n        percent = Math.max(0, Math.min(100, Math.round(percent * 100)));\n        if (this._private__gradientColorsCache === null ||\n            this._private__gradientColorsCache._internal_topColor !== topColor || this._private__gradientColorsCache._internal_bottomColor !== bottomColor) {\n            this._private__gradientColorsCache = {\n                _internal_topColor: topColor,\n                _internal_bottomColor: bottomColor,\n                _internal_colors: new Map(),\n            };\n        }\n        else {\n            const cachedValue = this._private__gradientColorsCache._internal_colors.get(percent);\n            if (cachedValue !== undefined) {\n                return cachedValue;\n            }\n        }\n        const result = gradientColorAtPercent(topColor, bottomColor, percent / 100);\n        this._private__gradientColorsCache._internal_colors.set(percent, result);\n        return result;\n    }\n    _private__paneInvalidationMask(pane, level) {\n        const inv = new InvalidateMask(level);\n        if (pane !== null) {\n            const index = this._private__panes.indexOf(pane);\n            inv._internal_invalidatePane(index, {\n                _internal_level: level,\n            });\n        }\n        return inv;\n    }\n    _private__invalidationMaskForSource(source, invalidateType) {\n        if (invalidateType === undefined) {\n            invalidateType = 2 /* InvalidationLevel.Light */;\n        }\n        return this._private__paneInvalidationMask(this._internal_paneForSource(source), invalidateType);\n    }\n    _private__invalidate(mask) {\n        if (this._private__invalidateHandler) {\n            this._private__invalidateHandler(mask);\n        }\n        this._private__panes.forEach((pane) => pane._internal_grid()._internal_paneView()._internal_update());\n    }\n    _private__createSeries(options, seriesType, pane) {\n        const series = new Series(this, options, seriesType);\n        const targetScaleId = options.priceScaleId !== undefined ? options.priceScaleId : this._internal_defaultVisiblePriceScaleId();\n        pane._internal_addDataSource(series, targetScaleId);\n        if (!isDefaultPriceScale(targetScaleId)) {\n            // let's apply that options again to apply margins\n            series._internal_applyOptions(options);\n        }\n        return series;\n    }\n    _private__getBackgroundColor(side) {\n        const layoutOptions = this._private__options.layout;\n        if (layoutOptions.background.type === \"gradient\" /* ColorType.VerticalGradient */) {\n            return side === 0 /* BackgroundColorSide.Top */ ?\n                layoutOptions.background.topColor :\n                layoutOptions.background.bottomColor;\n        }\n        return layoutOptions.background.color;\n    }\n}\n\nfunction fillUpDownCandlesticksColors(options) {\n    if (options.borderColor !== undefined) {\n        options.borderUpColor = options.borderColor;\n        options.borderDownColor = options.borderColor;\n    }\n    if (options.wickColor !== undefined) {\n        options.wickUpColor = options.wickColor;\n        options.wickDownColor = options.wickColor;\n    }\n}\n/**\n * Represents the type of the last price animation for series such as area or line.\n */\nvar LastPriceAnimationMode;\n(function (LastPriceAnimationMode) {\n    /**\n     * Animation is always disabled\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"Disabled\"] = 0] = \"Disabled\";\n    /**\n     * Animation is always enabled.\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"Continuous\"] = 1] = \"Continuous\";\n    /**\n     * Animation is active after new data.\n     */\n    LastPriceAnimationMode[LastPriceAnimationMode[\"OnDataUpdate\"] = 2] = \"OnDataUpdate\";\n})(LastPriceAnimationMode || (LastPriceAnimationMode = {}));\nfunction precisionByMinMove(minMove) {\n    if (minMove >= 1) {\n        return 0;\n    }\n    let i = 0;\n    for (; i < 8; i++) {\n        const intPart = Math.round(minMove);\n        const fractPart = Math.abs(intPart - minMove);\n        if (fractPart < 1e-8) {\n            return i;\n        }\n        minMove = minMove * 10;\n    }\n    return i;\n}\n/**\n * Represents the source of data to be used for the horizontal price line.\n */\nvar PriceLineSource;\n(function (PriceLineSource) {\n    /**\n     * Use the last bar data.\n     */\n    PriceLineSource[PriceLineSource[\"LastBar\"] = 0] = \"LastBar\";\n    /**\n     * Use the last visible data of the chart viewport.\n     */\n    PriceLineSource[PriceLineSource[\"LastVisible\"] = 1] = \"LastVisible\";\n})(PriceLineSource || (PriceLineSource = {}));\n\n/**\n * Represents a type of color.\n */\nvar ColorType;\n(function (ColorType) {\n    /** Solid color */\n    ColorType[\"Solid\"] = \"solid\";\n    /** Vertical gradient color */\n    ColorType[\"VerticalGradient\"] = \"gradient\";\n})(ColorType || (ColorType = {}));\n\n/**\n * Check if a time value is a business day object.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link BusinessDay} object, false otherwise.\n */\nfunction isBusinessDay(time) {\n    return !isNumber(time) && !isString(time);\n}\n/**\n * Check if a time value is a UTC timestamp number.\n *\n * @param time - The time to check.\n * @returns `true` if `time` is a {@link UTCTimestamp} number, false otherwise.\n */\nfunction isUTCTimestamp(time) {\n    return isNumber(time);\n}\nfunction isWhitespaceData(data) {\n    return data.open === undefined && data.value === undefined;\n}\nfunction isFulfilledData(data) {\n    return (data.open !== undefined ||\n        data.value !== undefined);\n}\n\n/**\n * When you're trying to use the library in server-side context (for instance in SSR)\n * you don't have some browser-specific variables like navigator or window\n * and if the library will use them on the top level of the library\n * the import will fail due ReferenceError\n * thus, this allows use the navigator on the top level and being imported in server-side context as well\n * See issue #446\n */\n// eslint-disable-next-line @typescript-eslint/tslint/config\nconst isRunningOnClientSide = typeof window !== 'undefined';\n\nfunction isFF() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    return window.navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n}\nfunction isIOS() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    return /iPhone|iPad|iPod/.test(window.navigator.platform);\n}\nfunction isChrome() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    return window.chrome !== undefined;\n}\n// Determine whether the browser is running on windows.\nfunction isWindows() {\n    var _a;\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    // more accurate if available\n    if ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.userAgentData) === null || _a === void 0 ? void 0 : _a.platform) {\n        return navigator.userAgentData.platform === 'Windows';\n    }\n    return navigator.userAgent.toLowerCase().indexOf('win') >= 0;\n}\n// Determine whether the browser is Chromium based.\nfunction isChromiumBased() {\n    if (!isRunningOnClientSide) {\n        return false;\n    }\n    if (!navigator.userAgentData) {\n        return false;\n    }\n    return navigator.userAgentData.brands.some((brand) => {\n        return brand.brand.includes('Chromium');\n    });\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction warn(msg) {\n    {\n        // eslint-disable-next-line no-console\n        console.warn(msg);\n    }\n}\n\n// on Hi-DPI CSS size * Device Pixel Ratio should be integer to avoid smoothing\n// For chart widget we decrease the size because we must be inside container.\n// For time axis this is not important, since it just affects space for pane widgets\nfunction suggestChartSize(originalSize) {\n    const integerWidth = Math.floor(originalSize.width);\n    const integerHeight = Math.floor(originalSize.height);\n    const width = integerWidth - (integerWidth % 2);\n    const height = integerHeight - (integerHeight % 2);\n    return size$1({ width, height });\n}\nfunction suggestTimeScaleHeight(originalHeight) {\n    return originalHeight + (originalHeight % 2);\n}\nfunction suggestPriceScaleWidth(originalWidth) {\n    return originalWidth + (originalWidth % 2);\n}\n\nfunction distanceBetweenPoints(pos1, pos2) {\n    return pos1._internal_position - pos2._internal_position;\n}\nfunction speedPxPerMSec(pos1, pos2, maxSpeed) {\n    const speed = (pos1._internal_position - pos2._internal_position) / (pos1._internal_time - pos2._internal_time);\n    return Math.sign(speed) * Math.min(Math.abs(speed), maxSpeed);\n}\nfunction durationMSec(speed, dumpingCoeff) {\n    const lnDumpingCoeff = Math.log(dumpingCoeff);\n    return Math.log((1 /* Constants.EpsilonDistance */ * lnDumpingCoeff) / -speed) / (lnDumpingCoeff);\n}\nclass KineticAnimation {\n    constructor(minSpeed, maxSpeed, dumpingCoeff, minMove) {\n        this._private__position1 = null;\n        this._private__position2 = null;\n        this._private__position3 = null;\n        this._private__position4 = null;\n        this._private__animationStartPosition = null;\n        this._private__durationMsecs = 0;\n        this._private__speedPxPerMsec = 0;\n        this._private__minSpeed = minSpeed;\n        this._private__maxSpeed = maxSpeed;\n        this._private__dumpingCoeff = dumpingCoeff;\n        this._private__minMove = minMove;\n    }\n    _internal_addPosition(position, time) {\n        if (this._private__position1 !== null) {\n            if (this._private__position1._internal_time === time) {\n                this._private__position1._internal_position = position;\n                return;\n            }\n            if (Math.abs(this._private__position1._internal_position - position) < this._private__minMove) {\n                return;\n            }\n        }\n        this._private__position4 = this._private__position3;\n        this._private__position3 = this._private__position2;\n        this._private__position2 = this._private__position1;\n        this._private__position1 = { _internal_time: time, _internal_position: position };\n    }\n    _internal_start(position, time) {\n        if (this._private__position1 === null || this._private__position2 === null) {\n            return;\n        }\n        if (time - this._private__position1._internal_time > 50 /* Constants.MaxStartDelay */) {\n            return;\n        }\n        // To calculate all the rest parameters we should calculate the speed af first\n        let totalDistance = 0;\n        const speed1 = speedPxPerMSec(this._private__position1, this._private__position2, this._private__maxSpeed);\n        const distance1 = distanceBetweenPoints(this._private__position1, this._private__position2);\n        // We're calculating weighted average speed\n        // Than more distance for a segment, than more its weight\n        const speedItems = [speed1];\n        const distanceItems = [distance1];\n        totalDistance += distance1;\n        if (this._private__position3 !== null) {\n            const speed2 = speedPxPerMSec(this._private__position2, this._private__position3, this._private__maxSpeed);\n            // stop at this moment if direction of the segment is opposite\n            if (Math.sign(speed2) === Math.sign(speed1)) {\n                const distance2 = distanceBetweenPoints(this._private__position2, this._private__position3);\n                speedItems.push(speed2);\n                distanceItems.push(distance2);\n                totalDistance += distance2;\n                if (this._private__position4 !== null) {\n                    const speed3 = speedPxPerMSec(this._private__position3, this._private__position4, this._private__maxSpeed);\n                    if (Math.sign(speed3) === Math.sign(speed1)) {\n                        const distance3 = distanceBetweenPoints(this._private__position3, this._private__position4);\n                        speedItems.push(speed3);\n                        distanceItems.push(distance3);\n                        totalDistance += distance3;\n                    }\n                }\n            }\n        }\n        let resultSpeed = 0;\n        for (let i = 0; i < speedItems.length; ++i) {\n            resultSpeed += distanceItems[i] / totalDistance * speedItems[i];\n        }\n        if (Math.abs(resultSpeed) < this._private__minSpeed) {\n            return;\n        }\n        this._private__animationStartPosition = { _internal_position: position, _internal_time: time };\n        this._private__speedPxPerMsec = resultSpeed;\n        this._private__durationMsecs = durationMSec(Math.abs(resultSpeed), this._private__dumpingCoeff);\n    }\n    _internal_getPosition(time) {\n        const startPosition = ensureNotNull(this._private__animationStartPosition);\n        const durationMsecs = time - startPosition._internal_time;\n        return startPosition._internal_position + this._private__speedPxPerMsec * (Math.pow(this._private__dumpingCoeff, durationMsecs) - 1) / (Math.log(this._private__dumpingCoeff));\n    }\n    _internal_finished(time) {\n        return this._private__animationStartPosition === null || this._private__progressDuration(time) === this._private__durationMsecs;\n    }\n    _private__progressDuration(time) {\n        const startPosition = ensureNotNull(this._private__animationStartPosition);\n        const progress = time - startPosition._internal_time;\n        return Math.min(progress, this._private__durationMsecs);\n    }\n}\n\nfunction createBoundCanvas(parentElement, size) {\n    const doc = ensureNotNull(parentElement.ownerDocument);\n    const canvas = doc.createElement('canvas');\n    parentElement.appendChild(canvas);\n    const binding = bindCanvasElementBitmapSizeTo(canvas, {\n        type: 'device-pixel-content-box',\n        options: {\n            allowResizeObserver: false,\n        },\n        transform: (bitmapSize, canvasElementClientSize) => ({\n            width: Math.max(bitmapSize.width, canvasElementClientSize.width),\n            height: Math.max(bitmapSize.height, canvasElementClientSize.height),\n        }),\n    });\n    binding.resizeCanvasElement(size);\n    return binding;\n}\n\nfunction preventScrollByWheelClick(el) {\n    if (!isChrome()) {\n        return;\n    }\n    el.addEventListener('mousedown', (e) => {\n        if (e.button === 1 /* MouseEventButton.Middle */) {\n            // prevent incorrect scrolling event\n            e.preventDefault();\n            return false;\n        }\n        return undefined;\n    });\n}\n\n// TODO: get rid of a lot of boolean flags, probably we should replace it with some enum\nclass MouseEventHandler {\n    constructor(target, handler, options) {\n        this._private__clickCount = 0;\n        this._private__clickTimeoutId = null;\n        this._private__clickPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n        this._private__tapCount = 0;\n        this._private__tapTimeoutId = null;\n        this._private__tapPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n        this._private__longTapTimeoutId = null;\n        this._private__longTapActive = false;\n        this._private__mouseMoveStartPosition = null;\n        this._private__touchMoveStartPosition = null;\n        this._private__touchMoveExceededManhattanDistance = false;\n        this._private__cancelClick = false;\n        this._private__cancelTap = false;\n        this._private__unsubscribeOutsideMouseEvents = null;\n        this._private__unsubscribeOutsideTouchEvents = null;\n        this._private__unsubscribeMobileSafariEvents = null;\n        this._private__unsubscribeMousemove = null;\n        this._private__unsubscribeRootMouseEvents = null;\n        this._private__unsubscribeRootTouchEvents = null;\n        this._private__startPinchMiddlePoint = null;\n        this._private__startPinchDistance = 0;\n        this._private__pinchPrevented = false;\n        this._private__preventTouchDragProcess = false;\n        this._private__mousePressed = false;\n        this._private__lastTouchEventTimeStamp = 0;\n        // for touchstart/touchmove/touchend events we handle only first touch\n        // i.e. we don't support several active touches at the same time (except pinch event)\n        this._private__activeTouchId = null;\n        // accept all mouse leave events if it's not an iOS device\n        // see _mouseEnterHandler, _mouseMoveHandler, _mouseLeaveHandler\n        this._private__acceptMouseLeave = !isIOS();\n        /**\n         * In Firefox mouse events dont't fire if the mouse position is outside of the browser's border.\n         * To prevent the mouse from hanging while pressed we're subscribing on the mouseleave event of the document element.\n         * We're subscribing on mouseleave, but this event is actually fired on mouseup outside of the browser's border.\n         */\n        this._private__onFirefoxOutsideMouseUp = (mouseUpEvent) => {\n            this._private__mouseUpHandler(mouseUpEvent);\n        };\n        /**\n         * Safari doesn't fire touchstart/mousedown events on double tap since iOS 13.\n         * There are two possible solutions:\n         * 1) Call preventDefault in touchEnd handler. But it also prevents click event from firing.\n         * 2) Add listener on dblclick event that fires with the preceding mousedown/mouseup.\n         * https://developer.apple.com/forums/thread/125073\n         */\n        this._private__onMobileSafariDoubleClick = (dblClickEvent) => {\n            if (this._private__firesTouchEvents(dblClickEvent)) {\n                const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n                ++this._private__tapCount;\n                if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n                    const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__tapPosition);\n                    if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n                        this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n                    }\n                    this._private__resetTapTimeout();\n                }\n            }\n            else {\n                const compatEvent = this._private__makeCompatEvent(dblClickEvent);\n                ++this._private__clickCount;\n                if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n                    const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(dblClickEvent), this._private__clickPosition);\n                    if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n                        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n                    }\n                    this._private__resetClickTimeout();\n                }\n            }\n        };\n        this._private__target = target;\n        this._private__handler = handler;\n        this._private__options = options;\n        this._private__init();\n    }\n    _internal_destroy() {\n        if (this._private__unsubscribeOutsideMouseEvents !== null) {\n            this._private__unsubscribeOutsideMouseEvents();\n            this._private__unsubscribeOutsideMouseEvents = null;\n        }\n        if (this._private__unsubscribeOutsideTouchEvents !== null) {\n            this._private__unsubscribeOutsideTouchEvents();\n            this._private__unsubscribeOutsideTouchEvents = null;\n        }\n        if (this._private__unsubscribeMousemove !== null) {\n            this._private__unsubscribeMousemove();\n            this._private__unsubscribeMousemove = null;\n        }\n        if (this._private__unsubscribeRootMouseEvents !== null) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        if (this._private__unsubscribeRootTouchEvents !== null) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        if (this._private__unsubscribeMobileSafariEvents !== null) {\n            this._private__unsubscribeMobileSafariEvents();\n            this._private__unsubscribeMobileSafariEvents = null;\n        }\n        this._private__clearLongTapTimeout();\n        this._private__resetClickTimeout();\n    }\n    _private__mouseEnterHandler(enterEvent) {\n        if (this._private__unsubscribeMousemove) {\n            this._private__unsubscribeMousemove();\n        }\n        const boundMouseMoveHandler = this._private__mouseMoveHandler.bind(this);\n        this._private__unsubscribeMousemove = () => {\n            this._private__target.removeEventListener('mousemove', boundMouseMoveHandler);\n        };\n        this._private__target.addEventListener('mousemove', boundMouseMoveHandler);\n        if (this._private__firesTouchEvents(enterEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(enterEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseEnterEvent);\n        this._private__acceptMouseLeave = true;\n    }\n    _private__resetClickTimeout() {\n        if (this._private__clickTimeoutId !== null) {\n            clearTimeout(this._private__clickTimeoutId);\n        }\n        this._private__clickCount = 0;\n        this._private__clickTimeoutId = null;\n        this._private__clickPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n    }\n    _private__resetTapTimeout() {\n        if (this._private__tapTimeoutId !== null) {\n            clearTimeout(this._private__tapTimeoutId);\n        }\n        this._private__tapCount = 0;\n        this._private__tapTimeoutId = null;\n        this._private__tapPosition = { _internal_x: Number.NEGATIVE_INFINITY, _internal_y: Number.POSITIVE_INFINITY };\n    }\n    _private__mouseMoveHandler(moveEvent) {\n        if (this._private__mousePressed || this._private__touchMoveStartPosition !== null) {\n            return;\n        }\n        if (this._private__firesTouchEvents(moveEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(moveEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseMoveEvent);\n        this._private__acceptMouseLeave = true;\n    }\n    _private__touchMoveHandler(moveEvent) {\n        const touch = touchWithId(moveEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null) {\n            return;\n        }\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(moveEvent);\n        if (this._private__startPinchMiddlePoint !== null) {\n            return;\n        }\n        if (this._private__preventTouchDragProcess) {\n            return;\n        }\n        // prevent pinch if move event comes faster than the second touch\n        this._private__pinchPrevented = true;\n        const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(touch), ensureNotNull(this._private__touchMoveStartPosition));\n        const { _internal_xOffset: xOffset, _internal_yOffset: yOffset, _internal_manhattanDistance: manhattanDistance } = moveInfo;\n        if (!this._private__touchMoveExceededManhattanDistance && manhattanDistance < 5 /* Constants.CancelTapManhattanDistance */) {\n            return;\n        }\n        if (!this._private__touchMoveExceededManhattanDistance) {\n            // first time when current position exceeded manhattan distance\n            // vertical drag is more important than horizontal drag\n            // because we scroll the page vertically often than horizontally\n            const correctedXOffset = xOffset * 0.5;\n            // a drag can be only if touch page scroll isn't allowed\n            const isVertDrag = yOffset >= correctedXOffset && !this._private__options._internal_treatVertTouchDragAsPageScroll();\n            const isHorzDrag = correctedXOffset > yOffset && !this._private__options._internal_treatHorzTouchDragAsPageScroll();\n            // if drag event happened then we should revert preventDefault state to original one\n            // and try to process the drag event\n            // else we shouldn't prevent default of the event and ignore processing the drag event\n            if (!isVertDrag && !isHorzDrag) {\n                this._private__preventTouchDragProcess = true;\n            }\n            this._private__touchMoveExceededManhattanDistance = true;\n            // if manhattan distance is more that 5 - we should cancel tap event\n            this._private__cancelTap = true;\n            this._private__clearLongTapTimeout();\n            this._private__resetTapTimeout();\n        }\n        if (!this._private__preventTouchDragProcess) {\n            const compatEvent = this._private__makeCompatEvent(moveEvent, touch);\n            this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchMoveEvent);\n            // we should prevent default in case of touch only\n            // to prevent scroll of the page\n            preventDefault(moveEvent);\n        }\n    }\n    _private__mouseMoveWithDownHandler(moveEvent) {\n        if (moveEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const moveInfo = this._private__touchMouseMoveWithDownInfo(getPosition(moveEvent), ensureNotNull(this._private__mouseMoveStartPosition));\n        const { _internal_manhattanDistance: manhattanDistance } = moveInfo;\n        if (manhattanDistance >= 5 /* Constants.CancelClickManhattanDistance */) {\n            // if manhattan distance is more that 5 - we should cancel click event\n            this._private__cancelClick = true;\n            this._private__resetClickTimeout();\n        }\n        if (this._private__cancelClick) {\n            // if this._cancelClick is true, that means that minimum manhattan distance is already exceeded\n            const compatEvent = this._private__makeCompatEvent(moveEvent);\n            this._private__processMouseEvent(compatEvent, this._private__handler._internal_pressedMouseMoveEvent);\n        }\n    }\n    _private__touchMouseMoveWithDownInfo(currentPosition, startPosition) {\n        const xOffset = Math.abs(startPosition._internal_x - currentPosition._internal_x);\n        const yOffset = Math.abs(startPosition._internal_y - currentPosition._internal_y);\n        const manhattanDistance = xOffset + yOffset;\n        return {\n            _internal_xOffset: xOffset,\n            _internal_yOffset: yOffset,\n            _internal_manhattanDistance: manhattanDistance,\n        };\n    }\n    // eslint-disable-next-line complexity\n    _private__touchEndHandler(touchEndEvent) {\n        let touch = touchWithId(touchEndEvent.changedTouches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null && touchEndEvent.touches.length === 0) {\n            // something went wrong, somehow we missed the required touchend event\n            // probably the browser has not sent this event\n            touch = touchEndEvent.changedTouches[0];\n        }\n        if (touch === null) {\n            return;\n        }\n        this._private__activeTouchId = null;\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(touchEndEvent);\n        this._private__clearLongTapTimeout();\n        this._private__touchMoveStartPosition = null;\n        if (this._private__unsubscribeRootTouchEvents) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        const compatEvent = this._private__makeCompatEvent(touchEndEvent, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchEndEvent);\n        ++this._private__tapCount;\n        if (this._private__tapTimeoutId && this._private__tapCount > 1) {\n            // check that both clicks are near enough\n            const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(touch), this._private__tapPosition);\n            if (manhattanDistance < 30 /* Constants.DoubleTapManhattanDistance */ && !this._private__cancelTap) {\n                this._private__processTouchEvent(compatEvent, this._private__handler._internal_doubleTapEvent);\n            }\n            this._private__resetTapTimeout();\n        }\n        else {\n            if (!this._private__cancelTap) {\n                this._private__processTouchEvent(compatEvent, this._private__handler._internal_tapEvent);\n                // do not fire mouse events if tap handler was executed\n                // prevent click event on new dom element (who appeared after tap)\n                if (this._private__handler._internal_tapEvent) {\n                    preventDefault(touchEndEvent);\n                }\n            }\n        }\n        // prevent, for example, safari's dblclick-to-zoom or fast-click after long-tap\n        // we handle mouseDoubleClickEvent here ourselves\n        if (this._private__tapCount === 0) {\n            preventDefault(touchEndEvent);\n        }\n        if (touchEndEvent.touches.length === 0) {\n            if (this._private__longTapActive) {\n                this._private__longTapActive = false;\n                // prevent native click event\n                preventDefault(touchEndEvent);\n            }\n        }\n    }\n    _private__mouseUpHandler(mouseUpEvent) {\n        if (mouseUpEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(mouseUpEvent);\n        this._private__mouseMoveStartPosition = null;\n        this._private__mousePressed = false;\n        if (this._private__unsubscribeRootMouseEvents) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        if (isFF()) {\n            const rootElement = this._private__target.ownerDocument.documentElement;\n            rootElement.removeEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n        }\n        if (this._private__firesTouchEvents(mouseUpEvent)) {\n            return;\n        }\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseUpEvent);\n        ++this._private__clickCount;\n        if (this._private__clickTimeoutId && this._private__clickCount > 1) {\n            // check that both clicks are near enough\n            const { _internal_manhattanDistance: manhattanDistance } = this._private__touchMouseMoveWithDownInfo(getPosition(mouseUpEvent), this._private__clickPosition);\n            if (manhattanDistance < 5 /* Constants.DoubleClickManhattanDistance */ && !this._private__cancelClick) {\n                this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDoubleClickEvent);\n            }\n            this._private__resetClickTimeout();\n        }\n        else {\n            if (!this._private__cancelClick) {\n                this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseClickEvent);\n            }\n        }\n    }\n    _private__clearLongTapTimeout() {\n        if (this._private__longTapTimeoutId === null) {\n            return;\n        }\n        clearTimeout(this._private__longTapTimeoutId);\n        this._private__longTapTimeoutId = null;\n    }\n    _private__touchStartHandler(downEvent) {\n        if (this._private__activeTouchId !== null) {\n            return;\n        }\n        const touch = downEvent.changedTouches[0];\n        this._private__activeTouchId = touch.identifier;\n        this._private__lastTouchEventTimeStamp = eventTimeStamp(downEvent);\n        const rootElement = this._private__target.ownerDocument.documentElement;\n        this._private__cancelTap = false;\n        this._private__touchMoveExceededManhattanDistance = false;\n        this._private__preventTouchDragProcess = false;\n        this._private__touchMoveStartPosition = getPosition(touch);\n        if (this._private__unsubscribeRootTouchEvents) {\n            this._private__unsubscribeRootTouchEvents();\n            this._private__unsubscribeRootTouchEvents = null;\n        }\n        {\n            const boundTouchMoveWithDownHandler = this._private__touchMoveHandler.bind(this);\n            const boundTouchEndHandler = this._private__touchEndHandler.bind(this);\n            this._private__unsubscribeRootTouchEvents = () => {\n                rootElement.removeEventListener('touchmove', boundTouchMoveWithDownHandler);\n                rootElement.removeEventListener('touchend', boundTouchEndHandler);\n            };\n            rootElement.addEventListener('touchmove', boundTouchMoveWithDownHandler, { passive: false });\n            rootElement.addEventListener('touchend', boundTouchEndHandler, { passive: false });\n            this._private__clearLongTapTimeout();\n            this._private__longTapTimeoutId = setTimeout(this._private__longTapHandler.bind(this, downEvent), 240 /* Delay.LongTap */);\n        }\n        const compatEvent = this._private__makeCompatEvent(downEvent, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_touchStartEvent);\n        if (!this._private__tapTimeoutId) {\n            this._private__tapCount = 0;\n            this._private__tapTimeoutId = setTimeout(this._private__resetTapTimeout.bind(this), 500 /* Delay.ResetClick */);\n            this._private__tapPosition = getPosition(touch);\n        }\n    }\n    _private__mouseDownHandler(downEvent) {\n        if (downEvent.button !== 0 /* MouseEventButton.Left */) {\n            return;\n        }\n        const rootElement = this._private__target.ownerDocument.documentElement;\n        if (isFF()) {\n            rootElement.addEventListener('mouseleave', this._private__onFirefoxOutsideMouseUp);\n        }\n        this._private__cancelClick = false;\n        this._private__mouseMoveStartPosition = getPosition(downEvent);\n        if (this._private__unsubscribeRootMouseEvents) {\n            this._private__unsubscribeRootMouseEvents();\n            this._private__unsubscribeRootMouseEvents = null;\n        }\n        {\n            const boundMouseMoveWithDownHandler = this._private__mouseMoveWithDownHandler.bind(this);\n            const boundMouseUpHandler = this._private__mouseUpHandler.bind(this);\n            this._private__unsubscribeRootMouseEvents = () => {\n                rootElement.removeEventListener('mousemove', boundMouseMoveWithDownHandler);\n                rootElement.removeEventListener('mouseup', boundMouseUpHandler);\n            };\n            rootElement.addEventListener('mousemove', boundMouseMoveWithDownHandler);\n            rootElement.addEventListener('mouseup', boundMouseUpHandler);\n        }\n        this._private__mousePressed = true;\n        if (this._private__firesTouchEvents(downEvent)) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(downEvent);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseDownEvent);\n        if (!this._private__clickTimeoutId) {\n            this._private__clickCount = 0;\n            this._private__clickTimeoutId = setTimeout(this._private__resetClickTimeout.bind(this), 500 /* Delay.ResetClick */);\n            this._private__clickPosition = getPosition(downEvent);\n        }\n    }\n    _private__init() {\n        this._private__target.addEventListener('mouseenter', this._private__mouseEnterHandler.bind(this));\n        // Do not show context menu when something went wrong\n        this._private__target.addEventListener('touchcancel', this._private__clearLongTapTimeout.bind(this));\n        {\n            const doc = this._private__target.ownerDocument;\n            const outsideHandler = (event) => {\n                if (!this._private__handler._internal_mouseDownOutsideEvent) {\n                    return;\n                }\n                if (event.composed && this._private__target.contains(event.composedPath()[0])) {\n                    return;\n                }\n                if (event.target && this._private__target.contains(event.target)) {\n                    return;\n                }\n                this._private__handler._internal_mouseDownOutsideEvent();\n            };\n            this._private__unsubscribeOutsideTouchEvents = () => {\n                doc.removeEventListener('touchstart', outsideHandler);\n            };\n            this._private__unsubscribeOutsideMouseEvents = () => {\n                doc.removeEventListener('mousedown', outsideHandler);\n            };\n            doc.addEventListener('mousedown', outsideHandler);\n            doc.addEventListener('touchstart', outsideHandler, { passive: true });\n        }\n        if (isIOS()) {\n            this._private__unsubscribeMobileSafariEvents = () => {\n                this._private__target.removeEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n            };\n            this._private__target.addEventListener('dblclick', this._private__onMobileSafariDoubleClick);\n        }\n        this._private__target.addEventListener('mouseleave', this._private__mouseLeaveHandler.bind(this));\n        this._private__target.addEventListener('touchstart', this._private__touchStartHandler.bind(this), { passive: true });\n        preventScrollByWheelClick(this._private__target);\n        this._private__target.addEventListener('mousedown', this._private__mouseDownHandler.bind(this));\n        this._private__initPinch();\n        // Hey mobile Safari, what's up?\n        // If mobile Safari doesn't have any touchmove handler with passive=false\n        // it treats a touchstart and the following touchmove events as cancelable=false,\n        // so we can't prevent them (as soon we subscribe on touchmove inside touchstart's handler).\n        // And we'll get scroll of the page along with chart's one instead of only chart's scroll.\n        this._private__target.addEventListener('touchmove', () => { }, { passive: false });\n    }\n    _private__initPinch() {\n        if (this._private__handler._internal_pinchStartEvent === undefined &&\n            this._private__handler._internal_pinchEvent === undefined &&\n            this._private__handler._internal_pinchEndEvent === undefined) {\n            return;\n        }\n        this._private__target.addEventListener('touchstart', (event) => this._private__checkPinchState(event.touches), { passive: true });\n        this._private__target.addEventListener('touchmove', (event) => {\n            if (event.touches.length !== 2 || this._private__startPinchMiddlePoint === null) {\n                return;\n            }\n            if (this._private__handler._internal_pinchEvent !== undefined) {\n                const currentDistance = getDistance(event.touches[0], event.touches[1]);\n                const scale = currentDistance / this._private__startPinchDistance;\n                this._private__handler._internal_pinchEvent(this._private__startPinchMiddlePoint, scale);\n                preventDefault(event);\n            }\n        }, { passive: false });\n        this._private__target.addEventListener('touchend', (event) => {\n            this._private__checkPinchState(event.touches);\n        });\n    }\n    _private__checkPinchState(touches) {\n        if (touches.length === 1) {\n            this._private__pinchPrevented = false;\n        }\n        if (touches.length !== 2 || this._private__pinchPrevented || this._private__longTapActive) {\n            this._private__stopPinch();\n        }\n        else {\n            this._private__startPinch(touches);\n        }\n    }\n    _private__startPinch(touches) {\n        const box = getBoundingClientRect(this._private__target);\n        this._private__startPinchMiddlePoint = {\n            _internal_x: ((touches[0].clientX - box.left) + (touches[1].clientX - box.left)) / 2,\n            _internal_y: ((touches[0].clientY - box.top) + (touches[1].clientY - box.top)) / 2,\n        };\n        this._private__startPinchDistance = getDistance(touches[0], touches[1]);\n        if (this._private__handler._internal_pinchStartEvent !== undefined) {\n            this._private__handler._internal_pinchStartEvent();\n        }\n        this._private__clearLongTapTimeout();\n    }\n    _private__stopPinch() {\n        if (this._private__startPinchMiddlePoint === null) {\n            return;\n        }\n        this._private__startPinchMiddlePoint = null;\n        if (this._private__handler._internal_pinchEndEvent !== undefined) {\n            this._private__handler._internal_pinchEndEvent();\n        }\n    }\n    _private__mouseLeaveHandler(event) {\n        if (this._private__unsubscribeMousemove) {\n            this._private__unsubscribeMousemove();\n        }\n        if (this._private__firesTouchEvents(event)) {\n            return;\n        }\n        if (!this._private__acceptMouseLeave) {\n            // mobile Safari sometimes emits mouse leave event for no reason, there is no way to handle it in other way\n            // just ignore this event if there was no mouse move or mouse enter events\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(event);\n        this._private__processMouseEvent(compatEvent, this._private__handler._internal_mouseLeaveEvent);\n        // accept all mouse leave events if it's not an iOS device\n        this._private__acceptMouseLeave = !isIOS();\n    }\n    _private__longTapHandler(event) {\n        const touch = touchWithId(event.touches, ensureNotNull(this._private__activeTouchId));\n        if (touch === null) {\n            return;\n        }\n        const compatEvent = this._private__makeCompatEvent(event, touch);\n        this._private__processTouchEvent(compatEvent, this._private__handler._internal_longTapEvent);\n        this._private__cancelTap = true;\n        // long tap is active until touchend event with 0 touches occurred\n        this._private__longTapActive = true;\n    }\n    _private__firesTouchEvents(e) {\n        if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents !== undefined) {\n            return e.sourceCapabilities.firesTouchEvents;\n        }\n        return eventTimeStamp(e) < this._private__lastTouchEventTimeStamp + 500 /* Delay.PreventFiresTouchEvents */;\n    }\n    _private__processTouchEvent(event, callback) {\n        if (callback) {\n            callback.call(this._private__handler, event);\n        }\n    }\n    _private__processMouseEvent(event, callback) {\n        if (!callback) {\n            return;\n        }\n        callback.call(this._private__handler, event);\n    }\n    _private__makeCompatEvent(event, touch) {\n        // TouchEvent has no clientX/Y coordinates:\n        // We have to use the last Touch instead\n        const eventLike = touch || event;\n        const box = this._private__target.getBoundingClientRect() || { left: 0, top: 0 };\n        return {\n            clientX: eventLike.clientX,\n            clientY: eventLike.clientY,\n            pageX: eventLike.pageX,\n            pageY: eventLike.pageY,\n            screenX: eventLike.screenX,\n            screenY: eventLike.screenY,\n            localX: (eventLike.clientX - box.left),\n            localY: (eventLike.clientY - box.top),\n            ctrlKey: event.ctrlKey,\n            altKey: event.altKey,\n            shiftKey: event.shiftKey,\n            metaKey: event.metaKey,\n            _internal_isTouch: !event.type.startsWith('mouse') && event.type !== 'contextmenu' && event.type !== 'click',\n            _internal_srcType: event.type,\n            _internal_target: eventLike.target,\n            _internal_view: event.view,\n            _internal_preventDefault: () => {\n                if (event.type !== 'touchstart') {\n                    // touchstart is passive and cannot be prevented\n                    preventDefault(event);\n                }\n            },\n        };\n    }\n}\nfunction getBoundingClientRect(element) {\n    return element.getBoundingClientRect() || { left: 0, top: 0 };\n}\nfunction getDistance(p1, p2) {\n    const xDiff = p1.clientX - p2.clientX;\n    const yDiff = p1.clientY - p2.clientY;\n    return Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\nfunction preventDefault(event) {\n    if (event.cancelable) {\n        event.preventDefault();\n    }\n}\nfunction getPosition(eventLike) {\n    return {\n        _internal_x: eventLike.pageX,\n        _internal_y: eventLike.pageY,\n    };\n}\nfunction eventTimeStamp(e) {\n    // for some reason e.timestamp is always 0 on iPad with magic mouse, so we use performance.now() as a fallback\n    return e.timeStamp || performance.now();\n}\nfunction touchWithId(touches, id) {\n    for (let i = 0; i < touches.length; ++i) {\n        if (touches[i].identifier === id) {\n            return touches[i];\n        }\n    }\n    return null;\n}\n\nclass PriceAxisWidget {\n    constructor(pane, options, rendererOptionsProvider, side) {\n        this._private__priceScale = null;\n        this._private__size = null;\n        this._private__mousedown = false;\n        this._private__widthCache = new TextWidthCache(200);\n        this._private__font = null;\n        this._private__prevOptimalWidth = 0;\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize) {\n                return;\n            }\n            this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize) {\n                return;\n            }\n            this._private__pane._internal_chart()._internal_model()._internal_lightUpdate();\n        };\n        this._private__pane = pane;\n        this._private__options = options;\n        this._private__layoutOptions = options.layout;\n        this._private__rendererOptionsProvider = rendererOptionsProvider;\n        this._private__isLeft = side === 'left';\n        this._private__cell = document.createElement('div');\n        this._private__cell.style.height = '100%';\n        this._private__cell.style.overflow = 'hidden';\n        this._private__cell.style.width = '25px';\n        this._private__cell.style.left = '0';\n        this._private__cell.style.position = 'relative';\n        this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        const handler = {\n            _internal_mouseDownEvent: this._private__mouseDownEvent.bind(this),\n            _internal_touchStartEvent: this._private__mouseDownEvent.bind(this),\n            _internal_pressedMouseMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_touchMoveEvent: this._private__pressedMouseMoveEvent.bind(this),\n            _internal_mouseDownOutsideEvent: this._private__mouseDownOutsideEvent.bind(this),\n            _internal_mouseUpEvent: this._private__mouseUpEvent.bind(this),\n            _internal_touchEndEvent: this._private__mouseUpEvent.bind(this),\n            _internal_mouseDoubleClickEvent: this._private__mouseDoubleClickEvent.bind(this),\n            _internal_doubleTapEvent: this._private__mouseDoubleClickEvent.bind(this),\n            _internal_mouseEnterEvent: this._private__mouseEnterEvent.bind(this),\n            _internal_mouseLeaveEvent: this._private__mouseLeaveEvent.bind(this),\n        };\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, handler, {\n            _internal_treatVertTouchDragAsPageScroll: () => false,\n            _internal_treatHorzTouchDragAsPageScroll: () => true,\n        });\n    }\n    _internal_destroy() {\n        this._private__mouseEventHandler._internal_destroy();\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        this._private__canvasBinding.dispose();\n        if (this._private__priceScale !== null) {\n            this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n        }\n        this._private__priceScale = null;\n    }\n    _internal_getElement() {\n        return this._private__cell;\n    }\n    _internal_fontSize() {\n        return this._private__layoutOptions.fontSize;\n    }\n    _internal_rendererOptions() {\n        const options = this._private__rendererOptionsProvider._internal_options();\n        const isFontChanged = this._private__font !== options._internal_font;\n        if (isFontChanged) {\n            this._private__widthCache._internal_reset();\n            this._private__font = options._internal_font;\n        }\n        return options;\n    }\n    _internal_optimalWidth() {\n        if (this._private__priceScale === null) {\n            return 0;\n        }\n        let tickMarkMaxWidth = 0;\n        const rendererOptions = this._internal_rendererOptions();\n        const ctx = ensureNotNull(this._private__canvasBinding.canvasElement.getContext('2d'));\n        ctx.save();\n        const tickMarks = this._private__priceScale._internal_marks();\n        ctx.font = this._private__baseFont();\n        if (tickMarks.length > 0) {\n            tickMarkMaxWidth = Math.max(this._private__widthCache._internal_measureText(ctx, tickMarks[0]._internal_label), this._private__widthCache._internal_measureText(ctx, tickMarks[tickMarks.length - 1]._internal_label));\n        }\n        const views = this._private__backLabels();\n        for (let j = views.length; j--;) {\n            const width = this._private__widthCache._internal_measureText(ctx, views[j]._internal_text());\n            if (width > tickMarkMaxWidth) {\n                tickMarkMaxWidth = width;\n            }\n        }\n        const firstValue = this._private__priceScale._internal_firstValue();\n        if (firstValue !== null && this._private__size !== null) {\n            const topValue = this._private__priceScale._internal_coordinateToPrice(1, firstValue);\n            const bottomValue = this._private__priceScale._internal_coordinateToPrice(this._private__size.height - 2, firstValue);\n            tickMarkMaxWidth = Math.max(tickMarkMaxWidth, this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.floor(Math.min(topValue, bottomValue)) + 0.11111111111111, firstValue)), this._private__widthCache._internal_measureText(ctx, this._private__priceScale._internal_formatPrice(Math.ceil(Math.max(topValue, bottomValue)) - 0.11111111111111, firstValue)));\n        }\n        ctx.restore();\n        const resultTickMarksMaxWidth = tickMarkMaxWidth || 34 /* Constants.DefaultOptimalWidth */;\n        const res = Math.ceil(rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_paddingInner +\n            rendererOptions._internal_paddingOuter +\n            5 /* Constants.LabelOffset */ +\n            resultTickMarksMaxWidth);\n        // make it even, remove this after migration to perfect fancy canvas\n        return suggestPriceScaleWidth(res);\n    }\n    _internal_setSize(newSize) {\n        if (this._private__size === null || !equalSizes(this._private__size, newSize)) {\n            this._private__size = newSize;\n            this._private__isSettingSize = true;\n            this._private__canvasBinding.resizeCanvasElement(newSize);\n            this._private__topCanvasBinding.resizeCanvasElement(newSize);\n            this._private__isSettingSize = false;\n            this._private__cell.style.width = `${newSize.width}px`;\n            this._private__cell.style.height = `${newSize.height}px`;\n        }\n    }\n    _internal_getWidth() {\n        return ensureNotNull(this._private__size).width;\n    }\n    _internal_setPriceScale(priceScale) {\n        if (this._private__priceScale === priceScale) {\n            return;\n        }\n        if (this._private__priceScale !== null) {\n            this._private__priceScale._internal_onMarksChanged()._internal_unsubscribeAll(this);\n        }\n        this._private__priceScale = priceScale;\n        priceScale._internal_onMarksChanged()._internal_subscribe(this._private__onMarksChanged.bind(this), this);\n    }\n    _internal_priceScale() {\n        return this._private__priceScale;\n    }\n    _internal_reset() {\n        const pane = this._private__pane._internal_state();\n        const model = this._private__pane._internal_chart()._internal_model();\n        model._internal_resetPriceScale(pane, ensureNotNull(this._internal_priceScale()));\n    }\n    _internal_paint(type) {\n        if (this._private__size === null) {\n            return;\n        }\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__alignLabels();\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                    this._private__drawBorder(scope);\n                });\n                this._private__drawTickMarks(target);\n                this._private__drawBackLabels(target);\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawCrosshairLabel(topTarget);\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_update() {\n        var _a;\n        // this call has side-effect - it regenerates marks on the price scale\n        (_a = this._private__priceScale) === null || _a === void 0 ? void 0 : _a._internal_marks();\n    }\n    _private__mouseDownEvent(e) {\n        if (this._private__priceScale === null || this._private__priceScale._internal_isEmpty() || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        this._private__mousedown = true;\n        model._internal_startScalePrice(pane, this._private__priceScale, e.localY);\n    }\n    _private__pressedMouseMoveEvent(e) {\n        if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        const priceScale = this._private__priceScale;\n        model._internal_scalePriceTo(pane, priceScale, e.localY);\n    }\n    _private__mouseDownOutsideEvent() {\n        if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        const priceScale = this._private__priceScale;\n        if (this._private__mousedown) {\n            this._private__mousedown = false;\n            model._internal_endScalePrice(pane, priceScale);\n        }\n    }\n    _private__mouseUpEvent(e) {\n        if (this._private__priceScale === null || !this._private__options.handleScale.axisPressedMouseMove.price) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const pane = this._private__pane._internal_state();\n        this._private__mousedown = false;\n        model._internal_endScalePrice(pane, this._private__priceScale);\n    }\n    _private__mouseDoubleClickEvent(e) {\n        if (this._private__options.handleScale.axisDoubleClickReset.price) {\n            this._internal_reset();\n        }\n    }\n    _private__mouseEnterEvent(e) {\n        if (this._private__priceScale === null) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        if (model._internal_options().handleScale.axisPressedMouseMove.price && !this._private__priceScale._internal_isPercentage() && !this._private__priceScale._internal_isIndexedTo100()) {\n            this._private__setCursor(1 /* CursorType.NsResize */);\n        }\n    }\n    _private__mouseLeaveEvent(e) {\n        this._private__setCursor(0 /* CursorType.Default */);\n    }\n    _private__backLabels() {\n        const res = [];\n        const priceScale = (this._private__priceScale === null) ? undefined : this._private__priceScale;\n        const addViewsForSources = (sources) => {\n            for (let i = 0; i < sources.length; ++i) {\n                const source = sources[i];\n                const views = source._internal_priceAxisViews(this._private__pane._internal_state(), priceScale);\n                for (let j = 0; j < views.length; j++) {\n                    res.push(views[j]);\n                }\n            }\n        };\n        // calculate max and min coordinates for views on selection\n        // crosshair individually\n        addViewsForSources(this._private__pane._internal_state()._internal_orderedSources());\n        return res;\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        const { width, height } = bitmapSize;\n        const model = this._private__pane._internal_state()._internal_model();\n        const topColor = model._internal_backgroundTopColor();\n        const bottomColor = model._internal_backgroundBottomColor();\n        if (topColor === bottomColor) {\n            clearRect(ctx, 0, 0, width, height, topColor);\n        }\n        else {\n            clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n        }\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, horizontalPixelRatio }) {\n        if (this._private__size === null || this._private__priceScale === null || !this._private__priceScale._internal_options().borderVisible) {\n            return;\n        }\n        ctx.fillStyle = this._private__priceScale._internal_options().borderColor;\n        const borderSize = Math.max(1, Math.floor(this._internal_rendererOptions()._internal_borderSize * horizontalPixelRatio));\n        let left;\n        if (this._private__isLeft) {\n            left = bitmapSize.width - borderSize;\n        }\n        else {\n            left = 0;\n        }\n        ctx.fillRect(left, 0, borderSize, bitmapSize.height);\n    }\n    _private__drawTickMarks(target) {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        const tickMarks = this._private__priceScale._internal_marks();\n        const priceScaleOptions = this._private__priceScale._internal_options();\n        const rendererOptions = this._internal_rendererOptions();\n        const tickMarkLeftX = this._private__isLeft ?\n            (this._private__size.width - rendererOptions._internal_tickLength) :\n            0;\n        if (priceScaleOptions.borderVisible && priceScaleOptions.ticksVisible) {\n            target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n                ctx.fillStyle = priceScaleOptions.borderColor;\n                const tickHeight = Math.max(1, Math.floor(verticalPixelRatio));\n                const tickOffset = Math.floor(verticalPixelRatio * 0.5);\n                const tickLength = Math.round(rendererOptions._internal_tickLength * horizontalPixelRatio);\n                ctx.beginPath();\n                for (const tickMark of tickMarks) {\n                    ctx.rect(Math.floor(tickMarkLeftX * horizontalPixelRatio), Math.round(tickMark._internal_coord * verticalPixelRatio) - tickOffset, tickLength, tickHeight);\n                }\n                ctx.fill();\n            });\n        }\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            var _a;\n            ctx.font = this._private__baseFont();\n            ctx.fillStyle = (_a = priceScaleOptions.textColor) !== null && _a !== void 0 ? _a : this._private__layoutOptions.textColor;\n            ctx.textAlign = this._private__isLeft ? 'right' : 'left';\n            ctx.textBaseline = 'middle';\n            const textLeftX = this._private__isLeft ?\n                Math.round(tickMarkLeftX - rendererOptions._internal_paddingInner) :\n                Math.round(tickMarkLeftX + rendererOptions._internal_tickLength + rendererOptions._internal_paddingInner);\n            const yMidCorrections = tickMarks.map((mark) => this._private__widthCache._internal_yMidCorrection(ctx, mark._internal_label));\n            for (let i = tickMarks.length; i--;) {\n                const tickMark = tickMarks[i];\n                ctx.fillText(tickMark._internal_label, textLeftX, tickMark._internal_coord + yMidCorrections[i]);\n            }\n        });\n    }\n    _private__alignLabels() {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        let center = this._private__size.height / 2;\n        const views = [];\n        const orderedSources = this._private__priceScale._internal_orderedSources().slice(); // Copy of array\n        const pane = this._private__pane;\n        const paneState = pane._internal_state();\n        const rendererOptions = this._internal_rendererOptions();\n        // if we are default price scale, append labels from no-scale\n        const isDefault = this._private__priceScale === paneState._internal_defaultVisiblePriceScale();\n        if (isDefault) {\n            this._private__pane._internal_state()._internal_orderedSources().forEach((source) => {\n                if (paneState._internal_isOverlay(source)) {\n                    orderedSources.push(source);\n                }\n            });\n        }\n        // we can use any, but let's use the first source as \"center\" one\n        const centerSource = this._private__priceScale._internal_dataSources()[0];\n        const priceScale = this._private__priceScale;\n        const updateForSources = (sources) => {\n            sources.forEach((source) => {\n                const sourceViews = source._internal_priceAxisViews(paneState, priceScale);\n                // never align selected sources\n                sourceViews.forEach((view) => {\n                    view._internal_setFixedCoordinate(null);\n                    if (view._internal_isVisible()) {\n                        views.push(view);\n                    }\n                });\n                if (centerSource === source && sourceViews.length > 0) {\n                    center = sourceViews[0]._internal_coordinate();\n                }\n            });\n        };\n        // crosshair individually\n        updateForSources(orderedSources);\n        views.forEach((view) => view._internal_setFixedCoordinate(view._internal_coordinate()));\n        const options = this._private__priceScale._internal_options();\n        if (!options.alignLabels) {\n            return;\n        }\n        this._private__fixLabelOverlap(views, rendererOptions, center);\n    }\n    _private__fixLabelOverlap(views, rendererOptions, center) {\n        if (this._private__size === null) {\n            return;\n        }\n        // split into two parts\n        const top = views.filter((view) => view._internal_coordinate() <= center);\n        const bottom = views.filter((view) => view._internal_coordinate() > center);\n        // sort top from center to top\n        top.sort((l, r) => r._internal_coordinate() - l._internal_coordinate());\n        // share center label\n        if (top.length && bottom.length) {\n            bottom.push(top[0]);\n        }\n        bottom.sort((l, r) => l._internal_coordinate() - r._internal_coordinate());\n        for (const view of views) {\n            const halfHeight = Math.floor(view._internal_height(rendererOptions) / 2);\n            const coordinate = view._internal_coordinate();\n            if (coordinate > -halfHeight && coordinate < halfHeight) {\n                view._internal_setFixedCoordinate(halfHeight);\n            }\n            if (coordinate > (this._private__size.height - halfHeight) && coordinate < this._private__size.height + halfHeight) {\n                view._internal_setFixedCoordinate(this._private__size.height - halfHeight);\n            }\n        }\n        for (let i = 1; i < top.length; i++) {\n            const view = top[i];\n            const prev = top[i - 1];\n            const height = prev._internal_height(rendererOptions, false);\n            const coordinate = view._internal_coordinate();\n            const prevFixedCoordinate = prev._internal_getFixedCoordinate();\n            if (coordinate > prevFixedCoordinate - height) {\n                view._internal_setFixedCoordinate(prevFixedCoordinate - height);\n            }\n        }\n        for (let j = 1; j < bottom.length; j++) {\n            const view = bottom[j];\n            const prev = bottom[j - 1];\n            const height = prev._internal_height(rendererOptions, true);\n            const coordinate = view._internal_coordinate();\n            const prevFixedCoordinate = prev._internal_getFixedCoordinate();\n            if (coordinate < prevFixedCoordinate + height) {\n                view._internal_setFixedCoordinate(prevFixedCoordinate + height);\n            }\n        }\n    }\n    _private__drawBackLabels(target) {\n        if (this._private__size === null) {\n            return;\n        }\n        const views = this._private__backLabels();\n        const rendererOptions = this._internal_rendererOptions();\n        const align = this._private__isLeft ? 'right' : 'left';\n        views.forEach((view) => {\n            if (view._internal_isAxisLabelVisible()) {\n                const renderer = view._internal_renderer(ensureNotNull(this._private__priceScale));\n                renderer._internal_draw(target, rendererOptions, this._private__widthCache, align);\n            }\n        });\n    }\n    _private__drawCrosshairLabel(target) {\n        if (this._private__size === null || this._private__priceScale === null) {\n            return;\n        }\n        const model = this._private__pane._internal_chart()._internal_model();\n        const views = []; // array of arrays\n        const pane = this._private__pane._internal_state();\n        const v = model._internal_crosshairSource()._internal_priceAxisViews(pane, this._private__priceScale);\n        if (v.length) {\n            views.push(v);\n        }\n        const ro = this._internal_rendererOptions();\n        const align = this._private__isLeft ? 'right' : 'left';\n        views.forEach((arr) => {\n            arr.forEach((view) => {\n                view._internal_renderer(ensureNotNull(this._private__priceScale))._internal_draw(target, ro, this._private__widthCache, align);\n            });\n        });\n    }\n    _private__setCursor(type) {\n        this._private__cell.style.cursor = type === 1 /* CursorType.NsResize */ ? 'ns-resize' : 'default';\n    }\n    _private__onMarksChanged() {\n        const width = this._internal_optimalWidth();\n        // avoid price scale is shrunk\n        // using < instead !== to avoid infinite changes\n        if (this._private__prevOptimalWidth < width) {\n            this._private__pane._internal_chart()._internal_model()._internal_fullUpdate();\n        }\n        this._private__prevOptimalWidth = width;\n    }\n    _private__baseFont() {\n        return makeFont(this._private__layoutOptions.fontSize, this._private__layoutOptions.fontFamily);\n    }\n}\n\nfunction drawBackground(renderer, target, isHovered, hitTestData) {\n    if (renderer._internal_drawBackground) {\n        renderer._internal_drawBackground(target, isHovered, hitTestData);\n    }\n}\nfunction drawForeground(renderer, target, isHovered, hitTestData) {\n    renderer._internal_draw(target, isHovered, hitTestData);\n}\nfunction sourcePaneViews(source, pane) {\n    return source._internal_paneViews(pane);\n}\nfunction sourceLabelPaneViews(source, pane) {\n    return source._internal_labelPaneViews(pane);\n}\nfunction sourceTopPaneViews(source, pane) {\n    return source._internal_topPaneViews !== undefined ? source._internal_topPaneViews(pane) : [];\n}\nclass PaneWidget {\n    constructor(chart, state) {\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__leftPriceAxisWidget = null;\n        this._private__rightPriceAxisWidget = null;\n        this._private__startScrollingPos = null;\n        this._private__isScrolling = false;\n        this._private__clicked = new Delegate();\n        this._private__prevPinchScale = 0;\n        this._private__longTap = false;\n        this._private__startTrackPoint = null;\n        this._private__exitTrackingModeOnNextTry = false;\n        this._private__initCrosshairPosition = null;\n        this._private__scrollXAnimation = null;\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize || this._private__state === null) {\n                return;\n            }\n            this._private__model()._internal_lightUpdate();\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (this._private__isSettingSize || this._private__state === null) {\n                return;\n            }\n            this._private__model()._internal_lightUpdate();\n        };\n        this._private__chart = chart;\n        this._private__state = state;\n        this._private__state._internal_onDestroyed()._internal_subscribe(this._private__onStateDestroyed.bind(this), this, true);\n        this._private__paneCell = document.createElement('td');\n        this._private__paneCell.style.padding = '0';\n        this._private__paneCell.style.position = 'relative';\n        const paneWrapper = document.createElement('div');\n        paneWrapper.style.width = '100%';\n        paneWrapper.style.height = '100%';\n        paneWrapper.style.position = 'relative';\n        paneWrapper.style.overflow = 'hidden';\n        this._private__leftAxisCell = document.createElement('td');\n        this._private__leftAxisCell.style.padding = '0';\n        this._private__rightAxisCell = document.createElement('td');\n        this._private__rightAxisCell.style.padding = '0';\n        this._private__paneCell.appendChild(paneWrapper);\n        this._private__canvasBinding = createBoundCanvas(paneWrapper, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(paneWrapper, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        this._private__rowElement = document.createElement('tr');\n        this._private__rowElement.appendChild(this._private__leftAxisCell);\n        this._private__rowElement.appendChild(this._private__paneCell);\n        this._private__rowElement.appendChild(this._private__rightAxisCell);\n        this._internal_updatePriceAxisWidgetsStates();\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n            _internal_treatVertTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options().handleScroll.vertTouchDrag,\n            _internal_treatHorzTouchDragAsPageScroll: () => this._private__startTrackPoint === null && !this._private__chart._internal_options().handleScroll.horzTouchDrag,\n        });\n    }\n    _internal_destroy() {\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_destroy();\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_destroy();\n        }\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        this._private__canvasBinding.dispose();\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__mouseEventHandler._internal_destroy();\n    }\n    _internal_state() {\n        return ensureNotNull(this._private__state);\n    }\n    _internal_setState(pane) {\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__state = pane;\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_subscribe(PaneWidget.prototype._private__onStateDestroyed.bind(this), this, true);\n        }\n        this._internal_updatePriceAxisWidgetsStates();\n    }\n    _internal_chart() {\n        return this._private__chart;\n    }\n    _internal_getElement() {\n        return this._private__rowElement;\n    }\n    _internal_updatePriceAxisWidgetsStates() {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__recreatePriceAxisWidgets();\n        if (this._private__model()._internal_serieses().length === 0) {\n            return;\n        }\n        if (this._private__leftPriceAxisWidget !== null) {\n            const leftPriceScale = this._private__state._internal_leftPriceScale();\n            this._private__leftPriceAxisWidget._internal_setPriceScale(ensureNotNull(leftPriceScale));\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            const rightPriceScale = this._private__state._internal_rightPriceScale();\n            this._private__rightPriceAxisWidget._internal_setPriceScale(ensureNotNull(rightPriceScale));\n        }\n    }\n    _internal_updatePriceAxisWidgets() {\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_update();\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_update();\n        }\n    }\n    _internal_stretchFactor() {\n        return this._private__state !== null ? this._private__state._internal_stretchFactor() : 0;\n    }\n    _internal_setStretchFactor(stretchFactor) {\n        if (this._private__state) {\n            this._private__state._internal_setStretchFactor(stretchFactor);\n        }\n    }\n    _internal_mouseEnterEvent(event) {\n        if (!this._private__state) {\n            return;\n        }\n        this._private__onMouseEvent();\n        const x = event.localX;\n        const y = event.localY;\n        this._private__setCrosshairPosition(x, y, event);\n    }\n    _internal_mouseDownEvent(event) {\n        this._private__onMouseEvent();\n        this._private__mouseTouchDownEvent();\n        this._private__setCrosshairPosition(event.localX, event.localY, event);\n    }\n    _internal_mouseMoveEvent(event) {\n        if (!this._private__state) {\n            return;\n        }\n        this._private__onMouseEvent();\n        const x = event.localX;\n        const y = event.localY;\n        this._private__setCrosshairPosition(x, y, event);\n        const hitTest = this._internal_hitTest(x, y);\n        this._private__model()._internal_setHoveredSource(hitTest && { _internal_source: hitTest._internal_source, _internal_object: hitTest._internal_object });\n    }\n    _internal_mouseClickEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__fireClickedDelegate(event);\n    }\n    _internal_pressedMouseMoveEvent(event) {\n        this._private__onMouseEvent();\n        this._private__pressedMouseTouchMoveEvent(event);\n        this._private__setCrosshairPosition(event.localX, event.localY, event);\n    }\n    _internal_mouseUpEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__longTap = false;\n        this._private__endScroll(event);\n    }\n    _internal_tapEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__fireClickedDelegate(event);\n    }\n    _internal_longTapEvent(event) {\n        this._private__longTap = true;\n        if (this._private__startTrackPoint === null) {\n            const point = { x: event.localX, y: event.localY };\n            this._private__startTrackingMode(point, point, event);\n        }\n    }\n    _internal_mouseLeaveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        this._private__onMouseEvent();\n        this._private__state._internal_model()._internal_setHoveredSource(null);\n        this._private__clearCrosshairPosition();\n    }\n    _internal_clicked() {\n        return this._private__clicked;\n    }\n    _internal_pinchStartEvent() {\n        this._private__prevPinchScale = 1;\n        this._private__model()._internal_stopTimeScaleAnimation();\n    }\n    _internal_pinchEvent(middlePoint, scale) {\n        if (!this._private__chart._internal_options().handleScale.pinch) {\n            return;\n        }\n        const zoomScale = (scale - this._private__prevPinchScale) * 5;\n        this._private__prevPinchScale = scale;\n        this._private__model()._internal_zoomTime(middlePoint._internal_x, zoomScale);\n    }\n    _internal_touchStartEvent(event) {\n        this._private__longTap = false;\n        this._private__exitTrackingModeOnNextTry = this._private__startTrackPoint !== null;\n        this._private__mouseTouchDownEvent();\n        if (this._private__startTrackPoint !== null) {\n            const crosshair = this._private__model()._internal_crosshairSource();\n            this._private__initCrosshairPosition = { x: crosshair._internal_appliedX(), y: crosshair._internal_appliedY() };\n            this._private__startTrackPoint = { x: event.localX, y: event.localY };\n        }\n    }\n    _internal_touchMoveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        const x = event.localX;\n        const y = event.localY;\n        if (this._private__startTrackPoint !== null) {\n            // tracking mode: move crosshair\n            this._private__exitTrackingModeOnNextTry = false;\n            const origPoint = ensureNotNull(this._private__initCrosshairPosition);\n            const newX = origPoint.x + (x - this._private__startTrackPoint.x);\n            const newY = origPoint.y + (y - this._private__startTrackPoint.y);\n            this._private__setCrosshairPosition(newX, newY, event);\n            return;\n        }\n        this._private__pressedMouseTouchMoveEvent(event);\n    }\n    _internal_touchEndEvent(event) {\n        if (this._internal_chart()._internal_options().trackingMode.exitMode === 0 /* TrackingModeExitMode.OnTouchEnd */) {\n            this._private__exitTrackingModeOnNextTry = true;\n        }\n        this._private__tryExitTrackingMode();\n        this._private__endScroll(event);\n    }\n    _internal_hitTest(x, y) {\n        const state = this._private__state;\n        if (state === null) {\n            return null;\n        }\n        const sources = state._internal_orderedSources();\n        for (const source of sources) {\n            const sourceResult = this._private__hitTestPaneView(source._internal_paneViews(state), x, y);\n            if (sourceResult !== null) {\n                return {\n                    _internal_source: source,\n                    _internal_view: sourceResult._internal_view,\n                    _internal_object: sourceResult._internal_object,\n                };\n            }\n        }\n        return null;\n    }\n    _internal_setPriceAxisSize(width, position) {\n        const priceAxisWidget = position === 'left' ? this._private__leftPriceAxisWidget : this._private__rightPriceAxisWidget;\n        ensureNotNull(priceAxisWidget)._internal_setSize(size$1({ width, height: this._private__size.height }));\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_setSize(newSize) {\n        if (equalSizes(this._private__size, newSize)) {\n            return;\n        }\n        this._private__size = newSize;\n        this._private__isSettingSize = true;\n        this._private__canvasBinding.resizeCanvasElement(newSize);\n        this._private__topCanvasBinding.resizeCanvasElement(newSize);\n        this._private__isSettingSize = false;\n        this._private__paneCell.style.width = newSize.width + 'px';\n        this._private__paneCell.style.height = newSize.height + 'px';\n    }\n    _internal_recalculatePriceScales() {\n        const pane = ensureNotNull(this._private__state);\n        pane._internal_recalculatePriceScale(pane._internal_leftPriceScale());\n        pane._internal_recalculatePriceScale(pane._internal_rightPriceScale());\n        for (const source of pane._internal_dataSources()) {\n            if (pane._internal_isOverlay(source)) {\n                const priceScale = source._internal_priceScale();\n                if (priceScale !== null) {\n                    pane._internal_recalculatePriceScale(priceScale);\n                }\n                // for overlay drawings price scale is owner's price scale\n                // however owner's price scale could not contain ds\n                source._internal_updateAllViews();\n            }\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_paint(type) {\n        if (type === 0 /* InvalidationLevel.None */) {\n            return;\n        }\n        if (this._private__state === null) {\n            return;\n        }\n        if (type > 1 /* InvalidationLevel.Cursor */) {\n            this._internal_recalculatePriceScales();\n        }\n        if (this._private__leftPriceAxisWidget !== null) {\n            this._private__leftPriceAxisWidget._internal_paint(type);\n        }\n        if (this._private__rightPriceAxisWidget !== null) {\n            this._private__rightPriceAxisWidget._internal_paint(type);\n        }\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                });\n                if (this._private__state) {\n                    this._private__drawGrid(target);\n                    this._private__drawWatermark(target);\n                    this._private__drawSources(target, sourcePaneViews);\n                    this._private__drawSources(target, sourceLabelPaneViews);\n                }\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawSources(topTarget, sourceTopPaneViews);\n            this._private__drawCrosshair(topTarget);\n        }\n    }\n    _internal_leftPriceAxisWidget() {\n        return this._private__leftPriceAxisWidget;\n    }\n    _internal_rightPriceAxisWidget() {\n        return this._private__rightPriceAxisWidget;\n    }\n    _private__onStateDestroyed() {\n        if (this._private__state !== null) {\n            this._private__state._internal_onDestroyed()._internal_unsubscribeAll(this);\n        }\n        this._private__state = null;\n    }\n    _private__fireClickedDelegate(event) {\n        const x = event.localX;\n        const y = event.localY;\n        if (this._private__clicked._internal_hasListeners()) {\n            this._private__clicked._internal_fire(this._private__model()._internal_timeScale()._internal_coordinateToIndex(x), { x, y }, event);\n        }\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        const { width, height } = bitmapSize;\n        const model = this._private__model();\n        const topColor = model._internal_backgroundTopColor();\n        const bottomColor = model._internal_backgroundBottomColor();\n        if (topColor === bottomColor) {\n            clearRect(ctx, 0, 0, width, height, bottomColor);\n        }\n        else {\n            clearRectWithGradient(ctx, 0, 0, width, height, topColor, bottomColor);\n        }\n    }\n    _private__drawGrid(target) {\n        const state = ensureNotNull(this._private__state);\n        const paneView = state._internal_grid()._internal_paneView();\n        const renderer = paneView._internal_renderer();\n        if (renderer !== null) {\n            renderer._internal_draw(target, false);\n        }\n    }\n    _private__drawWatermark(target) {\n        const source = this._private__model()._internal_watermarkSource();\n        this._private__drawSourceImpl(target, sourcePaneViews, drawBackground, source);\n        this._private__drawSourceImpl(target, sourcePaneViews, drawForeground, source);\n    }\n    _private__drawCrosshair(target) {\n        this._private__drawSourceImpl(target, sourcePaneViews, drawForeground, this._private__model()._internal_crosshairSource());\n    }\n    _private__drawSources(target, paneViewsGetter) {\n        const state = ensureNotNull(this._private__state);\n        const sources = state._internal_orderedSources();\n        for (const source of sources) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawBackground, source);\n        }\n        for (const source of sources) {\n            this._private__drawSourceImpl(target, paneViewsGetter, drawForeground, source);\n        }\n    }\n    _private__drawSourceImpl(target, paneViewsGetter, drawFn, source) {\n        const state = ensureNotNull(this._private__state);\n        const paneViews = paneViewsGetter(source, state);\n        const hoveredSource = state._internal_model()._internal_hoveredSource();\n        const isHovered = hoveredSource !== null && hoveredSource._internal_source === source;\n        const objecId = hoveredSource !== null && isHovered && hoveredSource._internal_object !== undefined\n            ? hoveredSource._internal_object._internal_hitTestData\n            : undefined;\n        for (const paneView of paneViews) {\n            const renderer = paneView._internal_renderer();\n            if (renderer !== null) {\n                drawFn(renderer, target, isHovered, objecId);\n            }\n        }\n    }\n    _private__hitTestPaneView(paneViews, x, y) {\n        for (const paneView of paneViews) {\n            const renderer = paneView._internal_renderer();\n            if (renderer !== null && renderer._internal_hitTest) {\n                const result = renderer._internal_hitTest(x, y);\n                if (result !== null) {\n                    return {\n                        _internal_view: paneView,\n                        _internal_object: result,\n                    };\n                }\n            }\n        }\n        return null;\n    }\n    _private__recreatePriceAxisWidgets() {\n        if (this._private__state === null) {\n            return;\n        }\n        const chart = this._private__chart;\n        const leftAxisVisible = this._private__state._internal_leftPriceScale()._internal_options().visible;\n        const rightAxisVisible = this._private__state._internal_rightPriceScale()._internal_options().visible;\n        if (!leftAxisVisible && this._private__leftPriceAxisWidget !== null) {\n            this._private__leftAxisCell.removeChild(this._private__leftPriceAxisWidget._internal_getElement());\n            this._private__leftPriceAxisWidget._internal_destroy();\n            this._private__leftPriceAxisWidget = null;\n        }\n        if (!rightAxisVisible && this._private__rightPriceAxisWidget !== null) {\n            this._private__rightAxisCell.removeChild(this._private__rightPriceAxisWidget._internal_getElement());\n            this._private__rightPriceAxisWidget._internal_destroy();\n            this._private__rightPriceAxisWidget = null;\n        }\n        const rendererOptionsProvider = chart._internal_model()._internal_rendererOptionsProvider();\n        if (leftAxisVisible && this._private__leftPriceAxisWidget === null) {\n            this._private__leftPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'left');\n            this._private__leftAxisCell.appendChild(this._private__leftPriceAxisWidget._internal_getElement());\n        }\n        if (rightAxisVisible && this._private__rightPriceAxisWidget === null) {\n            this._private__rightPriceAxisWidget = new PriceAxisWidget(this, chart._internal_options(), rendererOptionsProvider, 'right');\n            this._private__rightAxisCell.appendChild(this._private__rightPriceAxisWidget._internal_getElement());\n        }\n    }\n    _private__preventScroll(event) {\n        return event._internal_isTouch && this._private__longTap || this._private__startTrackPoint !== null;\n    }\n    _private__correctXCoord(x) {\n        return Math.max(0, Math.min(x, this._private__size.width - 1));\n    }\n    _private__correctYCoord(y) {\n        return Math.max(0, Math.min(y, this._private__size.height - 1));\n    }\n    _private__setCrosshairPosition(x, y, event) {\n        this._private__model()._internal_setAndSaveCurrentPosition(this._private__correctXCoord(x), this._private__correctYCoord(y), event, ensureNotNull(this._private__state));\n    }\n    _private__clearCrosshairPosition() {\n        this._private__model()._internal_clearCurrentPosition();\n    }\n    _private__tryExitTrackingMode() {\n        if (this._private__exitTrackingModeOnNextTry) {\n            this._private__startTrackPoint = null;\n            this._private__clearCrosshairPosition();\n        }\n    }\n    _private__startTrackingMode(startTrackPoint, crossHairPosition, event) {\n        this._private__startTrackPoint = startTrackPoint;\n        this._private__exitTrackingModeOnNextTry = false;\n        this._private__setCrosshairPosition(crossHairPosition.x, crossHairPosition.y, event);\n        const crosshair = this._private__model()._internal_crosshairSource();\n        this._private__initCrosshairPosition = { x: crosshair._internal_appliedX(), y: crosshair._internal_appliedY() };\n    }\n    _private__model() {\n        return this._private__chart._internal_model();\n    }\n    _private__endScroll(event) {\n        if (!this._private__isScrolling) {\n            return;\n        }\n        const model = this._private__model();\n        const state = this._internal_state();\n        model._internal_endScrollPrice(state, state._internal_defaultPriceScale());\n        this._private__startScrollingPos = null;\n        this._private__isScrolling = false;\n        model._internal_endScrollTime();\n        if (this._private__scrollXAnimation !== null) {\n            const startAnimationTime = performance.now();\n            const timeScale = model._internal_timeScale();\n            this._private__scrollXAnimation._internal_start(timeScale._internal_rightOffset(), startAnimationTime);\n            if (!this._private__scrollXAnimation._internal_finished(startAnimationTime)) {\n                model._internal_setTimeScaleAnimation(this._private__scrollXAnimation);\n            }\n        }\n    }\n    _private__onMouseEvent() {\n        this._private__startTrackPoint = null;\n    }\n    _private__mouseTouchDownEvent() {\n        if (!this._private__state) {\n            return;\n        }\n        this._private__model()._internal_stopTimeScaleAnimation();\n        if (document.activeElement !== document.body && document.activeElement !== document.documentElement) {\n            // If any focusable element except the page itself is focused, remove the focus\n            ensureNotNull(document.activeElement).blur();\n        }\n        else {\n            // Clear selection\n            const selection = document.getSelection();\n            if (selection !== null) {\n                selection.removeAllRanges();\n            }\n        }\n        const priceScale = this._private__state._internal_defaultPriceScale();\n        if (priceScale._internal_isEmpty() || this._private__model()._internal_timeScale()._internal_isEmpty()) {\n            return;\n        }\n    }\n    // eslint-disable-next-line complexity\n    _private__pressedMouseTouchMoveEvent(event) {\n        if (this._private__state === null) {\n            return;\n        }\n        const model = this._private__model();\n        const timeScale = model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return;\n        }\n        const chartOptions = this._private__chart._internal_options();\n        const scrollOptions = chartOptions.handleScroll;\n        const kineticScrollOptions = chartOptions.kineticScroll;\n        if ((!scrollOptions.pressedMouseMove || event._internal_isTouch) &&\n            (!scrollOptions.horzTouchDrag && !scrollOptions.vertTouchDrag || !event._internal_isTouch)) {\n            return;\n        }\n        const priceScale = this._private__state._internal_defaultPriceScale();\n        const now = performance.now();\n        if (this._private__startScrollingPos === null && !this._private__preventScroll(event)) {\n            this._private__startScrollingPos = {\n                x: event.clientX,\n                y: event.clientY,\n                _internal_timestamp: now,\n                _internal_localX: event.localX,\n                _internal_localY: event.localY,\n            };\n        }\n        if (this._private__startScrollingPos !== null &&\n            !this._private__isScrolling &&\n            (this._private__startScrollingPos.x !== event.clientX || this._private__startScrollingPos.y !== event.clientY)) {\n            if (event._internal_isTouch && kineticScrollOptions.touch || !event._internal_isTouch && kineticScrollOptions.mouse) {\n                const barSpacing = timeScale._internal_barSpacing();\n                this._private__scrollXAnimation = new KineticAnimation(0.2 /* KineticScrollConstants.MinScrollSpeed */ / barSpacing, 7 /* KineticScrollConstants.MaxScrollSpeed */ / barSpacing, 0.997 /* KineticScrollConstants.DumpingCoeff */, 15 /* KineticScrollConstants.ScrollMinMove */ / barSpacing);\n                this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), this._private__startScrollingPos._internal_timestamp);\n            }\n            else {\n                this._private__scrollXAnimation = null;\n            }\n            if (!priceScale._internal_isEmpty()) {\n                model._internal_startScrollPrice(this._private__state, priceScale, event.localY);\n            }\n            model._internal_startScrollTime(event.localX);\n            this._private__isScrolling = true;\n        }\n        if (this._private__isScrolling) {\n            // this allows scrolling not default price scales\n            if (!priceScale._internal_isEmpty()) {\n                model._internal_scrollPriceTo(this._private__state, priceScale, event.localY);\n            }\n            model._internal_scrollTimeTo(event.localX);\n            if (this._private__scrollXAnimation !== null) {\n                this._private__scrollXAnimation._internal_addPosition(timeScale._internal_rightOffset(), now);\n            }\n        }\n    }\n}\n\nclass PriceAxisStub {\n    constructor(side, options, params, borderVisible, bottomColor) {\n        this._private__invalidated = true;\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => this._internal_paint(3 /* InvalidationLevel.Full */);\n        this._private__isLeft = side === 'left';\n        this._private__rendererOptionsProvider = params._internal_rendererOptionsProvider;\n        this._private__options = options;\n        this._private__borderVisible = borderVisible;\n        this._private__bottomColor = bottomColor;\n        this._private__cell = document.createElement('div');\n        this._private__cell.style.width = '25px';\n        this._private__cell.style.height = '100%';\n        this._private__cell.style.overflow = 'hidden';\n        this._private__canvasBinding = createBoundCanvas(this._private__cell, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n    }\n    _internal_destroy() {\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        this._private__canvasBinding.dispose();\n    }\n    _internal_getElement() {\n        return this._private__cell;\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_setSize(newSize) {\n        if (!equalSizes(this._private__size, newSize)) {\n            this._private__size = newSize;\n            this._private__canvasBinding.resizeCanvasElement(newSize);\n            this._private__cell.style.width = `${newSize.width}px`;\n            this._private__cell.style.height = `${newSize.height}px`;\n            this._private__invalidated = true;\n        }\n    }\n    _internal_paint(type) {\n        if (type < 3 /* InvalidationLevel.Full */ && !this._private__invalidated) {\n            return;\n        }\n        if (this._private__size.width === 0 || this._private__size.height === 0) {\n            return;\n        }\n        this._private__invalidated = false;\n        this._private__canvasBinding.applySuggestedBitmapSize();\n        const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n        if (target !== null) {\n            target.useBitmapCoordinateSpace((scope) => {\n                this._private__drawBackground(scope);\n                this._private__drawBorder(scope);\n            });\n        }\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, horizontalPixelRatio, verticalPixelRatio }) {\n        if (!this._private__borderVisible()) {\n            return;\n        }\n        ctx.fillStyle = this._private__options.timeScale.borderColor;\n        const horzBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * horizontalPixelRatio);\n        const vertBorderSize = Math.floor(this._private__rendererOptionsProvider._internal_options()._internal_borderSize * verticalPixelRatio);\n        const left = (this._private__isLeft) ? bitmapSize.width - horzBorderSize : 0;\n        ctx.fillRect(left, 0, horzBorderSize, vertBorderSize);\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__bottomColor());\n    }\n}\n\nfunction markWithGreaterWeight(a, b) {\n    return a._internal_weight > b._internal_weight ? a : b;\n}\nclass TimeAxisWidget {\n    constructor(chartWidget) {\n        this._private__leftStub = null;\n        this._private__rightStub = null;\n        this._private__rendererOptions = null;\n        this._private__mouseDown = false;\n        this._private__size = size$1({ width: 0, height: 0 });\n        this._private__sizeChanged = new Delegate();\n        this._private__widthCache = new TextWidthCache(5);\n        this._private__isSettingSize = false;\n        this._private__canvasSuggestedBitmapSizeChangedHandler = () => {\n            if (!this._private__isSettingSize) {\n                this._private__chart._internal_model()._internal_lightUpdate();\n            }\n        };\n        this._private__topCanvasSuggestedBitmapSizeChangedHandler = () => {\n            if (!this._private__isSettingSize) {\n                this._private__chart._internal_model()._internal_lightUpdate();\n            }\n        };\n        this._private__chart = chartWidget;\n        this._private__options = chartWidget._internal_options().layout;\n        this._private__element = document.createElement('tr');\n        this._private__leftStubCell = document.createElement('td');\n        this._private__leftStubCell.style.padding = '0';\n        this._private__rightStubCell = document.createElement('td');\n        this._private__rightStubCell.style.padding = '0';\n        this._private__cell = document.createElement('td');\n        this._private__cell.style.height = '25px';\n        this._private__cell.style.padding = '0';\n        this._private__dv = document.createElement('div');\n        this._private__dv.style.width = '100%';\n        this._private__dv.style.height = '100%';\n        this._private__dv.style.position = 'relative';\n        this._private__dv.style.overflow = 'hidden';\n        this._private__cell.appendChild(this._private__dv);\n        this._private__canvasBinding = createBoundCanvas(this._private__dv, size$1({ width: 16, height: 16 }));\n        this._private__canvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        const canvas = this._private__canvasBinding.canvasElement;\n        canvas.style.position = 'absolute';\n        canvas.style.zIndex = '1';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        this._private__topCanvasBinding = createBoundCanvas(this._private__dv, size$1({ width: 16, height: 16 }));\n        this._private__topCanvasBinding.subscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        const topCanvas = this._private__topCanvasBinding.canvasElement;\n        topCanvas.style.position = 'absolute';\n        topCanvas.style.zIndex = '2';\n        topCanvas.style.left = '0';\n        topCanvas.style.top = '0';\n        this._private__element.appendChild(this._private__leftStubCell);\n        this._private__element.appendChild(this._private__cell);\n        this._private__element.appendChild(this._private__rightStubCell);\n        this._private__recreateStubs();\n        this._private__chart._internal_model()._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__recreateStubs.bind(this), this);\n        this._private__mouseEventHandler = new MouseEventHandler(this._private__topCanvasBinding.canvasElement, this, {\n            _internal_treatVertTouchDragAsPageScroll: () => true,\n            _internal_treatHorzTouchDragAsPageScroll: () => false,\n        });\n    }\n    _internal_destroy() {\n        this._private__mouseEventHandler._internal_destroy();\n        if (this._private__leftStub !== null) {\n            this._private__leftStub._internal_destroy();\n        }\n        if (this._private__rightStub !== null) {\n            this._private__rightStub._internal_destroy();\n        }\n        this._private__topCanvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__topCanvasSuggestedBitmapSizeChangedHandler);\n        this._private__topCanvasBinding.dispose();\n        this._private__canvasBinding.unsubscribeSuggestedBitmapSizeChanged(this._private__canvasSuggestedBitmapSizeChangedHandler);\n        this._private__canvasBinding.dispose();\n    }\n    _internal_getElement() {\n        return this._private__element;\n    }\n    _internal_leftStub() {\n        return this._private__leftStub;\n    }\n    _internal_rightStub() {\n        return this._private__rightStub;\n    }\n    _internal_mouseDownEvent(event) {\n        if (this._private__mouseDown) {\n            return;\n        }\n        this._private__mouseDown = true;\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_startScaleTime(event.localX);\n    }\n    _internal_touchStartEvent(event) {\n        this._internal_mouseDownEvent(event);\n    }\n    _internal_mouseDownOutsideEvent() {\n        const model = this._private__chart._internal_model();\n        if (!model._internal_timeScale()._internal_isEmpty() && this._private__mouseDown) {\n            this._private__mouseDown = false;\n            if (this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n                model._internal_endScaleTime();\n            }\n        }\n    }\n    _internal_pressedMouseMoveEvent(event) {\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() || !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_scaleTimeTo(event.localX);\n    }\n    _internal_touchMoveEvent(event) {\n        this._internal_pressedMouseMoveEvent(event);\n    }\n    _internal_mouseUpEvent() {\n        this._private__mouseDown = false;\n        const model = this._private__chart._internal_model();\n        if (model._internal_timeScale()._internal_isEmpty() && !this._private__chart._internal_options().handleScale.axisPressedMouseMove.time) {\n            return;\n        }\n        model._internal_endScaleTime();\n    }\n    _internal_touchEndEvent() {\n        this._internal_mouseUpEvent();\n    }\n    _internal_mouseDoubleClickEvent() {\n        if (this._private__chart._internal_options().handleScale.axisDoubleClickReset.time) {\n            this._private__chart._internal_model()._internal_resetTimeScale();\n        }\n    }\n    _internal_doubleTapEvent() {\n        this._internal_mouseDoubleClickEvent();\n    }\n    _internal_mouseEnterEvent() {\n        if (this._private__chart._internal_model()._internal_options().handleScale.axisPressedMouseMove.time) {\n            this._private__setCursor(1 /* CursorType.EwResize */);\n        }\n    }\n    _internal_mouseLeaveEvent() {\n        this._private__setCursor(0 /* CursorType.Default */);\n    }\n    _internal_getSize() {\n        return this._private__size;\n    }\n    _internal_sizeChanged() {\n        return this._private__sizeChanged;\n    }\n    _internal_setSizes(timeAxisSize, leftStubWidth, rightStubWidth) {\n        if (!equalSizes(this._private__size, timeAxisSize)) {\n            this._private__size = timeAxisSize;\n            this._private__isSettingSize = true;\n            this._private__canvasBinding.resizeCanvasElement(timeAxisSize);\n            this._private__topCanvasBinding.resizeCanvasElement(timeAxisSize);\n            this._private__isSettingSize = false;\n            this._private__cell.style.width = `${timeAxisSize.width}px`;\n            this._private__cell.style.height = `${timeAxisSize.height}px`;\n            this._private__sizeChanged._internal_fire(timeAxisSize);\n        }\n        if (this._private__leftStub !== null) {\n            this._private__leftStub._internal_setSize(size$1({ width: leftStubWidth, height: timeAxisSize.height }));\n        }\n        if (this._private__rightStub !== null) {\n            this._private__rightStub._internal_setSize(size$1({ width: rightStubWidth, height: timeAxisSize.height }));\n        }\n    }\n    _internal_optimalHeight() {\n        const rendererOptions = this._private__getRendererOptions();\n        return Math.ceil(\n        // rendererOptions.offsetSize +\n        rendererOptions._internal_borderSize +\n            rendererOptions._internal_tickLength +\n            rendererOptions._internal_fontSize +\n            rendererOptions._internal_paddingTop +\n            rendererOptions._internal_paddingBottom +\n            rendererOptions._internal_labelBottomOffset);\n    }\n    _internal_update() {\n        // this call has side-effect - it regenerates marks on the time scale\n        this._private__chart._internal_model()._internal_timeScale()._internal_marks();\n    }\n    _internal_getBitmapSize() {\n        return this._private__canvasBinding.bitmapSize;\n    }\n    _internal_drawBitmap(ctx, x, y) {\n        const bitmapSize = this._internal_getBitmapSize();\n        if (bitmapSize.width > 0 && bitmapSize.height > 0) {\n            ctx.drawImage(this._private__canvasBinding.canvasElement, x, y);\n        }\n    }\n    _internal_paint(type) {\n        if (type === 0 /* InvalidationLevel.None */) {\n            return;\n        }\n        if (type !== 1 /* InvalidationLevel.Cursor */) {\n            this._private__canvasBinding.applySuggestedBitmapSize();\n            const target = tryCreateCanvasRenderingTarget2D(this._private__canvasBinding);\n            if (target !== null) {\n                target.useBitmapCoordinateSpace((scope) => {\n                    this._private__drawBackground(scope);\n                    this._private__drawBorder(scope);\n                });\n                this._private__drawTickMarks(target);\n                // atm we don't have sources to be drawn on time axis except crosshair which is rendered on top level canvas\n                // so let's don't call this code at all for now\n                // this._drawLabels(this._chart.model().dataSources(), target);\n            }\n            if (this._private__leftStub !== null) {\n                this._private__leftStub._internal_paint(type);\n            }\n            if (this._private__rightStub !== null) {\n                this._private__rightStub._internal_paint(type);\n            }\n        }\n        this._private__topCanvasBinding.applySuggestedBitmapSize();\n        const topTarget = tryCreateCanvasRenderingTarget2D(this._private__topCanvasBinding);\n        if (topTarget !== null) {\n            topTarget.useBitmapCoordinateSpace(({ context: ctx, bitmapSize }) => {\n                ctx.clearRect(0, 0, bitmapSize.width, bitmapSize.height);\n            });\n            this._private__drawLabels([this._private__chart._internal_model()._internal_crosshairSource()], topTarget);\n        }\n    }\n    _private__drawBackground({ context: ctx, bitmapSize }) {\n        clearRect(ctx, 0, 0, bitmapSize.width, bitmapSize.height, this._private__chart._internal_model()._internal_backgroundBottomColor());\n    }\n    _private__drawBorder({ context: ctx, bitmapSize, verticalPixelRatio }) {\n        if (this._private__chart._internal_options().timeScale.borderVisible) {\n            ctx.fillStyle = this._private__lineColor();\n            const borderSize = Math.max(1, Math.floor(this._private__getRendererOptions()._internal_borderSize * verticalPixelRatio));\n            ctx.fillRect(0, 0, bitmapSize.width, borderSize);\n        }\n    }\n    _private__drawTickMarks(target) {\n        const timeScale = this._private__chart._internal_model()._internal_timeScale();\n        const tickMarks = timeScale._internal_marks();\n        if (!tickMarks || tickMarks.length === 0) {\n            return;\n        }\n        let maxWeight = tickMarks.reduce(markWithGreaterWeight, tickMarks[0])._internal_weight;\n        // special case: it looks strange if 15:00 is bold but 14:00 is not\n        // so if maxWeight > TickMarkWeight.Hour1 and < TickMarkWeight.Day reduce it to TickMarkWeight.Hour1\n        if (maxWeight > 30 /* TickMarkWeight.Hour1 */ && maxWeight < 50 /* TickMarkWeight.Day */) {\n            maxWeight = 30 /* TickMarkWeight.Hour1 */;\n        }\n        const rendererOptions = this._private__getRendererOptions();\n        const options = timeScale._internal_options();\n        if (options.borderVisible && options.ticksVisible) {\n            target.useBitmapCoordinateSpace(({ context: ctx, horizontalPixelRatio, verticalPixelRatio }) => {\n                ctx.strokeStyle = this._private__lineColor();\n                ctx.fillStyle = this._private__lineColor();\n                const tickWidth = Math.max(1, Math.floor(horizontalPixelRatio));\n                const tickOffset = Math.floor(horizontalPixelRatio * 0.5);\n                ctx.beginPath();\n                const tickLen = Math.round(rendererOptions._internal_tickLength * verticalPixelRatio);\n                for (let index = tickMarks.length; index--;) {\n                    const x = Math.round(tickMarks[index]._internal_coord * horizontalPixelRatio);\n                    ctx.rect(x - tickOffset, 0, tickWidth, tickLen);\n                }\n                ctx.fill();\n            });\n        }\n        target.useMediaCoordinateSpace(({ context: ctx }) => {\n            const yText = (rendererOptions._internal_borderSize +\n                rendererOptions._internal_tickLength +\n                rendererOptions._internal_paddingTop +\n                rendererOptions._internal_fontSize / 2);\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = this._private__textColor();\n            // draw base marks\n            ctx.font = this._private__baseFont();\n            for (const tickMark of tickMarks) {\n                if (tickMark._internal_weight < maxWeight) {\n                    const coordinate = tickMark._internal_needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark._internal_coord, tickMark._internal_label) : tickMark._internal_coord;\n                    ctx.fillText(tickMark._internal_label, coordinate, yText);\n                }\n            }\n            ctx.font = this._private__baseBoldFont();\n            for (const tickMark of tickMarks) {\n                if (tickMark._internal_weight >= maxWeight) {\n                    const coordinate = tickMark._internal_needAlignCoordinate ? this._private__alignTickMarkLabelCoordinate(ctx, tickMark._internal_coord, tickMark._internal_label) : tickMark._internal_coord;\n                    ctx.fillText(tickMark._internal_label, coordinate, yText);\n                }\n            }\n        });\n    }\n    _private__alignTickMarkLabelCoordinate(ctx, coordinate, labelText) {\n        const labelWidth = this._private__widthCache._internal_measureText(ctx, labelText);\n        const labelWidthHalf = labelWidth / 2;\n        const leftTextCoordinate = Math.floor(coordinate - labelWidthHalf) + 0.5;\n        if (leftTextCoordinate < 0) {\n            coordinate = coordinate + Math.abs(0 - leftTextCoordinate);\n        }\n        else if (leftTextCoordinate + labelWidth > this._private__size.width) {\n            coordinate = coordinate - Math.abs(this._private__size.width - (leftTextCoordinate + labelWidth));\n        }\n        return coordinate;\n    }\n    _private__drawLabels(sources, target) {\n        const rendererOptions = this._private__getRendererOptions();\n        for (const source of sources) {\n            for (const view of source._internal_timeAxisViews()) {\n                view._internal_renderer()._internal_draw(target, rendererOptions);\n            }\n        }\n    }\n    _private__lineColor() {\n        return this._private__chart._internal_options().timeScale.borderColor;\n    }\n    _private__textColor() {\n        return this._private__options.textColor;\n    }\n    _private__fontSize() {\n        return this._private__options.fontSize;\n    }\n    _private__baseFont() {\n        return makeFont(this._private__fontSize(), this._private__options.fontFamily);\n    }\n    _private__baseBoldFont() {\n        return makeFont(this._private__fontSize(), this._private__options.fontFamily, 'bold');\n    }\n    _private__getRendererOptions() {\n        if (this._private__rendererOptions === null) {\n            this._private__rendererOptions = {\n                _internal_borderSize: 1 /* Constants.BorderSize */,\n                _internal_baselineOffset: NaN,\n                _internal_paddingTop: NaN,\n                _internal_paddingBottom: NaN,\n                _internal_paddingHorizontal: NaN,\n                _internal_tickLength: 5 /* Constants.TickLength */,\n                _internal_fontSize: NaN,\n                _internal_font: '',\n                _internal_widthCache: new TextWidthCache(),\n                _internal_labelBottomOffset: 0,\n            };\n        }\n        const rendererOptions = this._private__rendererOptions;\n        const newFont = this._private__baseFont();\n        if (rendererOptions._internal_font !== newFont) {\n            const fontSize = this._private__fontSize();\n            rendererOptions._internal_fontSize = fontSize;\n            rendererOptions._internal_font = newFont;\n            rendererOptions._internal_paddingTop = 3 * fontSize / 12;\n            rendererOptions._internal_paddingBottom = 3 * fontSize / 12;\n            rendererOptions._internal_paddingHorizontal = 9 * fontSize / 12;\n            rendererOptions._internal_baselineOffset = 0;\n            rendererOptions._internal_labelBottomOffset = 4 * fontSize / 12;\n            rendererOptions._internal_widthCache._internal_reset();\n        }\n        return this._private__rendererOptions;\n    }\n    _private__setCursor(type) {\n        this._private__cell.style.cursor = type === 1 /* CursorType.EwResize */ ? 'ew-resize' : 'default';\n    }\n    _private__recreateStubs() {\n        const model = this._private__chart._internal_model();\n        const options = model._internal_options();\n        if (!options.leftPriceScale.visible && this._private__leftStub !== null) {\n            this._private__leftStubCell.removeChild(this._private__leftStub._internal_getElement());\n            this._private__leftStub._internal_destroy();\n            this._private__leftStub = null;\n        }\n        if (!options.rightPriceScale.visible && this._private__rightStub !== null) {\n            this._private__rightStubCell.removeChild(this._private__rightStub._internal_getElement());\n            this._private__rightStub._internal_destroy();\n            this._private__rightStub = null;\n        }\n        const rendererOptionsProvider = this._private__chart._internal_model()._internal_rendererOptionsProvider();\n        const params = {\n            _internal_rendererOptionsProvider: rendererOptionsProvider,\n        };\n        const borderVisibleGetter = () => {\n            return options.leftPriceScale.borderVisible && model._internal_timeScale()._internal_options().borderVisible;\n        };\n        const bottomColorGetter = () => model._internal_backgroundBottomColor();\n        if (options.leftPriceScale.visible && this._private__leftStub === null) {\n            this._private__leftStub = new PriceAxisStub('left', options, params, borderVisibleGetter, bottomColorGetter);\n            this._private__leftStubCell.appendChild(this._private__leftStub._internal_getElement());\n        }\n        if (options.rightPriceScale.visible && this._private__rightStub === null) {\n            this._private__rightStub = new PriceAxisStub('right', options, params, borderVisibleGetter, bottomColorGetter);\n            this._private__rightStubCell.appendChild(this._private__rightStub._internal_getElement());\n        }\n    }\n}\n\nconst windowsChrome = isChromiumBased() && isWindows();\nclass ChartWidget {\n    constructor(container, options) {\n        this._private__paneWidgets = [];\n        this._private__drawRafId = 0;\n        this._private__height = 0;\n        this._private__width = 0;\n        this._private__leftPriceAxisWidth = 0;\n        this._private__rightPriceAxisWidth = 0;\n        this._private__invalidateMask = null;\n        this._private__drawPlanned = false;\n        this._private__clicked = new Delegate();\n        this._private__crosshairMoved = new Delegate();\n        this._private__observer = null;\n        this._private__container = container;\n        this._private__options = options;\n        this._private__element = document.createElement('div');\n        this._private__element.classList.add('tv-lightweight-charts');\n        this._private__element.style.overflow = 'hidden';\n        this._private__element.style.width = '100%';\n        this._private__element.style.height = '100%';\n        disableSelection(this._private__element);\n        this._private__tableElement = document.createElement('table');\n        this._private__tableElement.setAttribute('cellspacing', '0');\n        this._private__element.appendChild(this._private__tableElement);\n        this._private__onWheelBound = this._private__onMousewheel.bind(this);\n        if (shouldSubscribeMouseWheel(this._private__options)) {\n            this._private__setMouseWheelEventListener(true);\n        }\n        this._private__model = new ChartModel(this._private__invalidateHandler.bind(this), this._private__options);\n        this._internal_model()._internal_crosshairMoved()._internal_subscribe(this._private__onPaneWidgetCrosshairMoved.bind(this), this);\n        this._private__timeAxisWidget = new TimeAxisWidget(this);\n        this._private__tableElement.appendChild(this._private__timeAxisWidget._internal_getElement());\n        const usedObserver = options.autoSize && this._private__installObserver();\n        // observer could not fire event immediately for some cases\n        // so we have to set initial size manually\n        let width = this._private__options.width;\n        let height = this._private__options.height;\n        // ignore width/height options if observer has actually been used\n        // however respect options if installing resize observer failed\n        if (usedObserver || width === 0 || height === 0) {\n            const containerRect = container.getBoundingClientRect();\n            width = width || containerRect.width;\n            height = height || containerRect.height;\n        }\n        // BEWARE: resize must be called BEFORE _syncGuiWithModel (in constructor only)\n        // or after but with adjustSize to properly update time scale\n        this._internal_resize(width, height);\n        this._private__syncGuiWithModel();\n        container.appendChild(this._private__element);\n        this._private__updateTimeAxisVisibility();\n        this._private__model._internal_timeScale()._internal_optionsApplied()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n        this._private__model._internal_priceScalesOptionsChanged()._internal_subscribe(this._private__model._internal_fullUpdate.bind(this._private__model), this);\n    }\n    _internal_model() {\n        return this._private__model;\n    }\n    _internal_options() {\n        return this._private__options;\n    }\n    _internal_paneWidgets() {\n        return this._private__paneWidgets;\n    }\n    _internal_timeAxisWidget() {\n        return this._private__timeAxisWidget;\n    }\n    _internal_destroy() {\n        this._private__setMouseWheelEventListener(false);\n        if (this._private__drawRafId !== 0) {\n            window.cancelAnimationFrame(this._private__drawRafId);\n        }\n        this._private__model._internal_crosshairMoved()._internal_unsubscribeAll(this);\n        this._private__model._internal_timeScale()._internal_optionsApplied()._internal_unsubscribeAll(this);\n        this._private__model._internal_priceScalesOptionsChanged()._internal_unsubscribeAll(this);\n        this._private__model._internal_destroy();\n        for (const paneWidget of this._private__paneWidgets) {\n            this._private__tableElement.removeChild(paneWidget._internal_getElement());\n            paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_destroy();\n        }\n        this._private__paneWidgets = [];\n        // for (const paneSeparator of this._paneSeparators) {\n        // \tthis._destroySeparator(paneSeparator);\n        // }\n        // this._paneSeparators = [];\n        ensureNotNull(this._private__timeAxisWidget)._internal_destroy();\n        if (this._private__element.parentElement !== null) {\n            this._private__element.parentElement.removeChild(this._private__element);\n        }\n        this._private__crosshairMoved._internal_destroy();\n        this._private__clicked._internal_destroy();\n        this._private__uninstallObserver();\n    }\n    _internal_resize(width, height, forceRepaint = false) {\n        if (this._private__height === height && this._private__width === width) {\n            return;\n        }\n        const sizeHint = suggestChartSize(size$1({ width, height }));\n        this._private__height = sizeHint.height;\n        this._private__width = sizeHint.width;\n        const heightStr = this._private__height + 'px';\n        const widthStr = this._private__width + 'px';\n        ensureNotNull(this._private__element).style.height = heightStr;\n        ensureNotNull(this._private__element).style.width = widthStr;\n        this._private__tableElement.style.height = heightStr;\n        this._private__tableElement.style.width = widthStr;\n        if (forceRepaint) {\n            this._private__drawImpl(InvalidateMask._internal_full(), performance.now());\n        }\n        else {\n            this._private__model._internal_fullUpdate();\n        }\n    }\n    _internal_paint(invalidateMask) {\n        if (invalidateMask === undefined) {\n            invalidateMask = InvalidateMask._internal_full();\n        }\n        for (let i = 0; i < this._private__paneWidgets.length; i++) {\n            this._private__paneWidgets[i]._internal_paint(invalidateMask._internal_invalidateForPane(i)._internal_level);\n        }\n        if (this._private__options.timeScale.visible) {\n            this._private__timeAxisWidget._internal_paint(invalidateMask._internal_fullInvalidation());\n        }\n    }\n    _internal_applyOptions(options) {\n        const currentlyHasMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n        // we don't need to merge options here because it's done in chart model\n        // and since both model and widget share the same object it will be done automatically for widget as well\n        // not ideal solution for sure, but it work's for now Â¯\\_(ãƒ„)_/Â¯\n        this._private__model._internal_applyOptions(options);\n        const shouldHaveMouseWheelListener = shouldSubscribeMouseWheel(this._private__options);\n        if (shouldHaveMouseWheelListener !== currentlyHasMouseWheelListener) {\n            this._private__setMouseWheelEventListener(shouldHaveMouseWheelListener);\n        }\n        this._private__updateTimeAxisVisibility();\n        this._private__applyAutoSizeOptions(options);\n    }\n    _internal_clicked() {\n        return this._private__clicked;\n    }\n    _internal_crosshairMoved() {\n        return this._private__crosshairMoved;\n    }\n    _internal_takeScreenshot() {\n        if (this._private__invalidateMask !== null) {\n            this._private__drawImpl(this._private__invalidateMask, performance.now());\n            this._private__invalidateMask = null;\n        }\n        const screeshotBitmapSize = this._private__traverseLayout(null);\n        const screenshotCanvas = document.createElement('canvas');\n        screenshotCanvas.width = screeshotBitmapSize.width;\n        screenshotCanvas.height = screeshotBitmapSize.height;\n        const ctx = ensureNotNull(screenshotCanvas.getContext('2d'));\n        this._private__traverseLayout(ctx);\n        return screenshotCanvas;\n    }\n    _internal_getPriceAxisWidth(position) {\n        if (position === 'left' && !this._private__isLeftAxisVisible()) {\n            return 0;\n        }\n        if (position === 'right' && !this._private__isRightAxisVisible()) {\n            return 0;\n        }\n        if (this._private__paneWidgets.length === 0) {\n            return 0;\n        }\n        // we don't need to worry about exactly pane widget here\n        // because all pane widgets have the same width of price axis widget\n        // see _adjustSizeImpl\n        const priceAxisWidget = position === 'left'\n            ? this._private__paneWidgets[0]._internal_leftPriceAxisWidget()\n            : this._private__paneWidgets[0]._internal_rightPriceAxisWidget();\n        return ensureNotNull(priceAxisWidget)._internal_getWidth();\n    }\n    _internal_autoSizeActive() {\n        return this._private__options.autoSize && this._private__observer !== null;\n    }\n    // eslint-disable-next-line complexity\n    _private__applyAutoSizeOptions(options) {\n        if (options.autoSize === undefined && this._private__observer && (options.width !== undefined || options.height !== undefined)) {\n            warn(`You should turn autoSize off explicitly before specifying sizes; try adding options.autoSize: false to new options`);\n            return;\n        }\n        if (options.autoSize && !this._private__observer) {\n            // installing observer will override resize if successful\n            this._private__installObserver();\n        }\n        if (options.autoSize === false && this._private__observer !== null) {\n            this._private__uninstallObserver();\n        }\n        if (!options.autoSize && (options.width !== undefined || options.height !== undefined)) {\n            this._internal_resize(options.width || this._private__width, options.height || this._private__height);\n        }\n    }\n    /**\n     * Traverses the widget's layout (pane and axis child widgets),\n     * draws the screenshot (if rendering context is passed) and returns the screenshot bitmap size\n     *\n     * @param ctx - if passed, used to draw the screenshot of widget\n     * @returns screenshot bitmap size\n     */\n    _private__traverseLayout(ctx) {\n        let totalWidth = 0;\n        let totalHeight = 0;\n        const firstPane = this._private__paneWidgets[0];\n        const drawPriceAxises = (position, targetX) => {\n            let targetY = 0;\n            for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n                const paneWidget = this._private__paneWidgets[paneIndex];\n                const priceAxisWidget = ensureNotNull(position === 'left' ? paneWidget._internal_leftPriceAxisWidget() : paneWidget._internal_rightPriceAxisWidget());\n                const bitmapSize = priceAxisWidget._internal_getBitmapSize();\n                if (ctx !== null) {\n                    priceAxisWidget._internal_drawBitmap(ctx, targetX, targetY);\n                }\n                targetY += bitmapSize.height;\n                // if (paneIndex < this._paneWidgets.length - 1) {\n                // \tconst separator = this._paneSeparators[paneIndex];\n                // \tconst separatorBitmapSize = separator.getBitmapSize();\n                // \tif (ctx !== null) {\n                // \t\tseparator.drawBitmap(ctx, targetX, targetY);\n                // \t}\n                // \ttargetY += separatorBitmapSize.height;\n                // }\n            }\n        };\n        // draw left price scale if exists\n        if (this._private__isLeftAxisVisible()) {\n            drawPriceAxises('left', 0);\n            const leftAxisBitmapWidth = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n            totalWidth += leftAxisBitmapWidth;\n        }\n        for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; paneIndex++) {\n            const paneWidget = this._private__paneWidgets[paneIndex];\n            const bitmapSize = paneWidget._internal_getBitmapSize();\n            if (ctx !== null) {\n                paneWidget._internal_drawBitmap(ctx, totalWidth, totalHeight);\n            }\n            totalHeight += bitmapSize.height;\n            // if (paneIndex < this._paneWidgets.length - 1) {\n            // \tconst separator = this._paneSeparators[paneIndex];\n            // \tconst separatorBitmapSize = separator.getBitmapSize();\n            // \tif (ctx !== null) {\n            // \t\tseparator.drawBitmap(ctx, totalWidth, totalHeight);\n            // \t}\n            // \ttotalHeight += separatorBitmapSize.height;\n            // }\n        }\n        const firstPaneBitmapWidth = firstPane._internal_getBitmapSize().width;\n        totalWidth += firstPaneBitmapWidth;\n        // draw right price scale if exists\n        if (this._private__isRightAxisVisible()) {\n            drawPriceAxises('right', totalWidth);\n            const rightAxisBitmapWidth = ensureNotNull(firstPane._internal_rightPriceAxisWidget())._internal_getBitmapSize().width;\n            totalWidth += rightAxisBitmapWidth;\n        }\n        const drawStub = (position, targetX, targetY) => {\n            const stub = ensureNotNull(position === 'left' ? this._private__timeAxisWidget._internal_leftStub() : this._private__timeAxisWidget._internal_rightStub());\n            stub._internal_drawBitmap(ensureNotNull(ctx), targetX, targetY);\n        };\n        // draw time scale and stubs\n        if (this._private__options.timeScale.visible) {\n            const timeAxisBitmapSize = this._private__timeAxisWidget._internal_getBitmapSize();\n            if (ctx !== null) {\n                let targetX = 0;\n                if (this._private__isLeftAxisVisible()) {\n                    drawStub('left', targetX, totalHeight);\n                    targetX = ensureNotNull(firstPane._internal_leftPriceAxisWidget())._internal_getBitmapSize().width;\n                }\n                this._private__timeAxisWidget._internal_drawBitmap(ctx, targetX, totalHeight);\n                targetX += timeAxisBitmapSize.width;\n                if (this._private__isRightAxisVisible()) {\n                    drawStub('right', targetX, totalHeight);\n                }\n            }\n            totalHeight += timeAxisBitmapSize.height;\n        }\n        return size$1({\n            width: totalWidth,\n            height: totalHeight,\n        });\n    }\n    // eslint-disable-next-line complexity\n    _private__adjustSizeImpl() {\n        let totalStretch = 0;\n        let leftPriceAxisWidth = 0;\n        let rightPriceAxisWidth = 0;\n        for (const paneWidget of this._private__paneWidgets) {\n            if (this._private__isLeftAxisVisible()) {\n                leftPriceAxisWidth = Math.max(leftPriceAxisWidth, ensureNotNull(paneWidget._internal_leftPriceAxisWidget())._internal_optimalWidth());\n            }\n            if (this._private__isRightAxisVisible()) {\n                rightPriceAxisWidth = Math.max(rightPriceAxisWidth, ensureNotNull(paneWidget._internal_rightPriceAxisWidget())._internal_optimalWidth());\n            }\n            totalStretch += paneWidget._internal_stretchFactor();\n        }\n        leftPriceAxisWidth = suggestPriceScaleWidth(leftPriceAxisWidth);\n        rightPriceAxisWidth = suggestPriceScaleWidth(rightPriceAxisWidth);\n        const width = this._private__width;\n        const height = this._private__height;\n        const paneWidth = Math.max(width - leftPriceAxisWidth - rightPriceAxisWidth, 0);\n        // const separatorCount = this._paneSeparators.length;\n        // const separatorHeight = SEPARATOR_HEIGHT;\n        const separatorsHeight = 0; // separatorHeight * separatorCount;\n        const timeAxisVisible = this._private__options.timeScale.visible;\n        let timeAxisHeight = timeAxisVisible ? this._private__timeAxisWidget._internal_optimalHeight() : 0;\n        timeAxisHeight = suggestTimeScaleHeight(timeAxisHeight);\n        const otherWidgetHeight = separatorsHeight + timeAxisHeight;\n        const totalPaneHeight = height < otherWidgetHeight ? 0 : height - otherWidgetHeight;\n        const stretchPixels = totalPaneHeight / totalStretch;\n        let accumulatedHeight = 0;\n        for (let paneIndex = 0; paneIndex < this._private__paneWidgets.length; ++paneIndex) {\n            const paneWidget = this._private__paneWidgets[paneIndex];\n            paneWidget._internal_setState(this._private__model._internal_panes()[paneIndex]);\n            let paneHeight = 0;\n            let calculatePaneHeight = 0;\n            if (paneIndex === this._private__paneWidgets.length - 1) {\n                calculatePaneHeight = totalPaneHeight - accumulatedHeight;\n            }\n            else {\n                calculatePaneHeight = Math.round(paneWidget._internal_stretchFactor() * stretchPixels);\n            }\n            paneHeight = Math.max(calculatePaneHeight, 2);\n            accumulatedHeight += paneHeight;\n            paneWidget._internal_setSize(size$1({ width: paneWidth, height: paneHeight }));\n            if (this._private__isLeftAxisVisible()) {\n                paneWidget._internal_setPriceAxisSize(leftPriceAxisWidth, 'left');\n            }\n            if (this._private__isRightAxisVisible()) {\n                paneWidget._internal_setPriceAxisSize(rightPriceAxisWidth, 'right');\n            }\n            if (paneWidget._internal_state()) {\n                this._private__model._internal_setPaneHeight(paneWidget._internal_state(), paneHeight);\n            }\n        }\n        this._private__timeAxisWidget._internal_setSizes(size$1({ width: timeAxisVisible ? paneWidth : 0, height: timeAxisHeight }), timeAxisVisible ? leftPriceAxisWidth : 0, timeAxisVisible ? rightPriceAxisWidth : 0);\n        this._private__model._internal_setWidth(paneWidth);\n        if (this._private__leftPriceAxisWidth !== leftPriceAxisWidth) {\n            this._private__leftPriceAxisWidth = leftPriceAxisWidth;\n        }\n        if (this._private__rightPriceAxisWidth !== rightPriceAxisWidth) {\n            this._private__rightPriceAxisWidth = rightPriceAxisWidth;\n        }\n    }\n    _private__setMouseWheelEventListener(add) {\n        if (add) {\n            this._private__element.addEventListener('wheel', this._private__onWheelBound, { passive: false });\n            return;\n        }\n        this._private__element.removeEventListener('wheel', this._private__onWheelBound);\n    }\n    _private__determineWheelSpeedAdjustment(event) {\n        switch (event.deltaMode) {\n            case event.DOM_DELTA_PAGE:\n                // one screen at time scroll mode\n                return 120;\n            case event.DOM_DELTA_LINE:\n                // one line at time scroll mode\n                return 32;\n        }\n        if (!windowsChrome) {\n            return 1;\n        }\n        // Chromium on Windows has a bug where the scroll speed isn't correctly\n        // adjusted for high density displays. We need to correct for this so that\n        // scroll speed is consistent between browsers.\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1001735\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=1207308\n        return (1 / window.devicePixelRatio);\n    }\n    _private__onMousewheel(event) {\n        if ((event.deltaX === 0 || !this._private__options.handleScroll.mouseWheel) &&\n            (event.deltaY === 0 || !this._private__options.handleScale.mouseWheel)) {\n            return;\n        }\n        const scrollSpeedAdjustment = this._private__determineWheelSpeedAdjustment(event);\n        const deltaX = scrollSpeedAdjustment * event.deltaX / 100;\n        const deltaY = -(scrollSpeedAdjustment * event.deltaY / 100);\n        if (event.cancelable) {\n            event.preventDefault();\n        }\n        if (deltaY !== 0 && this._private__options.handleScale.mouseWheel) {\n            const zoomScale = Math.sign(deltaY) * Math.min(1, Math.abs(deltaY));\n            const scrollPosition = event.clientX - this._private__element.getBoundingClientRect().left;\n            this._internal_model()._internal_zoomTime(scrollPosition, zoomScale);\n        }\n        if (deltaX !== 0 && this._private__options.handleScroll.mouseWheel) {\n            this._internal_model()._internal_scrollChart(deltaX * -80); // 80 is a made up coefficient, and minus is for the \"natural\" scroll\n        }\n    }\n    _private__drawImpl(invalidateMask, time) {\n        var _a;\n        const invalidationType = invalidateMask._internal_fullInvalidation();\n        // actions for full invalidation ONLY (not shared with light)\n        if (invalidationType === 3 /* InvalidationLevel.Full */) {\n            this._private__updateGui();\n        }\n        // light or full invalidate actions\n        if (invalidationType === 3 /* InvalidationLevel.Full */ ||\n            invalidationType === 2 /* InvalidationLevel.Light */) {\n            this._private__applyMomentaryAutoScale(invalidateMask);\n            this._private__applyTimeScaleInvalidations(invalidateMask, time);\n            this._private__timeAxisWidget._internal_update();\n            this._private__paneWidgets.forEach((pane) => {\n                pane._internal_updatePriceAxisWidgets();\n            });\n            // In the case a full invalidation has been postponed during the draw, reapply\n            // the timescale invalidations. A full invalidation would mean there is a change\n            // in the timescale width (caused by price scale changes) that needs to be drawn\n            // right away to avoid flickering.\n            if (((_a = this._private__invalidateMask) === null || _a === void 0 ? void 0 : _a._internal_fullInvalidation()) === 3 /* InvalidationLevel.Full */) {\n                this._private__invalidateMask._internal_merge(invalidateMask);\n                this._private__updateGui();\n                this._private__applyMomentaryAutoScale(this._private__invalidateMask);\n                this._private__applyTimeScaleInvalidations(this._private__invalidateMask, time);\n                invalidateMask = this._private__invalidateMask;\n                this._private__invalidateMask = null;\n            }\n        }\n        this._internal_paint(invalidateMask);\n    }\n    _private__applyTimeScaleInvalidations(invalidateMask, time) {\n        for (const tsInvalidation of invalidateMask._internal_timeScaleInvalidations()) {\n            this._private__applyTimeScaleInvalidation(tsInvalidation, time);\n        }\n    }\n    _private__applyMomentaryAutoScale(invalidateMask) {\n        const panes = this._private__model._internal_panes();\n        for (let i = 0; i < panes.length; i++) {\n            if (invalidateMask._internal_invalidateForPane(i)._internal_autoScale) {\n                panes[i]._internal_momentaryAutoScale();\n            }\n        }\n    }\n    _private__applyTimeScaleInvalidation(invalidation, time) {\n        const timeScale = this._private__model._internal_timeScale();\n        switch (invalidation._internal_type) {\n            case 0 /* TimeScaleInvalidationType.FitContent */:\n                timeScale._internal_fitContent();\n                break;\n            case 1 /* TimeScaleInvalidationType.ApplyRange */:\n                timeScale._internal_setLogicalRange(invalidation._internal_value);\n                break;\n            case 2 /* TimeScaleInvalidationType.ApplyBarSpacing */:\n                timeScale._internal_setBarSpacing(invalidation._internal_value);\n                break;\n            case 3 /* TimeScaleInvalidationType.ApplyRightOffset */:\n                timeScale._internal_setRightOffset(invalidation._internal_value);\n                break;\n            case 4 /* TimeScaleInvalidationType.Reset */:\n                timeScale._internal_restoreDefault();\n                break;\n            case 5 /* TimeScaleInvalidationType.Animation */:\n                if (!invalidation._internal_value._internal_finished(time)) {\n                    timeScale._internal_setRightOffset(invalidation._internal_value._internal_getPosition(time));\n                }\n                break;\n        }\n    }\n    _private__invalidateHandler(invalidateMask) {\n        if (this._private__invalidateMask !== null) {\n            this._private__invalidateMask._internal_merge(invalidateMask);\n        }\n        else {\n            this._private__invalidateMask = invalidateMask;\n        }\n        if (!this._private__drawPlanned) {\n            this._private__drawPlanned = true;\n            this._private__drawRafId = window.requestAnimationFrame((time) => {\n                this._private__drawPlanned = false;\n                this._private__drawRafId = 0;\n                if (this._private__invalidateMask !== null) {\n                    const mask = this._private__invalidateMask;\n                    this._private__invalidateMask = null;\n                    this._private__drawImpl(mask, time);\n                    for (const tsInvalidation of mask._internal_timeScaleInvalidations()) {\n                        if (tsInvalidation._internal_type === 5 /* TimeScaleInvalidationType.Animation */ && !tsInvalidation._internal_value._internal_finished(time)) {\n                            this._internal_model()._internal_setTimeScaleAnimation(tsInvalidation._internal_value);\n                            break;\n                        }\n                    }\n                }\n            });\n        }\n    }\n    _private__updateGui() {\n        this._private__syncGuiWithModel();\n    }\n    // private _destroySeparator(separator: PaneSeparator): void {\n    // \tthis._tableElement.removeChild(separator.getElement());\n    // \tseparator.destroy();\n    // }\n    _private__syncGuiWithModel() {\n        const panes = this._private__model._internal_panes();\n        const targetPaneWidgetsCount = panes.length;\n        const actualPaneWidgetsCount = this._private__paneWidgets.length;\n        // Remove (if needed) pane widgets and separators\n        for (let i = targetPaneWidgetsCount; i < actualPaneWidgetsCount; i++) {\n            const paneWidget = ensureDefined(this._private__paneWidgets.pop());\n            this._private__tableElement.removeChild(paneWidget._internal_getElement());\n            paneWidget._internal_clicked()._internal_unsubscribeAll(this);\n            paneWidget._internal_destroy();\n            // const paneSeparator = this._paneSeparators.pop();\n            // if (paneSeparator !== undefined) {\n            // \tthis._destroySeparator(paneSeparator);\n            // }\n        }\n        // Create (if needed) new pane widgets and separators\n        for (let i = actualPaneWidgetsCount; i < targetPaneWidgetsCount; i++) {\n            const paneWidget = new PaneWidget(this, panes[i]);\n            paneWidget._internal_clicked()._internal_subscribe(this._private__onPaneWidgetClicked.bind(this), this);\n            this._private__paneWidgets.push(paneWidget);\n            // create and insert separator\n            // if (i > 1) {\n            // \tconst paneSeparator = new PaneSeparator(this, i - 1, i, true);\n            // \tthis._paneSeparators.push(paneSeparator);\n            // \tthis._tableElement.insertBefore(paneSeparator.getElement(), this._timeAxisWidget.getElement());\n            // }\n            // insert paneWidget\n            this._private__tableElement.insertBefore(paneWidget._internal_getElement(), this._private__timeAxisWidget._internal_getElement());\n        }\n        for (let i = 0; i < targetPaneWidgetsCount; i++) {\n            const state = panes[i];\n            const paneWidget = this._private__paneWidgets[i];\n            if (paneWidget._internal_state() !== state) {\n                paneWidget._internal_setState(state);\n            }\n            else {\n                paneWidget._internal_updatePriceAxisWidgetsStates();\n            }\n        }\n        this._private__updateTimeAxisVisibility();\n        this._private__adjustSizeImpl();\n    }\n    _private__getMouseEventParamsImpl(index, point, event) {\n        var _a;\n        const seriesData = new Map();\n        if (index !== null) {\n            const serieses = this._private__model._internal_serieses();\n            serieses.forEach((s) => {\n                // TODO: replace with search left\n                const data = s._internal_bars()._internal_search(index);\n                if (data !== null) {\n                    seriesData.set(s, data);\n                }\n            });\n        }\n        let clientTime;\n        if (index !== null) {\n            const timePoint = (_a = this._private__model._internal_timeScale()._internal_indexToTimeScalePoint(index)) === null || _a === void 0 ? void 0 : _a._internal_originalTime;\n            if (timePoint !== undefined) {\n                clientTime = timePoint;\n            }\n        }\n        const hoveredSource = this._internal_model()._internal_hoveredSource();\n        const hoveredSeries = hoveredSource !== null && hoveredSource._internal_source instanceof Series\n            ? hoveredSource._internal_source\n            : undefined;\n        const hoveredObject = hoveredSource !== null && hoveredSource._internal_object !== undefined\n            ? hoveredSource._internal_object._internal_externalId\n            : undefined;\n        return {\n            _internal_time: clientTime,\n            _internal_index: index !== null && index !== void 0 ? index : undefined,\n            _internal_point: point !== null && point !== void 0 ? point : undefined,\n            _internal_hoveredSeries: hoveredSeries,\n            _internal_seriesData: seriesData,\n            _internal_hoveredObject: hoveredObject,\n            _internal_touchMouseEventData: event !== null && event !== void 0 ? event : undefined,\n        };\n    }\n    _private__onPaneWidgetClicked(time, point, event) {\n        this._private__clicked._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n    }\n    _private__onPaneWidgetCrosshairMoved(time, point, event) {\n        this._private__crosshairMoved._internal_fire(() => this._private__getMouseEventParamsImpl(time, point, event));\n    }\n    _private__updateTimeAxisVisibility() {\n        const display = this._private__options.timeScale.visible ? '' : 'none';\n        this._private__timeAxisWidget._internal_getElement().style.display = display;\n    }\n    _private__isLeftAxisVisible() {\n        return this._private__paneWidgets[0]._internal_state()._internal_leftPriceScale()._internal_options().visible;\n    }\n    _private__isRightAxisVisible() {\n        return this._private__paneWidgets[0]._internal_state()._internal_rightPriceScale()._internal_options().visible;\n    }\n    _private__installObserver() {\n        // eslint-disable-next-line no-restricted-syntax\n        if (!('ResizeObserver' in window)) {\n            warn('Options contains \"autoSize\" flag, but the browser does not support ResizeObserver feature. Please provide polyfill.');\n            return false;\n        }\n        else {\n            this._private__observer = new ResizeObserver((entries) => {\n                const containerEntry = entries.find((entry) => entry.target === this._private__container);\n                if (!containerEntry) {\n                    return;\n                }\n                this._internal_resize(containerEntry.contentRect.width, containerEntry.contentRect.height);\n            });\n            this._private__observer.observe(this._private__container, { box: 'border-box' });\n            return true;\n        }\n    }\n    _private__uninstallObserver() {\n        if (this._private__observer !== null) {\n            this._private__observer.disconnect();\n        }\n    }\n}\nfunction disableSelection(element) {\n    element.style.userSelect = 'none';\n    // eslint-disable-next-line deprecation/deprecation\n    element.style.webkitUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.msUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.MozUserSelect = 'none';\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-member-access\n    element.style.webkitTapHighlightColor = 'transparent';\n}\nfunction shouldSubscribeMouseWheel(options) {\n    return Boolean(options.handleScroll.mouseWheel || options.handleScale.mouseWheel);\n}\n\nfunction getColoredLineBasedSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    return res;\n}\nfunction getAreaSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.lineColor !== undefined) {\n        res._internal_lineColor = item.lineColor;\n    }\n    if (item.topColor !== undefined) {\n        res._internal_topColor = item.topColor;\n    }\n    if (item.bottomColor !== undefined) {\n        res._internal_bottomColor = item.bottomColor;\n    }\n    return res;\n}\nfunction getBaselineSeriesPlotRow(time, index, item, originalTime) {\n    const val = item.value;\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [val, val, val, val], _internal_originalTime: originalTime };\n    if (item.topLineColor !== undefined) {\n        res._internal_topLineColor = item.topLineColor;\n    }\n    if (item.bottomLineColor !== undefined) {\n        res._internal_bottomLineColor = item.bottomLineColor;\n    }\n    if (item.topFillColor1 !== undefined) {\n        res._internal_topFillColor1 = item.topFillColor1;\n    }\n    if (item.topFillColor2 !== undefined) {\n        res._internal_topFillColor2 = item.topFillColor2;\n    }\n    if (item.bottomFillColor1 !== undefined) {\n        res._internal_bottomFillColor1 = item.bottomFillColor1;\n    }\n    if (item.bottomFillColor2 !== undefined) {\n        res._internal_bottomFillColor2 = item.bottomFillColor2;\n    }\n    return res;\n}\nfunction getBarSeriesPlotRow(time, index, item, originalTime) {\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [item.open, item.high, item.low, item.close], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    return res;\n}\nfunction getCandlestickSeriesPlotRow(time, index, item, originalTime) {\n    const res = { _internal_index: index, _internal_time: time, _internal_value: [item.open, item.high, item.low, item.close], _internal_originalTime: originalTime };\n    if (item.color !== undefined) {\n        res._internal_color = item.color;\n    }\n    if (item.borderColor !== undefined) {\n        res._internal_borderColor = item.borderColor;\n    }\n    if (item.wickColor !== undefined) {\n        res._internal_wickColor = item.wickColor;\n    }\n    return res;\n}\nfunction isSeriesPlotRow(row) {\n    return row._internal_value !== undefined;\n}\nfunction wrapWhitespaceData(createPlotRowFn) {\n    return (time, index, bar, originalTime) => {\n        if (isWhitespaceData(bar)) {\n            return { _internal_time: time, _internal_index: index, _internal_originalTime: originalTime };\n        }\n        return createPlotRowFn(time, index, bar, originalTime);\n    };\n}\nconst seriesPlotRowFnMap = {\n    Candlestick: wrapWhitespaceData(getCandlestickSeriesPlotRow),\n    Bar: wrapWhitespaceData(getBarSeriesPlotRow),\n    Area: wrapWhitespaceData(getAreaSeriesPlotRow),\n    Baseline: wrapWhitespaceData(getBaselineSeriesPlotRow),\n    Histogram: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n    Line: wrapWhitespaceData(getColoredLineBasedSeriesPlotRow),\n};\nfunction getSeriesPlotRowCreator(seriesType) {\n    return seriesPlotRowFnMap[seriesType];\n}\n\nfunction hours(count) {\n    return count * 60 * 60 * 1000;\n}\nfunction minutes(count) {\n    return count * 60 * 1000;\n}\nfunction seconds(count) {\n    return count * 1000;\n}\nconst intradayWeightDivisors = [\n    { _internal_divisor: seconds(1), _internal_weight: 10 /* TickMarkWeight.Second */ },\n    { _internal_divisor: minutes(1), _internal_weight: 20 /* TickMarkWeight.Minute1 */ },\n    { _internal_divisor: minutes(5), _internal_weight: 21 /* TickMarkWeight.Minute5 */ },\n    { _internal_divisor: minutes(30), _internal_weight: 22 /* TickMarkWeight.Minute30 */ },\n    { _internal_divisor: hours(1), _internal_weight: 30 /* TickMarkWeight.Hour1 */ },\n    { _internal_divisor: hours(3), _internal_weight: 31 /* TickMarkWeight.Hour3 */ },\n    { _internal_divisor: hours(6), _internal_weight: 32 /* TickMarkWeight.Hour6 */ },\n    { _internal_divisor: hours(12), _internal_weight: 33 /* TickMarkWeight.Hour12 */ },\n];\nfunction weightByTime(currentDate, prevDate) {\n    if (currentDate.getUTCFullYear() !== prevDate.getUTCFullYear()) {\n        return 70 /* TickMarkWeight.Year */;\n    }\n    else if (currentDate.getUTCMonth() !== prevDate.getUTCMonth()) {\n        return 60 /* TickMarkWeight.Month */;\n    }\n    else if (currentDate.getUTCDate() !== prevDate.getUTCDate()) {\n        return 50 /* TickMarkWeight.Day */;\n    }\n    for (let i = intradayWeightDivisors.length - 1; i >= 0; --i) {\n        if (Math.floor(prevDate.getTime() / intradayWeightDivisors[i]._internal_divisor) !== Math.floor(currentDate.getTime() / intradayWeightDivisors[i]._internal_divisor)) {\n            return intradayWeightDivisors[i]._internal_weight;\n        }\n    }\n    return 0 /* TickMarkWeight.LessThanSecond */;\n}\nfunction fillWeightsForPoints(sortedTimePoints, startIndex = 0) {\n    if (sortedTimePoints.length === 0) {\n        return;\n    }\n    let prevTime = startIndex === 0 ? null : sortedTimePoints[startIndex - 1]._internal_time._internal_timestamp;\n    let prevDate = prevTime !== null ? new Date(prevTime * 1000) : null;\n    let totalTimeDiff = 0;\n    for (let index = startIndex; index < sortedTimePoints.length; ++index) {\n        const currentPoint = sortedTimePoints[index];\n        const currentDate = new Date(currentPoint._internal_time._internal_timestamp * 1000);\n        if (prevDate !== null) {\n            currentPoint._internal_timeWeight = weightByTime(currentDate, prevDate);\n        }\n        totalTimeDiff += currentPoint._internal_time._internal_timestamp - (prevTime || currentPoint._internal_time._internal_timestamp);\n        prevTime = currentPoint._internal_time._internal_timestamp;\n        prevDate = currentDate;\n    }\n    if (startIndex === 0 && sortedTimePoints.length > 1) {\n        // let's guess a weight for the first point\n        // let's say the previous point was average time back in the history\n        const averageTimeDiff = Math.ceil(totalTimeDiff / (sortedTimePoints.length - 1));\n        const approxPrevDate = new Date((sortedTimePoints[0]._internal_time._internal_timestamp - averageTimeDiff) * 1000);\n        sortedTimePoints[0]._internal_timeWeight = weightByTime(new Date(sortedTimePoints[0]._internal_time._internal_timestamp * 1000), approxPrevDate);\n    }\n}\n\n/// <reference types=\"_build-time-constants\" />\nfunction businessDayConverter(time) {\n    if (!isBusinessDay(time)) {\n        throw new Error('time must be of type BusinessDay');\n    }\n    const date = new Date(Date.UTC(time.year, time.month - 1, time.day, 0, 0, 0, 0));\n    return {\n        _internal_timestamp: Math.round(date.getTime() / 1000),\n        _internal_businessDay: time,\n    };\n}\nfunction timestampConverter(time) {\n    if (!isUTCTimestamp(time)) {\n        throw new Error('time must be of type isUTCTimestamp');\n    }\n    return {\n        _internal_timestamp: time,\n    };\n}\nfunction selectTimeConverter(data) {\n    if (data.length === 0) {\n        return null;\n    }\n    if (isBusinessDay(data[0].time)) {\n        return businessDayConverter;\n    }\n    return timestampConverter;\n}\nfunction convertTime(time) {\n    if (isUTCTimestamp(time)) {\n        return timestampConverter(time);\n    }\n    if (!isBusinessDay(time)) {\n        return businessDayConverter(stringToBusinessDay(time));\n    }\n    return businessDayConverter(time);\n}\nconst validDateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\nfunction stringToBusinessDay(value) {\n    {\n        // in some browsers (I look at your Chrome) the Date constructor may accept invalid date string\n        // but parses them in \"implementation specific\" way\n        // for example 2019-1-1 isn't the same as 2019-01-01 (for Chrome both are \"valid\" date strings)\n        // see https://bugs.chromium.org/p/chromium/issues/detail?id=968939\n        // so, we need to be sure that date has valid format to avoid strange behavior and hours of debugging\n        // but let's do this in development build only because of perf\n        if (!validDateRegex.test(value)) {\n            throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n        }\n    }\n    const d = new Date(value);\n    if (isNaN(d.getTime())) {\n        throw new Error(`Invalid date string=${value}, expected format=yyyy-mm-dd`);\n    }\n    return {\n        day: d.getUTCDate(),\n        month: d.getUTCMonth() + 1,\n        year: d.getUTCFullYear(),\n    };\n}\nfunction convertStringToBusinessDay(value) {\n    if (isString(value.time)) {\n        value.time = stringToBusinessDay(value.time);\n    }\n}\nfunction convertStringsToBusinessDays(data) {\n    return data.forEach(convertStringToBusinessDay);\n}\nfunction createEmptyTimePointData(timePoint) {\n    return { _internal_index: 0, _internal_mapping: new Map(), _internal_timePoint: timePoint };\n}\nfunction seriesRowsFirsAndLastTime(seriesRows) {\n    if (seriesRows === undefined || seriesRows.length === 0) {\n        return undefined;\n    }\n    return {\n        _internal_firstTime: seriesRows[0]._internal_time._internal_timestamp,\n        _internal_lastTime: seriesRows[seriesRows.length - 1]._internal_time._internal_timestamp,\n    };\n}\nfunction seriesUpdateInfo(seriesRows, prevSeriesRows) {\n    const firstAndLastTime = seriesRowsFirsAndLastTime(seriesRows);\n    const prevFirstAndLastTime = seriesRowsFirsAndLastTime(prevSeriesRows);\n    if (firstAndLastTime !== undefined && prevFirstAndLastTime !== undefined) {\n        return {\n            _internal_lastBarUpdatedOrNewBarsAddedToTheRight: firstAndLastTime._internal_lastTime >= prevFirstAndLastTime._internal_lastTime &&\n                firstAndLastTime._internal_firstTime >= prevFirstAndLastTime._internal_firstTime,\n        };\n    }\n    return undefined;\n}\nfunction timeScalePointTime(mergedPointData) {\n    let result;\n    mergedPointData.forEach((v) => {\n        if (result === undefined) {\n            result = v._internal_originalTime;\n        }\n    });\n    return ensureDefined(result);\n}\nfunction saveOriginalTime(data) {\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    if (data._internal_originalTime === undefined) {\n        data._internal_originalTime = data.time;\n    }\n}\nclass DataLayer {\n    constructor() {\n        // note that _pointDataByTimePoint and _seriesRowsBySeries shares THE SAME objects in their values between each other\n        // it's just different kind of maps to make usages/perf better\n        this._private__pointDataByTimePoint = new Map();\n        this._private__seriesRowsBySeries = new Map();\n        this._private__seriesLastTimePoint = new Map();\n        // this is kind of \"dest\" values (in opposite to \"source\" ones) - we don't need to modify it manually, the only by calling _updateTimeScalePoints or updateSeriesData methods\n        this._private__sortedTimePoints = [];\n    }\n    _internal_destroy() {\n        this._private__pointDataByTimePoint.clear();\n        this._private__seriesRowsBySeries.clear();\n        this._private__seriesLastTimePoint.clear();\n        this._private__sortedTimePoints = [];\n    }\n    _internal_setSeriesData(series, data) {\n        let needCleanupPoints = this._private__pointDataByTimePoint.size !== 0;\n        let isTimeScaleAffected = false;\n        // save previous series rows data before it's replaced inside this._setRowsToSeries\n        const prevSeriesRows = this._private__seriesRowsBySeries.get(series);\n        if (prevSeriesRows !== undefined) {\n            if (this._private__seriesRowsBySeries.size === 1) {\n                needCleanupPoints = false;\n                isTimeScaleAffected = true;\n                // perf optimization - if there is only 1 series, then we can just clear and fill everything from scratch\n                this._private__pointDataByTimePoint.clear();\n            }\n            else {\n                // perf optimization - actually we have to use this._pointDataByTimePoint for going through here\n                // but as soon as this._sortedTimePoints is just a different form of _pointDataByTimePoint we can use it as well\n                for (const point of this._private__sortedTimePoints) {\n                    if (point.pointData._internal_mapping.delete(series)) {\n                        isTimeScaleAffected = true;\n                    }\n                }\n            }\n        }\n        let seriesRows = [];\n        if (data.length !== 0) {\n            const extendedData = data;\n            extendedData.forEach((i) => saveOriginalTime(i));\n            convertStringsToBusinessDays(data);\n            const timeConverter = ensureNotNull(selectTimeConverter(data));\n            const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n            seriesRows = extendedData.map((item) => {\n                const time = timeConverter(item.time);\n                let timePointData = this._private__pointDataByTimePoint.get(time._internal_timestamp);\n                if (timePointData === undefined) {\n                    // the indexes will be sync later\n                    timePointData = createEmptyTimePointData(time);\n                    this._private__pointDataByTimePoint.set(time._internal_timestamp, timePointData);\n                    isTimeScaleAffected = true;\n                }\n                const row = createPlotRow(time, timePointData._internal_index, item, item._internal_originalTime);\n                timePointData._internal_mapping.set(series, row);\n                return row;\n            });\n        }\n        if (needCleanupPoints) {\n            // we deleted the old data from mapping and added the new ones\n            // so there might be empty points now, let's remove them first\n            this._private__cleanupPointsData();\n        }\n        this._private__setRowsToSeries(series, seriesRows);\n        let firstChangedPointIndex = -1;\n        if (isTimeScaleAffected) {\n            // then generate the time scale points\n            // timeWeight will be updates in _updateTimeScalePoints later\n            const newTimeScalePoints = [];\n            this._private__pointDataByTimePoint.forEach((pointData) => {\n                newTimeScalePoints.push({\n                    _internal_timeWeight: 0,\n                    _internal_time: pointData._internal_timePoint,\n                    pointData,\n                    _internal_originalTime: timeScalePointTime(pointData._internal_mapping),\n                });\n            });\n            newTimeScalePoints.sort((t1, t2) => t1._internal_time._internal_timestamp - t2._internal_time._internal_timestamp);\n            firstChangedPointIndex = this._private__replaceTimeScalePoints(newTimeScalePoints);\n        }\n        return this._private__getUpdateResponse(series, firstChangedPointIndex, seriesUpdateInfo(this._private__seriesRowsBySeries.get(series), prevSeriesRows));\n    }\n    _internal_removeSeries(series) {\n        return this._internal_setSeriesData(series, []);\n    }\n    _internal_updateSeriesData(series, data) {\n        const extendedData = data;\n        saveOriginalTime(extendedData);\n        convertStringToBusinessDay(data);\n        const time = ensureNotNull(selectTimeConverter([data]))(data.time);\n        const lastSeriesTime = this._private__seriesLastTimePoint.get(series);\n        if (lastSeriesTime !== undefined && time._internal_timestamp < lastSeriesTime._internal_timestamp) {\n            throw new Error(`Cannot update oldest data, last time=${lastSeriesTime._internal_timestamp}, new time=${time._internal_timestamp}`);\n        }\n        let pointDataAtTime = this._private__pointDataByTimePoint.get(time._internal_timestamp);\n        // if no point data found for the new data item\n        // that means that we need to update scale\n        const affectsTimeScale = pointDataAtTime === undefined;\n        if (pointDataAtTime === undefined) {\n            // the indexes will be sync later\n            pointDataAtTime = createEmptyTimePointData(time);\n            this._private__pointDataByTimePoint.set(time._internal_timestamp, pointDataAtTime);\n        }\n        const createPlotRow = getSeriesPlotRowCreator(series._internal_seriesType());\n        const plotRow = createPlotRow(time, pointDataAtTime._internal_index, data, extendedData._internal_originalTime);\n        pointDataAtTime._internal_mapping.set(series, plotRow);\n        this._private__updateLastSeriesRow(series, plotRow);\n        const info = { _internal_lastBarUpdatedOrNewBarsAddedToTheRight: isSeriesPlotRow(plotRow) };\n        // if point already exist on the time scale - we don't need to make a full update and just make an incremental one\n        if (!affectsTimeScale) {\n            return this._private__getUpdateResponse(series, -1, info);\n        }\n        const newPoint = {\n            _internal_timeWeight: 0,\n            _internal_time: pointDataAtTime._internal_timePoint,\n            pointData: pointDataAtTime,\n            _internal_originalTime: timeScalePointTime(pointDataAtTime._internal_mapping),\n        };\n        const insertIndex = lowerbound(this._private__sortedTimePoints, newPoint._internal_time._internal_timestamp, (a, b) => a._internal_time._internal_timestamp < b);\n        // yes, I know that this array is readonly and this change is intended to make it performative\n        // we marked _sortedTimePoints array as readonly to avoid modifying this array anywhere else\n        // but this place is exceptional case due performance reasons, sorry\n        this._private__sortedTimePoints.splice(insertIndex, 0, newPoint);\n        for (let index = insertIndex; index < this._private__sortedTimePoints.length; ++index) {\n            assignIndexToPointData(this._private__sortedTimePoints[index].pointData, index);\n        }\n        fillWeightsForPoints(this._private__sortedTimePoints, insertIndex);\n        return this._private__getUpdateResponse(series, insertIndex, info);\n    }\n    _private__updateLastSeriesRow(series, plotRow) {\n        let seriesData = this._private__seriesRowsBySeries.get(series);\n        if (seriesData === undefined) {\n            seriesData = [];\n            this._private__seriesRowsBySeries.set(series, seriesData);\n        }\n        const lastSeriesRow = seriesData.length !== 0 ? seriesData[seriesData.length - 1] : null;\n        if (lastSeriesRow === null || plotRow._internal_time._internal_timestamp > lastSeriesRow._internal_time._internal_timestamp) {\n            if (isSeriesPlotRow(plotRow)) {\n                seriesData.push(plotRow);\n            }\n        }\n        else {\n            if (isSeriesPlotRow(plotRow)) {\n                seriesData[seriesData.length - 1] = plotRow;\n            }\n            else {\n                seriesData.splice(-1, 1);\n            }\n        }\n        this._private__seriesLastTimePoint.set(series, plotRow._internal_time);\n    }\n    _private__setRowsToSeries(series, seriesRows) {\n        if (seriesRows.length !== 0) {\n            this._private__seriesRowsBySeries.set(series, seriesRows.filter(isSeriesPlotRow));\n            this._private__seriesLastTimePoint.set(series, seriesRows[seriesRows.length - 1]._internal_time);\n        }\n        else {\n            this._private__seriesRowsBySeries.delete(series);\n            this._private__seriesLastTimePoint.delete(series);\n        }\n    }\n    _private__cleanupPointsData() {\n        // let's treat all current points as \"potentially removed\"\n        // we could create an array with actually potentially removed points\n        // but most likely this array will be similar to _sortedTimePoints so let's avoid using additional memory\n        // note that we can use _sortedTimePoints here since a point might be removed only it was here previously\n        for (const point of this._private__sortedTimePoints) {\n            if (point.pointData._internal_mapping.size === 0) {\n                this._private__pointDataByTimePoint.delete(point._internal_time._internal_timestamp);\n            }\n        }\n    }\n    /**\n     * Sets new time scale and make indexes valid for all series\n     *\n     * @returns The index of the first changed point or `-1` if there is no change.\n     */\n    _private__replaceTimeScalePoints(newTimePoints) {\n        let firstChangedPointIndex = -1;\n        // search the first different point and \"syncing\" time weight by the way\n        for (let index = 0; index < this._private__sortedTimePoints.length && index < newTimePoints.length; ++index) {\n            const oldPoint = this._private__sortedTimePoints[index];\n            const newPoint = newTimePoints[index];\n            if (oldPoint._internal_time._internal_timestamp !== newPoint._internal_time._internal_timestamp) {\n                firstChangedPointIndex = index;\n                break;\n            }\n            // re-assign point's time weight for points if time is the same (and all prior times was the same)\n            newPoint._internal_timeWeight = oldPoint._internal_timeWeight;\n            assignIndexToPointData(newPoint.pointData, index);\n        }\n        if (firstChangedPointIndex === -1 && this._private__sortedTimePoints.length !== newTimePoints.length) {\n            // the common part of the prev and the new points are the same\n            // so the first changed point is the next after the common part\n            firstChangedPointIndex = Math.min(this._private__sortedTimePoints.length, newTimePoints.length);\n        }\n        if (firstChangedPointIndex === -1) {\n            // if no time scale changed, then do nothing\n            return -1;\n        }\n        // if time scale points are changed that means that we need to make full update to all series (with clearing points)\n        // but first we need to synchronize indexes and re-fill time weights\n        for (let index = firstChangedPointIndex; index < newTimePoints.length; ++index) {\n            assignIndexToPointData(newTimePoints[index].pointData, index);\n        }\n        // re-fill time weights for point after the first changed one\n        fillWeightsForPoints(newTimePoints, firstChangedPointIndex);\n        this._private__sortedTimePoints = newTimePoints;\n        return firstChangedPointIndex;\n    }\n    _private__getBaseIndex() {\n        if (this._private__seriesRowsBySeries.size === 0) {\n            // if we have no data then 'reset' the base index to null\n            return null;\n        }\n        let baseIndex = 0;\n        this._private__seriesRowsBySeries.forEach((data) => {\n            if (data.length !== 0) {\n                baseIndex = Math.max(baseIndex, data[data.length - 1]._internal_index);\n            }\n        });\n        return baseIndex;\n    }\n    _private__getUpdateResponse(updatedSeries, firstChangedPointIndex, info) {\n        const dataUpdateResponse = {\n            _internal_series: new Map(),\n            _internal_timeScale: {\n                _internal_baseIndex: this._private__getBaseIndex(),\n            },\n        };\n        if (firstChangedPointIndex !== -1) {\n            // TODO: it's possible to make perf improvements by checking what series has data after firstChangedPointIndex\n            // but let's skip for now\n            this._private__seriesRowsBySeries.forEach((data, s) => {\n                dataUpdateResponse._internal_series.set(s, {\n                    _internal_data: data,\n                    _internal_info: s === updatedSeries ? info : undefined,\n                });\n            });\n            // if the series data was set to [] it will have already been removed from _seriesRowBySeries\n            // meaning the forEach above won't add the series to the data update response\n            // so we handle that case here\n            if (!this._private__seriesRowsBySeries.has(updatedSeries)) {\n                dataUpdateResponse._internal_series.set(updatedSeries, { _internal_data: [], _internal_info: info });\n            }\n            dataUpdateResponse._internal_timeScale._internal_points = this._private__sortedTimePoints;\n            dataUpdateResponse._internal_timeScale._internal_firstChangedPointIndex = firstChangedPointIndex;\n        }\n        else {\n            const seriesData = this._private__seriesRowsBySeries.get(updatedSeries);\n            // if no seriesData found that means that we just removed the series\n            dataUpdateResponse._internal_series.set(updatedSeries, { _internal_data: seriesData || [], _internal_info: info });\n        }\n        return dataUpdateResponse;\n    }\n}\nfunction assignIndexToPointData(pointData, index) {\n    // first, nevertheless update index of point data (\"make it valid\")\n    pointData._internal_index = index;\n    // and then we need to sync indexes for all series\n    pointData._internal_mapping.forEach((seriesRow) => {\n        seriesRow._internal_index = index;\n    });\n}\n\nfunction singleValueData(plotRow) {\n    return {\n        value: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n        time: plotRow._internal_originalTime,\n    };\n}\nfunction lineData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_color !== undefined) {\n        result.color = plotRow._internal_color;\n    }\n    return result;\n}\nfunction areaData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_lineColor !== undefined) {\n        result.lineColor = plotRow._internal_lineColor;\n    }\n    if (plotRow._internal_topColor !== undefined) {\n        result.topColor = plotRow._internal_topColor;\n    }\n    if (plotRow._internal_bottomColor !== undefined) {\n        result.bottomColor = plotRow._internal_bottomColor;\n    }\n    return result;\n}\nfunction baselineData(plotRow) {\n    const result = singleValueData(plotRow);\n    if (plotRow._internal_topLineColor !== undefined) {\n        result.topLineColor = plotRow._internal_topLineColor;\n    }\n    if (plotRow._internal_bottomLineColor !== undefined) {\n        result.bottomLineColor = plotRow._internal_bottomLineColor;\n    }\n    if (plotRow._internal_topFillColor1 !== undefined) {\n        result.topFillColor1 = plotRow._internal_topFillColor1;\n    }\n    if (plotRow._internal_topFillColor2 !== undefined) {\n        result.topFillColor2 = plotRow._internal_topFillColor2;\n    }\n    if (plotRow._internal_bottomFillColor1 !== undefined) {\n        result.bottomFillColor1 = plotRow._internal_bottomFillColor1;\n    }\n    if (plotRow._internal_bottomFillColor2 !== undefined) {\n        result.bottomFillColor2 = plotRow._internal_bottomFillColor2;\n    }\n    return result;\n}\nfunction ohlcData(plotRow) {\n    return {\n        open: plotRow._internal_value[0 /* PlotRowValueIndex.Open */],\n        high: plotRow._internal_value[1 /* PlotRowValueIndex.High */],\n        low: plotRow._internal_value[2 /* PlotRowValueIndex.Low */],\n        close: plotRow._internal_value[3 /* PlotRowValueIndex.Close */],\n        time: plotRow._internal_originalTime,\n    };\n}\nfunction barData(plotRow) {\n    const result = ohlcData(plotRow);\n    if (plotRow._internal_color !== undefined) {\n        result.color = plotRow._internal_color;\n    }\n    return result;\n}\nfunction candlestickData(plotRow) {\n    const result = ohlcData(plotRow);\n    const { _internal_color: color, _internal_borderColor: borderColor, _internal_wickColor: wickColor } = plotRow;\n    if (color !== undefined) {\n        result.color = color;\n    }\n    if (borderColor !== undefined) {\n        result.borderColor = borderColor;\n    }\n    if (wickColor !== undefined) {\n        result.wickColor = wickColor;\n    }\n    return result;\n}\nconst seriesPlotRowToDataMap = {\n    Area: areaData,\n    Line: lineData,\n    Baseline: baselineData,\n    Histogram: lineData,\n    Bar: barData,\n    Candlestick: candlestickData,\n};\nfunction getSeriesDataCreator(seriesType) {\n    return seriesPlotRowToDataMap[seriesType];\n}\n\nconst crosshairOptionsDefaults = {\n    vertLine: {\n        color: '#9598A1',\n        width: 1,\n        style: 3 /* LineStyle.LargeDashed */,\n        visible: true,\n        labelVisible: true,\n        labelBackgroundColor: '#131722',\n    },\n    horzLine: {\n        color: '#9598A1',\n        width: 1,\n        style: 3 /* LineStyle.LargeDashed */,\n        visible: true,\n        labelVisible: true,\n        labelBackgroundColor: '#131722',\n    },\n    mode: 1 /* CrosshairMode.Magnet */,\n};\n\nconst gridOptionsDefaults = {\n    vertLines: {\n        color: '#D6DCDE',\n        style: 0 /* LineStyle.Solid */,\n        visible: true,\n    },\n    horzLines: {\n        color: '#D6DCDE',\n        style: 0 /* LineStyle.Solid */,\n        visible: true,\n    },\n};\n\nconst layoutOptionsDefaults = {\n    background: {\n        type: \"solid\" /* ColorType.Solid */,\n        color: '#FFFFFF',\n    },\n    textColor: '#191919',\n    fontSize: 12,\n    fontFamily: defaultFontFamily,\n};\n\nconst priceScaleOptionsDefaults = {\n    autoScale: true,\n    mode: 0 /* PriceScaleMode.Normal */,\n    invertScale: false,\n    alignLabels: true,\n    borderVisible: true,\n    borderColor: '#2B2B43',\n    entireTextOnly: false,\n    visible: false,\n    ticksVisible: false,\n    scaleMargins: {\n        bottom: 0.1,\n        top: 0.2,\n    },\n};\n\nconst timeScaleOptionsDefaults = {\n    rightOffset: 0,\n    barSpacing: 6,\n    minBarSpacing: 0.5,\n    fixLeftEdge: false,\n    fixRightEdge: false,\n    lockVisibleTimeRangeOnResize: false,\n    rightBarStaysOnScroll: false,\n    borderVisible: true,\n    borderColor: '#2B2B43',\n    visible: true,\n    timeVisible: false,\n    secondsVisible: true,\n    shiftVisibleRangeOnNewBar: true,\n    ticksVisible: false,\n};\n\nconst watermarkOptionsDefaults = {\n    color: 'rgba(0, 0, 0, 0)',\n    visible: false,\n    fontSize: 48,\n    fontFamily: defaultFontFamily,\n    fontStyle: '',\n    text: '',\n    horzAlign: 'center',\n    vertAlign: 'center',\n};\n\nconst chartOptionsDefaults = {\n    width: 0,\n    height: 0,\n    autoSize: false,\n    layout: layoutOptionsDefaults,\n    crosshair: crosshairOptionsDefaults,\n    grid: gridOptionsDefaults,\n    overlayPriceScales: Object.assign({}, priceScaleOptionsDefaults),\n    leftPriceScale: Object.assign(Object.assign({}, priceScaleOptionsDefaults), { visible: false }),\n    rightPriceScale: Object.assign(Object.assign({}, priceScaleOptionsDefaults), { visible: true }),\n    timeScale: timeScaleOptionsDefaults,\n    watermark: watermarkOptionsDefaults,\n    localization: {\n        locale: isRunningOnClientSide ? navigator.language : '',\n        dateFormat: 'dd MMM \\'yy',\n    },\n    handleScroll: {\n        mouseWheel: true,\n        pressedMouseMove: true,\n        horzTouchDrag: true,\n        vertTouchDrag: true,\n    },\n    handleScale: {\n        axisPressedMouseMove: {\n            time: true,\n            price: true,\n        },\n        axisDoubleClickReset: {\n            time: true,\n            price: true,\n        },\n        mouseWheel: true,\n        pinch: true,\n    },\n    kineticScroll: {\n        mouse: false,\n        touch: true,\n    },\n    trackingMode: {\n        exitMode: 1 /* TrackingModeExitMode.OnNextTap */,\n    },\n};\n\nconst candlestickStyleDefaults = {\n    upColor: '#26a69a',\n    downColor: '#ef5350',\n    wickVisible: true,\n    borderVisible: true,\n    borderColor: '#378658',\n    borderUpColor: '#26a69a',\n    borderDownColor: '#ef5350',\n    wickColor: '#737375',\n    wickUpColor: '#26a69a',\n    wickDownColor: '#ef5350',\n};\nconst barStyleDefaults = {\n    upColor: '#26a69a',\n    downColor: '#ef5350',\n    openVisible: true,\n    thinBars: true,\n};\nconst lineStyleDefaults = {\n    color: '#2196f3',\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineWidth: 3,\n    lineType: 0 /* LineType.Simple */,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n};\nconst areaStyleDefaults = {\n    topColor: 'rgba( 46, 220, 135, 0.4)',\n    bottomColor: 'rgba( 40, 221, 100, 0)',\n    invertFilledArea: false,\n    lineColor: '#33D778',\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineWidth: 3,\n    lineType: 0 /* LineType.Simple */,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n};\nconst baselineStyleDefaults = {\n    baseValue: {\n        type: 'price',\n        price: 0,\n    },\n    topFillColor1: 'rgba(38, 166, 154, 0.28)',\n    topFillColor2: 'rgba(38, 166, 154, 0.05)',\n    topLineColor: 'rgba(38, 166, 154, 1)',\n    bottomFillColor1: 'rgba(239, 83, 80, 0.05)',\n    bottomFillColor2: 'rgba(239, 83, 80, 0.28)',\n    bottomLineColor: 'rgba(239, 83, 80, 1)',\n    lineWidth: 3,\n    lineStyle: 0 /* LineStyle.Solid */,\n    lineType: 0 /* LineType.Simple */,\n    crosshairMarkerVisible: true,\n    crosshairMarkerRadius: 4,\n    crosshairMarkerBorderColor: '',\n    crosshairMarkerBorderWidth: 2,\n    crosshairMarkerBackgroundColor: '',\n    lastPriceAnimation: 0 /* LastPriceAnimationMode.Disabled */,\n};\nconst histogramStyleDefaults = {\n    color: '#26a69a',\n    base: 0,\n};\nconst seriesOptionsDefaults = {\n    title: '',\n    visible: true,\n    lastValueVisible: true,\n    priceLineVisible: true,\n    priceLineSource: 0 /* PriceLineSource.LastBar */,\n    priceLineWidth: 1,\n    priceLineColor: '',\n    priceLineStyle: 2 /* LineStyle.Dashed */,\n    baseLineVisible: true,\n    baseLineWidth: 1,\n    baseLineColor: '#B2B5BE',\n    baseLineStyle: 0 /* LineStyle.Solid */,\n    priceFormat: {\n        type: 'price',\n        precision: 2,\n        minMove: 0.01,\n    },\n};\n\nclass PriceScaleApi {\n    constructor(chartWidget, priceScaleId) {\n        this._private__chartWidget = chartWidget;\n        this._private__priceScaleId = priceScaleId;\n    }\n    applyOptions(options) {\n        this._private__chartWidget._internal_model()._internal_applyPriceScaleOptions(this._private__priceScaleId, options);\n    }\n    options() {\n        return this._private__priceScale()._internal_options();\n    }\n    width() {\n        if (!isDefaultPriceScale(this._private__priceScaleId)) {\n            return 0;\n        }\n        return this._private__chartWidget._internal_getPriceAxisWidth(this._private__priceScaleId);\n    }\n    _private__priceScale() {\n        return ensureNotNull(this._private__chartWidget._internal_model()._internal_findPriceScale(this._private__priceScaleId))._internal_priceScale;\n    }\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction checkPriceLineOptions(options) {\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    assert(typeof options.price === 'number', `the type of 'price' price line's property must be a number, got '${typeof options.price}'`);\n}\nfunction checkItemsAreOrdered(data, allowDuplicates = false) {\n    if (data.length === 0) {\n        return;\n    }\n    let prevTime = convertTime(data[0].time)._internal_timestamp;\n    for (let i = 1; i < data.length; ++i) {\n        const currentTime = convertTime(data[i].time)._internal_timestamp;\n        const checkResult = allowDuplicates ? prevTime <= currentTime : prevTime < currentTime;\n        assert(checkResult, `data must be asc ordered by time, index=${i}, time=${currentTime}, prev time=${prevTime}`);\n        prevTime = currentTime;\n    }\n}\nfunction checkSeriesValuesType(type, data) {\n    data.forEach(getChecker(type));\n}\nfunction getChecker(type) {\n    switch (type) {\n        case 'Bar':\n        case 'Candlestick':\n            return checkBarItem.bind(null, type);\n        case 'Area':\n        case 'Baseline':\n        case 'Line':\n        case 'Histogram':\n            return checkLineItem.bind(null, type);\n    }\n}\nfunction checkBarItem(type, barItem) {\n    if (!isFulfilledData(barItem)) {\n        return;\n    }\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.open === 'number', `${type} series item data value of open must be a number, got=${typeof barItem.open}, value=${barItem.open}`);\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.high === 'number', `${type} series item data value of high must be a number, got=${typeof barItem.high}, value=${barItem.high}`);\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.low === 'number', `${type} series item data value of low must be a number, got=${typeof barItem.low}, value=${barItem.low}`);\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof barItem.close === 'number', `${type} series item data value of close must be a number, got=${typeof barItem.close}, value=${barItem.close}`);\n}\nfunction checkLineItem(type, lineItem) {\n    if (!isFulfilledData(lineItem)) {\n        return;\n    }\n    assert(\n    // eslint-disable-next-line @typescript-eslint/tslint/config\n    typeof lineItem.value === 'number', `${type} series item data value must be a number, got=${typeof lineItem.value}, value=${lineItem.value}`);\n}\n\nconst priceLineOptionsDefaults = {\n    color: '#FF0000',\n    price: 0,\n    lineStyle: 2 /* LineStyle.Dashed */,\n    lineWidth: 1,\n    lineVisible: true,\n    axisLabelVisible: true,\n    title: '',\n    axisLabelColor: '',\n    axisLabelTextColor: '',\n};\n\nclass PriceLine {\n    constructor(priceLine) {\n        this._private__priceLine = priceLine;\n    }\n    applyOptions(options) {\n        this._private__priceLine._internal_applyOptions(options);\n    }\n    options() {\n        return this._private__priceLine._internal_options();\n    }\n    _internal_priceLine() {\n        return this._private__priceLine;\n    }\n}\n\nclass SeriesApi {\n    constructor(series, dataUpdatesConsumer, priceScaleApiProvider) {\n        this._internal__series = series;\n        this._internal__dataUpdatesConsumer = dataUpdatesConsumer;\n        this._private__priceScaleApiProvider = priceScaleApiProvider;\n    }\n    priceFormatter() {\n        return this._internal__series._internal_formatter();\n    }\n    priceToCoordinate(price) {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return this._internal__series._internal_priceScale()._internal_priceToCoordinate(price, firstValue._internal_value);\n    }\n    coordinateToPrice(coordinate) {\n        const firstValue = this._internal__series._internal_firstValue();\n        if (firstValue === null) {\n            return null;\n        }\n        return this._internal__series._internal_priceScale()._internal_coordinateToPrice(coordinate, firstValue._internal_value);\n    }\n    // eslint-disable-next-line complexity\n    barsInLogicalRange(range) {\n        if (range === null) {\n            return null;\n        }\n        // we use TimeScaleVisibleRange here to convert LogicalRange to strict range properly\n        const correctedRange = new TimeScaleVisibleRange(new RangeImpl(range.from, range.to))._internal_strictRange();\n        const bars = this._internal__series._internal_bars();\n        if (bars._internal_isEmpty()) {\n            return null;\n        }\n        const dataFirstBarInRange = bars._internal_search(correctedRange._internal_left(), 1 /* MismatchDirection.NearestRight */);\n        const dataLastBarInRange = bars._internal_search(correctedRange._internal_right(), -1 /* MismatchDirection.NearestLeft */);\n        const dataFirstIndex = ensureNotNull(bars._internal_firstIndex());\n        const dataLastIndex = ensureNotNull(bars._internal_lastIndex());\n        // this means that we request data in the data gap\n        // e.g. let's say we have series with data [0..10, 30..60]\n        // and we request bars info in range [15, 25]\n        // thus, dataFirstBarInRange will be with index 30 and dataLastBarInRange with 10\n        if (dataFirstBarInRange !== null && dataLastBarInRange !== null && dataFirstBarInRange._internal_index > dataLastBarInRange._internal_index) {\n            return {\n                barsBefore: range.from - dataFirstIndex,\n                barsAfter: dataLastIndex - range.to,\n            };\n        }\n        const barsBefore = (dataFirstBarInRange === null || dataFirstBarInRange._internal_index === dataFirstIndex)\n            ? range.from - dataFirstIndex\n            : dataFirstBarInRange._internal_index - dataFirstIndex;\n        const barsAfter = (dataLastBarInRange === null || dataLastBarInRange._internal_index === dataLastIndex)\n            ? dataLastIndex - range.to\n            : dataLastIndex - dataLastBarInRange._internal_index;\n        const result = { barsBefore, barsAfter };\n        // actually they can't exist separately\n        if (dataFirstBarInRange !== null && dataLastBarInRange !== null) {\n            result.from = dataFirstBarInRange._internal_time._internal_businessDay || dataFirstBarInRange._internal_time._internal_timestamp;\n            result.to = dataLastBarInRange._internal_time._internal_businessDay || dataLastBarInRange._internal_time._internal_timestamp;\n        }\n        return result;\n    }\n    setData(data) {\n        checkItemsAreOrdered(data);\n        checkSeriesValuesType(this._internal__series._internal_seriesType(), data);\n        this._internal__dataUpdatesConsumer._internal_applyNewData(this._internal__series, data);\n    }\n    update(bar) {\n        checkSeriesValuesType(this._internal__series._internal_seriesType(), [bar]);\n        this._internal__dataUpdatesConsumer._internal_updateData(this._internal__series, bar);\n    }\n    dataByIndex(logicalIndex, mismatchDirection) {\n        const data = this._internal__series._internal_bars()._internal_search(logicalIndex, mismatchDirection);\n        if (data === null) {\n            // actually it can be a whitespace\n            return null;\n        }\n        return getSeriesDataCreator(this.seriesType())(data);\n    }\n    setMarkers(data) {\n        checkItemsAreOrdered(data, true);\n        const convertedMarkers = data.map((marker) => (Object.assign(Object.assign({}, marker), { originalTime: marker.time, time: convertTime(marker.time) })));\n        this._internal__series._internal_setMarkers(convertedMarkers);\n    }\n    markers() {\n        return this._internal__series._internal_markers().map((internalItem) => {\n            const { originalTime, time } = internalItem, item = __rest(internalItem, [\"originalTime\", \"time\"]);\n            return Object.assign({ time: originalTime }, item);\n        });\n    }\n    applyOptions(options) {\n        this._internal__series._internal_applyOptions(options);\n    }\n    options() {\n        return clone(this._internal__series._internal_options());\n    }\n    priceScale() {\n        return this._private__priceScaleApiProvider.priceScale(this._internal__series._internal_priceScale()._internal_id());\n    }\n    createPriceLine(options) {\n        checkPriceLineOptions(options);\n        const strictOptions = merge(clone(priceLineOptionsDefaults), options);\n        const priceLine = this._internal__series._internal_createPriceLine(strictOptions);\n        return new PriceLine(priceLine);\n    }\n    removePriceLine(line) {\n        this._internal__series._internal_removePriceLine(line._internal_priceLine());\n    }\n    seriesType() {\n        return this._internal__series._internal_seriesType();\n    }\n}\n\nclass TimeScaleApi {\n    constructor(model, timeAxisWidget) {\n        this._private__timeRangeChanged = new Delegate();\n        this._private__logicalRangeChanged = new Delegate();\n        this._private__sizeChanged = new Delegate();\n        this._private__model = model;\n        this._private__timeScale = model._internal_timeScale();\n        this._private__timeAxisWidget = timeAxisWidget;\n        this._private__timeScale._internal_visibleBarsChanged()._internal_subscribe(this._private__onVisibleBarsChanged.bind(this));\n        this._private__timeScale._internal_logicalRangeChanged()._internal_subscribe(this._private__onVisibleLogicalRangeChanged.bind(this));\n        this._private__timeAxisWidget._internal_sizeChanged()._internal_subscribe(this._private__onSizeChanged.bind(this));\n    }\n    _internal_destroy() {\n        this._private__timeScale._internal_visibleBarsChanged()._internal_unsubscribeAll(this);\n        this._private__timeScale._internal_logicalRangeChanged()._internal_unsubscribeAll(this);\n        this._private__timeAxisWidget._internal_sizeChanged()._internal_unsubscribeAll(this);\n        this._private__timeRangeChanged._internal_destroy();\n        this._private__logicalRangeChanged._internal_destroy();\n        this._private__sizeChanged._internal_destroy();\n    }\n    scrollPosition() {\n        return this._private__timeScale._internal_rightOffset();\n    }\n    scrollToPosition(position, animated) {\n        if (!animated) {\n            this._private__model._internal_setRightOffset(position);\n            return;\n        }\n        this._private__timeScale._internal_scrollToOffsetAnimated(position, 1000 /* Constants.AnimationDurationMs */);\n    }\n    scrollToRealTime() {\n        this._private__timeScale._internal_scrollToRealTime();\n    }\n    getVisibleRange() {\n        var _a, _b;\n        const timeRange = this._private__timeScale._internal_visibleTimeRange();\n        if (timeRange === null) {\n            return null;\n        }\n        return {\n            from: (_a = timeRange.from._internal_businessDay) !== null && _a !== void 0 ? _a : timeRange.from._internal_timestamp,\n            to: (_b = timeRange.to._internal_businessDay) !== null && _b !== void 0 ? _b : timeRange.to._internal_timestamp,\n        };\n    }\n    setVisibleRange(range) {\n        const convertedRange = {\n            from: convertTime(range.from),\n            to: convertTime(range.to),\n        };\n        const logicalRange = this._private__timeScale._internal_logicalRangeForTimeRange(convertedRange);\n        this._private__model._internal_setTargetLogicalRange(logicalRange);\n    }\n    getVisibleLogicalRange() {\n        const logicalRange = this._private__timeScale._internal_visibleLogicalRange();\n        if (logicalRange === null) {\n            return null;\n        }\n        return {\n            from: logicalRange._internal_left(),\n            to: logicalRange._internal_right(),\n        };\n    }\n    setVisibleLogicalRange(range) {\n        assert(range.from <= range.to, 'The from index cannot be after the to index.');\n        this._private__model._internal_setTargetLogicalRange(range);\n    }\n    resetTimeScale() {\n        this._private__model._internal_resetTimeScale();\n    }\n    fitContent() {\n        this._private__model._internal_fitContent();\n    }\n    logicalToCoordinate(logical) {\n        const timeScale = this._private__model._internal_timeScale();\n        if (timeScale._internal_isEmpty()) {\n            return null;\n        }\n        else {\n            return timeScale._internal_indexToCoordinate(logical);\n        }\n    }\n    coordinateToLogical(x) {\n        if (this._private__timeScale._internal_isEmpty()) {\n            return null;\n        }\n        else {\n            return this._private__timeScale._internal_coordinateToIndex(x);\n        }\n    }\n    timeToCoordinate(time) {\n        const timePoint = convertTime(time);\n        const timePointIndex = this._private__timeScale._internal_timeToIndex(timePoint, false);\n        if (timePointIndex === null) {\n            return null;\n        }\n        return this._private__timeScale._internal_indexToCoordinate(timePointIndex);\n    }\n    coordinateToTime(x) {\n        var _a;\n        const timeScale = this._private__model._internal_timeScale();\n        const timePointIndex = timeScale._internal_coordinateToIndex(x);\n        const timePoint = timeScale._internal_indexToTime(timePointIndex);\n        if (timePoint === null) {\n            return null;\n        }\n        return (_a = timePoint._internal_businessDay) !== null && _a !== void 0 ? _a : timePoint._internal_timestamp;\n    }\n    width() {\n        return this._private__timeAxisWidget._internal_getSize().width;\n    }\n    height() {\n        return this._private__timeAxisWidget._internal_getSize().height;\n    }\n    subscribeVisibleTimeRangeChange(handler) {\n        this._private__timeRangeChanged._internal_subscribe(handler);\n    }\n    unsubscribeVisibleTimeRangeChange(handler) {\n        this._private__timeRangeChanged._internal_unsubscribe(handler);\n    }\n    subscribeVisibleLogicalRangeChange(handler) {\n        this._private__logicalRangeChanged._internal_subscribe(handler);\n    }\n    unsubscribeVisibleLogicalRangeChange(handler) {\n        this._private__logicalRangeChanged._internal_unsubscribe(handler);\n    }\n    subscribeSizeChange(handler) {\n        this._private__sizeChanged._internal_subscribe(handler);\n    }\n    unsubscribeSizeChange(handler) {\n        this._private__sizeChanged._internal_unsubscribe(handler);\n    }\n    applyOptions(options) {\n        this._private__timeScale._internal_applyOptions(options);\n    }\n    options() {\n        return clone(this._private__timeScale._internal_options());\n    }\n    _private__onVisibleBarsChanged() {\n        if (this._private__timeRangeChanged._internal_hasListeners()) {\n            this._private__timeRangeChanged._internal_fire(this.getVisibleRange());\n        }\n    }\n    _private__onVisibleLogicalRangeChanged() {\n        if (this._private__logicalRangeChanged._internal_hasListeners()) {\n            this._private__logicalRangeChanged._internal_fire(this.getVisibleLogicalRange());\n        }\n    }\n    _private__onSizeChanged(size) {\n        this._private__sizeChanged._internal_fire(size.width, size.height);\n    }\n}\n\nfunction patchPriceFormat(priceFormat) {\n    if (priceFormat === undefined || priceFormat.type === 'custom') {\n        return;\n    }\n    const priceFormatBuiltIn = priceFormat;\n    if (priceFormatBuiltIn.minMove !== undefined && priceFormatBuiltIn.precision === undefined) {\n        priceFormatBuiltIn.precision = precisionByMinMove(priceFormatBuiltIn.minMove);\n    }\n}\nfunction migrateHandleScaleScrollOptions(options) {\n    if (isBoolean(options.handleScale)) {\n        const handleScale = options.handleScale;\n        options.handleScale = {\n            axisDoubleClickReset: {\n                time: handleScale,\n                price: handleScale,\n            },\n            axisPressedMouseMove: {\n                time: handleScale,\n                price: handleScale,\n            },\n            mouseWheel: handleScale,\n            pinch: handleScale,\n        };\n    }\n    else if (options.handleScale !== undefined) {\n        const { axisPressedMouseMove, axisDoubleClickReset } = options.handleScale;\n        if (isBoolean(axisPressedMouseMove)) {\n            options.handleScale.axisPressedMouseMove = {\n                time: axisPressedMouseMove,\n                price: axisPressedMouseMove,\n            };\n        }\n        if (isBoolean(axisDoubleClickReset)) {\n            options.handleScale.axisDoubleClickReset = {\n                time: axisDoubleClickReset,\n                price: axisDoubleClickReset,\n            };\n        }\n    }\n    const handleScroll = options.handleScroll;\n    if (isBoolean(handleScroll)) {\n        options.handleScroll = {\n            horzTouchDrag: handleScroll,\n            vertTouchDrag: handleScroll,\n            mouseWheel: handleScroll,\n            pressedMouseMove: handleScroll,\n        };\n    }\n}\nfunction toInternalOptions(options) {\n    migrateHandleScaleScrollOptions(options);\n    return options;\n}\nclass ChartApi {\n    constructor(container, options) {\n        this._private__dataLayer = new DataLayer();\n        this._private__seriesMap = new Map();\n        this._private__seriesMapReversed = new Map();\n        this._private__clickedDelegate = new Delegate();\n        this._private__crosshairMovedDelegate = new Delegate();\n        const internalOptions = (options === undefined) ?\n            clone(chartOptionsDefaults) :\n            merge(clone(chartOptionsDefaults), toInternalOptions(options));\n        this._private__chartWidget = new ChartWidget(container, internalOptions);\n        this._private__chartWidget._internal_clicked()._internal_subscribe((paramSupplier) => {\n            if (this._private__clickedDelegate._internal_hasListeners()) {\n                this._private__clickedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        this._private__chartWidget._internal_crosshairMoved()._internal_subscribe((paramSupplier) => {\n            if (this._private__crosshairMovedDelegate._internal_hasListeners()) {\n                this._private__crosshairMovedDelegate._internal_fire(this._private__convertMouseParams(paramSupplier()));\n            }\n        }, this);\n        const model = this._private__chartWidget._internal_model();\n        this._private__timeScaleApi = new TimeScaleApi(model, this._private__chartWidget._internal_timeAxisWidget());\n    }\n    remove() {\n        this._private__chartWidget._internal_clicked()._internal_unsubscribeAll(this);\n        this._private__chartWidget._internal_crosshairMoved()._internal_unsubscribeAll(this);\n        this._private__timeScaleApi._internal_destroy();\n        this._private__chartWidget._internal_destroy();\n        this._private__seriesMap.clear();\n        this._private__seriesMapReversed.clear();\n        this._private__clickedDelegate._internal_destroy();\n        this._private__crosshairMovedDelegate._internal_destroy();\n        this._private__dataLayer._internal_destroy();\n    }\n    resize(width, height, forceRepaint) {\n        if (this.autoSizeActive()) {\n            // We return early here instead of checking this within the actual _chartWidget.resize method\n            // because this should only apply to external resize requests.\n            warn(`Height and width values ignored because 'autoSize' option is enabled.`);\n            return;\n        }\n        this._private__chartWidget._internal_resize(width, height, forceRepaint);\n    }\n    addAreaSeries(options) {\n        return this._private__addSeriesImpl('Area', areaStyleDefaults, options);\n    }\n    addBaselineSeries(options) {\n        return this._private__addSeriesImpl('Baseline', baselineStyleDefaults, options);\n    }\n    addBarSeries(options) {\n        return this._private__addSeriesImpl('Bar', barStyleDefaults, options);\n    }\n    addCandlestickSeries(options = {}) {\n        fillUpDownCandlesticksColors(options);\n        return this._private__addSeriesImpl('Candlestick', candlestickStyleDefaults, options);\n    }\n    addHistogramSeries(options) {\n        return this._private__addSeriesImpl('Histogram', histogramStyleDefaults, options);\n    }\n    addLineSeries(options) {\n        return this._private__addSeriesImpl('Line', lineStyleDefaults, options);\n    }\n    removeSeries(seriesApi) {\n        const series = ensureDefined(this._private__seriesMap.get(seriesApi));\n        const update = this._private__dataLayer._internal_removeSeries(series);\n        const model = this._private__chartWidget._internal_model();\n        model._internal_removeSeries(series);\n        this._private__sendUpdateToChart(update);\n        this._private__seriesMap.delete(seriesApi);\n        this._private__seriesMapReversed.delete(series);\n    }\n    _internal_applyNewData(series, data) {\n        this._private__sendUpdateToChart(this._private__dataLayer._internal_setSeriesData(series, data));\n    }\n    _internal_updateData(series, data) {\n        this._private__sendUpdateToChart(this._private__dataLayer._internal_updateSeriesData(series, data));\n    }\n    subscribeClick(handler) {\n        this._private__clickedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeClick(handler) {\n        this._private__clickedDelegate._internal_unsubscribe(handler);\n    }\n    subscribeCrosshairMove(handler) {\n        this._private__crosshairMovedDelegate._internal_subscribe(handler);\n    }\n    unsubscribeCrosshairMove(handler) {\n        this._private__crosshairMovedDelegate._internal_unsubscribe(handler);\n    }\n    priceScale(priceScaleId) {\n        return new PriceScaleApi(this._private__chartWidget, priceScaleId);\n    }\n    timeScale() {\n        return this._private__timeScaleApi;\n    }\n    applyOptions(options) {\n        this._private__chartWidget._internal_applyOptions(toInternalOptions(options));\n    }\n    options() {\n        return this._private__chartWidget._internal_options();\n    }\n    takeScreenshot() {\n        return this._private__chartWidget._internal_takeScreenshot();\n    }\n    autoSizeActive() {\n        return this._private__chartWidget._internal_autoSizeActive();\n    }\n    _private__addSeriesImpl(type, styleDefaults, options = {}) {\n        patchPriceFormat(options.priceFormat);\n        const strictOptions = merge(clone(seriesOptionsDefaults), clone(styleDefaults), options);\n        const series = this._private__chartWidget._internal_model()._internal_createSeries(type, strictOptions);\n        const res = new SeriesApi(series, this, this);\n        this._private__seriesMap.set(res, series);\n        this._private__seriesMapReversed.set(series, res);\n        return res;\n    }\n    _private__sendUpdateToChart(update) {\n        const model = this._private__chartWidget._internal_model();\n        model._internal_updateTimeScale(update._internal_timeScale._internal_baseIndex, update._internal_timeScale._internal_points, update._internal_timeScale._internal_firstChangedPointIndex);\n        update._internal_series.forEach((value, series) => series._internal_setData(value._internal_data, value._internal_info));\n        model._internal_recalculateAllPanes();\n    }\n    _private__mapSeriesToApi(series) {\n        return ensureDefined(this._private__seriesMapReversed.get(series));\n    }\n    _private__convertMouseParams(param) {\n        const seriesData = new Map();\n        param._internal_seriesData.forEach((plotRow, series) => {\n            const data = getSeriesDataCreator(series._internal_seriesType())(plotRow);\n            assert(isFulfilledData(data));\n            seriesData.set(this._private__mapSeriesToApi(series), data);\n        });\n        const hoveredSeries = param._internal_hoveredSeries === undefined ? undefined : this._private__mapSeriesToApi(param._internal_hoveredSeries);\n        return {\n            time: param._internal_time,\n            logical: param._internal_index,\n            point: param._internal_point,\n            hoveredSeries,\n            hoveredObjectId: param._internal_hoveredObject,\n            seriesData,\n            sourceEvent: param._internal_touchMouseEventData,\n        };\n    }\n}\n\n/**\n * This function is the main entry point of the Lightweight Charting Library.\n *\n * @param container - ID of HTML element or element itself\n * @param options - Any subset of options to be applied at start.\n * @returns An interface to the created chart\n */\nfunction createChart(container, options) {\n    let htmlElement;\n    if (isString(container)) {\n        const element = document.getElementById(container);\n        assert(element !== null, `Cannot find element in DOM with id=${container}`);\n        htmlElement = element;\n    }\n    else {\n        htmlElement = container;\n    }\n    return new ChartApi(htmlElement, options);\n}\n\n/// <reference types=\"_build-time-constants\" />\n/**\n * Returns the current version as a string. For example `'3.3.0'`.\n */\nfunction version() {\n    return \"4.0.1\";\n}\n\nexport { ColorType, CrosshairMode, LastPriceAnimationMode, LineStyle, LineType, MismatchDirection, PriceLineSource, PriceScaleMode, TickMarkType, TrackingModeExitMode, createChart, isBusinessDay, isUTCTimestamp, version };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}